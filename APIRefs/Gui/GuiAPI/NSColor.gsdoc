<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSColor" stylesheeturl="default-styles.css" up="Gui">
  <head>
    <title>NSColor</title>
    <author name="Scott Christley">
      <email address="scottc@net-community.com">
        scottc@net-community.com
      </email>
    </author>
    <author name="Fred Kiefer">
      <email address="fredkiefer@gmx.de">
        fredkiefer@gmx.de
      </email>
    </author>
    <date>Generated at 2024-11-13 12:52:37 -0500</date>
    <abstract>The colorful color class</abstract>
    <copy>
      1996, 1998, 2001, 2002 Free Software Foundation, Inc.
    </copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSColor class
      </heading>
      <class name="NSColor" super="NSObject" ovadd="1.0.0">
        <declared>AppKit/NSColor.h</declared>
        <conform>NSCoding</conform>
        <conform>NSCopying</conform>
        <desc>
          <p>
            TODO NSColor description
          </p>
        </desc>
        <method type="NSColor*" factory="yes" ovadd="10.2.0">
          <sel>alternateSelectedControlColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.2.0">
          <sel>alternateSelectedControlTextColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>blackColor</sel>
          <desc>
            <p>
              Returns a NSColor in a
              NSCalibratedWhiteColorSpace
              space name. with white and alpha values set as
              NSBlack and 1.0 respectively.
            </p>
            <p>
              See Also :
              <ref type="method" id="+colorWithCalibratedWhite:alpha:">+colorWithCalibratedWhite:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>blueColor</sel>
          <desc>
            <p>
              Returns an NSColor in a NSCalibratedRGBColorSpace
              space name. with red, green, blue and alpha values
              set as 0.0, 0.0, 1.0 and 1.0 respectively.
            </p>
            <p>
              See Also :
              <ref type="method" id="+colorWithCalibratedRed:green:blue:alpha:">+colorWithCalibratedRed:green:blue:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>brownColor</sel>
          <desc>
            <p>
              Returns a NSColor in a NSCalibratedRGBColorSpace
              space name. with red, green, blue and alpha values
              set as 0.6, 0.4, 0.2 and 1.0 respectively.
            </p>
            <p>
              See Also:
              <ref type="method" id="+colorWithCalibratedRed:green:blue:alpha:">+colorWithCalibratedRed:green:blue:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>clearColor</sel>
          <desc>
            <p>
              Returns a NSColor in a
              NSCalibratedWhiteColorSpace
              space name. with white and alpha values set as 0.0
              and 1.0 respectively.
            </p>
            <p>
              See Also :
              <ref type="method" id="+colorWithCalibratedWhite:alpha:">+colorWithCalibratedWhite:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>colorForControlTint:</sel>
          <arg type="NSControlTint">controlTint</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>colorFromPasteboard:</sel>
          <arg type="NSPasteboard*">pasteBoard</arg>
          <desc>
            <p>
              Returns the NSColor on the NSPasteboard
              <var>pasteBoard</var> or <code>nil</code> if it
              does not exists.
            </p>
            <p>
              See Also:
              <ref type="method" id="-writeToPasteboard:">
                -writeToPasteboard:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>colorWithCalibratedHue:</sel>
          <arg type="CGFloat">hue</arg>
          <sel>saturation:</sel>
          <arg type="CGFloat">saturation</arg>
          <sel>brightness:</sel>
          <arg type="CGFloat">brightness</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <p>
              Creates and returns a new NSColor in a
              NSCalibratedRGBColorSpace space
              name, with <var>hue</var>, <var>saturation</var>,
              <var>brightness</var> and <var>alpha</var> as
              specified. Valid values are the range 0.0 to
              1.0. Out of range values will be clipped.
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>colorWithCalibratedRed:</sel>
          <arg type="CGFloat">red</arg>
          <sel>green:</sel>
          <arg type="CGFloat">green</arg>
          <sel>blue:</sel>
          <arg type="CGFloat">blue</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <p>
              Creates and returns a new NSColor in a
              NSCalibratedRGBColorSpace space
              name, with <var>red</var>, <var>green</var>,
              <var>blue</var> and <var>alpha</var> as specified.
              Valid values are the range 0.0 to 1.0. Out of range
              values will be clipped.
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>colorWithCalibratedWhite:</sel>
          <arg type="CGFloat">white</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <p>
              Creates and returns a new NSColor in a
              NSCalibratedWhiteColorSpace
              space name, with red, green, blue and
              <var>alpha</var> as specified. Valid values are the
              range 0.0 to 1.0. Out of range values will be
              clipped.
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>colorWithCatalogName:</sel>
          <arg type="NSString*">listName</arg>
          <sel>colorName:</sel>
          <arg type="NSString*">colorName</arg>
          <desc>
            <p>
              TODO
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.4.0">
          <sel>colorWithColorSpace:</sel>
          <arg type="NSColorSpace*">space</arg>
          <sel>components:</sel>
          <arg type="const CGFloat*">comp</arg>
          <sel>count:</sel>
          <arg type="NSInteger">number</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.12.0">
          <sel>colorWithColorSpace:</sel>
          <arg type="NSColorSpace*">space</arg>
          <sel>hue:</sel>
          <arg type="CGFloat">hue</arg>
          <sel>saturation:</sel>
          <arg type="CGFloat">saturation</arg>
          <sel>brightness:</sel>
          <arg type="CGFloat">brightness</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>colorWithDeviceCyan:</sel>
          <arg type="CGFloat">cyan</arg>
          <sel>magenta:</sel>
          <arg type="CGFloat">magenta</arg>
          <sel>yellow:</sel>
          <arg type="CGFloat">yellow</arg>
          <sel>black:</sel>
          <arg type="CGFloat">black</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <p>
              Creates and returns a new NSColor in a
              NSDeviceCMYKColorSpace space name,
              with <var>cyan</var>, <var>magenta</var>,
              <var>yellow</var>, <var>black</var> and
              <var>alpha</var> as specified. Valid values are the
              range 0.0 to 1.0. Out of range values will be
              clipped.
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>colorWithDeviceHue:</sel>
          <arg type="CGFloat">hue</arg>
          <sel>saturation:</sel>
          <arg type="CGFloat">saturation</arg>
          <sel>brightness:</sel>
          <arg type="CGFloat">brightness</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <p>
              Creates and returns a new NSColor in a
              NSDeviceCMYKColorSpace space name,
              with <var>hue</var>, <var>saturation</var>,
              <var>brightness</var> and <var>alpha</var> as
              specified. Valid values are the range 0.0 to
              1.0. Out of range values will be clipped.
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>colorWithDeviceRed:</sel>
          <arg type="CGFloat">red</arg>
          <sel>green:</sel>
          <arg type="CGFloat">green</arg>
          <sel>blue:</sel>
          <arg type="CGFloat">blue</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <p>
              Creates and returns a new NSColor in a
              NSDeviceCMYKColorSpace space name,
              with <var>red</var>, <var>green</var>,
              <var>blue</var> and <var>alpha</var> as specified.
              Valid values are the range 0.0 to 1.0. Out of range
              values will be clipped.
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>colorWithDeviceWhite:</sel>
          <arg type="CGFloat">white</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <p>
              Creates and returns a new NSColor in a
              NSDeviceWhiteColorSpace space
              name, with red, green, blue and <var>alpha</var> as
              specified. Valid values are the range 0.0 to
              1.0. Out of range values will be clipped.
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.12.0">
          <sel>colorWithDisplayP3Red:</sel>
          <arg type="CGFloat">red</arg>
          <sel>green:</sel>
          <arg type="CGFloat">green</arg>
          <sel>blue:</sel>
          <arg type="CGFloat">blue</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.7.0">
          <sel>colorWithGenericGamma22White:</sel>
          <arg type="CGFloat">white</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.9.0">
          <sel>colorWithHue:</sel>
          <arg type="CGFloat">hue</arg>
          <sel>saturation:</sel>
          <arg type="CGFloat">saturation</arg>
          <sel>brightness:</sel>
          <arg type="CGFloat">brightness</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>colorWithPatternImage:</sel>
          <arg type="NSImage*">image</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.9.0">
          <sel>colorWithRed:</sel>
          <arg type="CGFloat">red</arg>
          <sel>green:</sel>
          <arg type="CGFloat">green</arg>
          <sel>blue:</sel>
          <arg type="CGFloat">blue</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.7.0">
          <sel>colorWithSRGBRed:</sel>
          <arg type="CGFloat">red</arg>
          <sel>green:</sel>
          <arg type="CGFloat">green</arg>
          <sel>blue:</sel>
          <arg type="CGFloat">blue</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.9.0">
          <sel>colorWithWhite:</sel>
          <arg type="CGFloat">white</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSArray*" factory="yes" ovadd="10.3.0">
          <sel>controlAlternatingRowBackgroundColors</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>controlBackgroundColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>controlColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>controlDarkShadowColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>controlHighlightColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>controlLightHighlightColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>controlShadowColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>controlTextColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSControlTint" factory="yes" ovadd="10.3.0">
          <sel>currentControlTint</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>cyanColor</sel>
          <desc>
            <p>
              Returns a NSColor in a NSCalibratedRGBColorSpace
              space name. with red, green, blue and alpha values
              set as 0.0, 1.0, 1.0 and 1.0 respectively.
            </p>
            <p>
              See Also :
              <ref type="method" id="+colorWithCalibratedRed:green:blue:alpha:">+colorWithCalibratedRed:green:blue:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>darkGrayColor</sel>
          <desc>
            <p>
              Returns a NSColor in a
              NSCalibratedWhiteColorSpace
              space name. with white and alpha values set as
              NSDarkGray and 1.0 respectively.
            </p>
            <p>
              See Also :
              <ref type="method" id="+colorWithCalibratedWhite:alpha:">+colorWithCalibratedWhite:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>disabledControlTextColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>grayColor</sel>
          <desc>
            <p>
              Returns a NSColor in a
              NSCalibratedWhiteColorSpace
              space name. with white and alpha values set as
              NSGray and 1.0 respectively.
            </p>
            <p>
              See Also:
              <ref type="method" id="+colorWithCalibratedWhite:alpha:">+colorWithCalibratedWhite:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>greenColor</sel>
          <desc>
            <p>
              Returns a NSColor in a NSCalibratedRGBColorSpace
              space name. with red, green, blue and alpha values
              set as 0.0, 1.0, 0.0 and 1.0 respectively
            </p>
            <p>
              See Also:
              <ref type="method" id="+colorWithCalibratedRed:green:blue:alpha:">+colorWithCalibratedRed:green:blue:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>gridColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>headerColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>headerTextColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>highlightColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" factory="yes" ovadd="1.0.0">
          <sel>ignoresAlpha</sel>
          <desc>
            Returns whether TODO
            <p>
              See Also:
              <ref type="method" id="+setIgnoresAlpha:">
                +setIgnoresAlpha:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>keyboardFocusIndicatorColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>knobColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.10.0">
          <sel>labelColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>lightGrayColor</sel>
          <desc>
            <p>
              Returns a NSColor in a
              NSCalibratedWhiteColorSpace
              space name. with white and alpha values set as
              NSLightGray and 1.0 respectively
            </p>
            <p>
              See Also :
              <ref type="method" id="+colorWithCalibratedRed:green:blue:alpha:">+colorWithCalibratedRed:green:blue:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>magentaColor</sel>
          <desc>
            <p>
              Returns a NSColor in a NSCalibratedRGBColorSpace
              space name. with red, green, blue and alpha values
              set as 1.0, 0.0, 1.0 and 1.0 respectively.
            </p>
            <p>
              See Also :
              <ref type="method" id="+colorWithCalibratedRed:green:blue:alpha:">+colorWithCalibratedRed:green:blue:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>orangeColor</sel>
          <desc>
            <p>
              Returns a NSColor in a NSCalibratedRGBColorSpace
              space name. with red, green, blue and alpha values
              set as 1.0, 0.5, 0.0 and 1.0 respectively.
            </p>
            <p>
              See Also:
              <ref type="method" id="+colorWithCalibratedRed:green:blue:alpha:">+colorWithCalibratedRed:green:blue:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>purpleColor</sel>
          <desc>
            <p>
              Returns a NSColor in a NSCalibratedRGBColorSpace
              space name. with red, green, blue and alpha values
              set as 0.5, 0.0, 0.5 and 1.0 respectively.
            </p>
            <p>
              See Also :
              <ref type="method" id="+colorWithCalibratedRed:green:blue:alpha:">+colorWithCalibratedRed:green:blue:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.10.0">
          <sel>quaternaryLabelColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>redColor</sel>
          <desc>
            <p>
              Returns a NSColor in a NSCalibratedRGBColorSpace
              space name. with red, green, blue and alpha values
              set as 1.0, 0.0, 0.0 and 1.0 respectively
            </p>
            <p>
              See Also:
              <ref type="method" id="+colorWithCalibratedRed:green:blue:alpha:">+colorWithCalibratedRed:green:blue:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>scrollBarColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.10.0">
          <sel>secondaryLabelColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>secondarySelectedControlColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>selectedControlColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>selectedControlTextColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>selectedKnobColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>selectedMenuItemColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>selectedMenuItemTextColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>selectedTextBackgroundColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>selectedTextColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>setIgnoresAlpha:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            TODO
            <p>
              See Also:
              <ref type="method" id="+ignoresAlpha">
                +ignoresAlpha
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>shadowColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.10.0">
          <sel>systemBlueColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.10.0">
          <sel>systemBrownColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.10.0">
          <sel>systemGrayColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.10.0">
          <sel>systemGreenColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.15.0">
          <sel>systemIndigoColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.10.0">
          <sel>systemOrangeColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.10.0">
          <sel>systemPinkColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.10.0">
          <sel>systemPurpleColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.10.0">
          <sel>systemRedColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.15.0">
          <sel>systemTealColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.10.0">
          <sel>systemYellowColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.10.0">
          <sel>tertiaryLabelColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>textBackgroundColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>textColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>toolTipColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>toolTipTextColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>whiteColor</sel>
          <desc>
            <p>
              Returns a NSColor in a
              NSCalibratedWhiteColorSpace
              space name. with white and alpha values set as
              NSWhite and 1.0 respectively.
            </p>
            <p>
              See Also :
              <ref type="method" id="+colorWithCalibratedWhite:alpha:">+colorWithCalibratedWhite:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>windowBackgroundColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>windowFrameColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="10.0.0">
          <sel>windowFrameTextColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" factory="yes" ovadd="1.0.0">
          <sel>yellowColor</sel>
          <desc>
            <p>
              Returns a NSColor in a NSCalibratedRGBColorSpace
              space name. with red, green, blue and alpha values
              set as 1.0, 0.0, 0.0 and 1.0 respectively.
            </p>
            <p>
              See Also :
              <ref type="method" id="+colorWithCalibratedRed:green:blue:alpha:">+colorWithCalibratedRed:green:blue:alpha:</ref>
            </p>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>alphaComponent</sel>
          <desc>
            <p>
              Returns the alpha component.
            </p>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>blackComponent</sel>
          <desc>
            <p>
              Returns the black component. Raises a
              NSInternalInconsistencyException
              if NSColor is not a CMYK color.
            </p>
          </desc>
        </method>
        <method type="NSColor*" ovadd="1.0.0">
          <sel>blendedColorWithFraction:</sel>
          <arg type="CGFloat">fraction</arg>
          <sel>ofColor:</sel>
          <arg type="NSColor*">aColor</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>blueComponent</sel>
          <desc>
            <p>
              Returns the blue component. Raises a
              NSInternalInconsistencyException
              if NSColor is not a RGB color.
            </p>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>brightnessComponent</sel>
          <desc>
            <p>
              Returns the brightness component. Raises a
              NSInternalInconsistencyException
              if NSColor space is not a RGB color
            </p>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>catalogNameComponent</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>colorNameComponent</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColorSpace*" ovadd="10.4.0">
          <sel>colorSpace</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>colorSpaceName</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" ovadd="10.4.0">
          <sel>colorUsingColorSpace:</sel>
          <arg type="NSColorSpace*">space</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" ovadd="1.0.0">
          <sel>colorUsingColorSpaceName:</sel>
          <arg type="NSString*">colorSpace</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" ovadd="1.0.0">
          <sel>colorUsingColorSpaceName:</sel>
          <arg type="NSString*">colorSpace</arg>
          <sel>device:</sel>
          <arg type="NSDictionary*">deviceDescription</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" ovadd="10.13.0">
          <sel>colorUsingType:</sel>
          <arg type="NSColorType">type</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" ovadd="1.0.0">
          <sel>colorWithAlphaComponent:</sel>
          <arg type="CGFloat">alpha</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" ovadd="10.14.0">
          <sel>colorWithSystemEffect:</sel>
          <arg type="NSColorSystemEffect">systemEffect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>cyanComponent</sel>
          <desc>
            <p>
              Returns the cyan component. Raises a
              NSInternalInconsistencyException
              if NSColor is not a CYMK color
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>drawSwatchInRect:</sel>
          <arg type="NSRect">rect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.4.0">
          <sel>getComponents:</sel>
          <arg type="CGFloat*">components</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>getCyan:</sel>
          <arg type="CGFloat*">cyan</arg>
          <sel>magenta:</sel>
          <arg type="CGFloat*">magenta</arg>
          <sel>yellow:</sel>
          <arg type="CGFloat*">yellow</arg>
          <sel>black:</sel>
          <arg type="CGFloat*">black</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat*">alpha</arg>
          <desc>
            <p>
              Gets the <var>cyan</var>, <var>magenta</var>,
              <var>yellow</var>,black and <var>alpha</var> values
              from the NSColor. Raises a
              NSInternalInconsistencyException
              if the NSColor is not a CYMK color
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>getHue:</sel>
          <arg type="CGFloat*">hue</arg>
          <sel>saturation:</sel>
          <arg type="CGFloat*">saturation</arg>
          <sel>brightness:</sel>
          <arg type="CGFloat*">brightness</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat*">alpha</arg>
          <desc>
            <p>
              Gets the <var>hue</var>, <var>saturation</var>,
              <var>brightness</var> and <var>alpha</var> values
              from the NSColor. Raises a
              NSInternalInconsistencyException
              if the NSColor is not a RGB color
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>getRed:</sel>
          <arg type="CGFloat*">red</arg>
          <sel>green:</sel>
          <arg type="CGFloat*">green</arg>
          <sel>blue:</sel>
          <arg type="CGFloat*">blue</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat*">alpha</arg>
          <desc>
            <p>
              Gets the <var>red</var>, <var>green</var>,
              <var>blue</var> and <var>alpha</var> values from
              the NSColor. Raises a
              NSInternalInconsistencyException
              if the NSColor is not a RGB color
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>getWhite:</sel>
          <arg type="CGFloat*">white</arg>
          <sel>alpha:</sel>
          <arg type="CGFloat*">alpha</arg>
          <desc>
            <p>
              Gets the <var>white</var> <var>alpha</var> values
              from the NSColor. Raises a
              NSInternalInconsistencyException
              if the NSColor is not a greyscale color
            </p>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>greenComponent</sel>
          <desc>
            <p>
              Returns the green component. Raises a
              NSInternalInconsistencyException
              if NSColor is not a RGB color
            </p>
          </desc>
        </method>
        <method type="NSColor*" ovadd="10.0.0">
          <sel>highlightWithLevel:</sel>
          <arg type="CGFloat">level</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>hueComponent</sel>
          <desc>
            <p>
              Returns the hue component. Raises a
              NSInternalInconsistencyException
              if NSColor is not a RGB color
            </p>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>localizedCatalogNameComponent</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>localizedColorNameComponent</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>magentaComponent</sel>
          <desc>
            <p>
              Returns the magenta component. Raises a
              NSInternalInconsistencyException
              if NSColor is not a CMYK color
            </p>
          </desc>
        </method>
        <method type="NSInteger" ovadd="10.4.0">
          <sel>numberOfComponents</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSImage*" ovadd="10.0.0">
          <sel>patternImage</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>redComponent</sel>
          <desc>
            <p>
              Returns the red component. Raises a
              NSInternalInconsistencyException
              if NSColor is not a RGB color
            </p>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>saturationComponent</sel>
          <desc>
            <p>
              Returns the saturation component. Raises a
              NSInternalInconsistencyException
              if NSColor is not a RGB color
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>set</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>setFill</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>setStroke</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" ovadd="10.0.0">
          <sel>shadowWithLevel:</sel>
          <arg type="CGFloat">level</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColorType" ovadd="10.13.0">
          <sel>type</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>whiteComponent</sel>
          <desc>
            <p>
              Returns the white component. Raises a
              NSInternalInconsistencyException
              if NSColor is not a grayscale color
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>writeToPasteboard:</sel>
          <arg type="NSPasteboard*">pasteBoard</arg>
          <desc>
            <p>
              Writes the NSColor into the NSPasteboard specified
              by <var>pasteBoard</var>
            </p>
            <p>
              See Also:
              <ref type="method" id="+colorFromPasteboard:">
                +colorFromPasteboard:
              </ref>
            </p>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>yellowComponent</sel>
          <desc>
            <p>
              Returns the yellow component. Raises a
              NSInternalInconsistencyException
              if NSColor is not a RGB color
            </p>
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSCoder(NSCoderAdditions) category
      </heading>
      <category name="NSCoderAdditions" class="NSCoder" ovadd="0.0.0" ovrem="0.0.0">
        <declared>AppKit/NSColor.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="NSColor*" ovadd="0.0.0" ovrem="0.0.0">
          <sel>decodeNXColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSColor(GSQuartz)
        category
      </heading>
      <category name="GSQuartz" class="NSColor" ovadd="1.0.0">
        <declared>AppKit/NSColor.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="CGColorRef" ovadd="10.3.0">
          <sel>CGColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </category>
    </chapter>
  </body>
</gsdoc>
