<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSCursor" stylesheeturl="default-styles.css" up="Gui">
  <head>
    <title>NSCursor</title>
    <author name="Scott Christley">
      <email address="scottc@net-community.com">
        scottc@net-community.com
      </email>
    </author>
    <author name="Adam Fedor">
      <email address="fedor@gnu.org">
        fedor@gnu.org
      </email>
    </author>
    <date>Generated at 2024-11-13 12:52:37 -0500</date>
    <abstract>Holds an image to use as a cursor</abstract>
    <copy>1996,1999,2001 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSCursor class
      </heading>
      <class name="NSCursor" super="NSObject" ovadd="1.0.0">
        <declared>AppKit/NSCursor.h</declared>
        <conform>NSCoding</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <ivariable type="void*" name="_cid" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSImage*" name="_cursor_image" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSPoint" name="_hot_spot" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="struct GSCursorFlagsType" name="struct GSCursorFlagsType" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <method type="NSCursor*" factory="yes" ovadd="1.0.0">
          <sel>IBeamCursor</sel>
          <desc>
            <p>
              Returns an I-beam cursor.
            </p>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="1.0.0">
          <sel>arrowCursor</sel>
          <desc>
            <p>
              Returns an arrow cursor.
            </p>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.3.0">
          <sel>closedHandCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.6.0">
          <sel>contextualMenuCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSUInteger" factory="yes" ovadd="1.0.0">
          <sel>count</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.3.0">
          <sel>crosshairCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="1.0.0">
          <sel>currentCursor</sel>
          <desc>
            <p>
              Returns the current cursor.
            </p>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.6.0">
          <sel>currentSystemCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.3.0">
          <sel>disappearingItemCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.6.0">
          <sel>dragCopyCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.6.0">
          <sel>dragLinkCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="0.0.0" ovrem="0.0.0">
          <sel>greenArrowCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>hide</sel>
          <desc>
            <p>
              Hides the current cursor.
            </p>
          </desc>
        </method>
        <method type="BOOL" factory="yes" ovadd="1.0.0">
          <sel>isHiddenUntilMouseMoves</sel>
          <desc>
            <p>
              Returns whther the cursor is hidden until mouse
              moves
            </p>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.3.0">
          <sel>openHandCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.6.0">
          <sel>operationNotAllowedCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.3.0">
          <sel>pointingHandCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>pop</sel>
          <desc>
            <p>
              Pops the cursor off the top of the stack and makes
              the previous one as the current cursor.
            </p>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.3.0">
          <sel>resizeDownCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.3.0">
          <sel>resizeLeftCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.3.0">
          <sel>resizeLeftRightCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.3.0">
          <sel>resizeRightCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.3.0">
          <sel>resizeUpCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSCursor*" factory="yes" ovadd="10.3.0">
          <sel>resizeUpDownCursor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>setHiddenUntilMouseMoves:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Hides the cursor if <var>flag</var> is
              <code>YES</code>. Unhides it if <code>NO</code>
            </p>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>unhide</sel>
          <desc>
            <p>
              Shows the NSCursor.
            </p>
            <p>
              See Also: <ref type="method" id="+hide">+hide</ref>
            </p>
          </desc>
        </method>
        <method type="NSPoint" ovadd="1.0.0">
          <sel>hotSpot</sel>
          <desc>
            <p>
              Returns the hot spot point of the NSCursor. This
              is in the cursor's coordinate system which is a
              flipped on (origin at the top left of the
              cursor).
            </p>
          </desc>
        </method>
        <method type="NSImage*" ovadd="1.0.0">
          <sel>image</sel>
          <desc>
            <p>
              Returns the image of the NSCursor
            </p>
          </desc>
        </method>
        <method type="id" ovadd="0.0.0" ovrem="0.0.0">
          <sel>initWithImage:</sel>
          <arg type="NSImage*">newImage</arg>
          <desc>
            <p>
              Initializes and returns a new NSCursor with a
              NSImage <var>newImage</var> and a hot spot point
              with x=0 and y=0 (top left corner).
            </p>
            <p>
              See Also:
              <ref type="method" id="-initWithImage:hotSpot:">
                -initWithImage:hotSpot:
              </ref>
            </p>
          </desc>
        </method>
        <method type="id" ovadd="10.0.0">
          <sel>initWithImage:</sel>
          <arg type="NSImage*">newImage</arg>
          <sel>foregroundColorHint:</sel>
          <arg type="NSColor*">fg</arg>
          <sel>backgroundColorHint:</sel>
          <arg type="NSColor*">bg</arg>
          <sel>hotSpot:</sel>
          <arg type="NSPoint">hotSpot</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>initWithImage:</sel>
          <arg type="NSImage*">newImage</arg>
          <sel>hotSpot:</sel>
          <arg type="NSPoint">hotSpot</arg>
          <desc>
            <p>
              Initializes and returns a new NSCursor with a
              NSImage <var>newImage</var> and the hot spot to
              <var>hotSpot</var>.
            </p>
            <p>
              NB. The coordinate system of an NSCursor is flipped,
              so a <var>hotSpot</var> at 0,0 is in the top left
              corner of the cursor.
            </p>
            <p>
              See Also:
              <ref type="method" id="-initWithImage:">
                -initWithImage:
              </ref>
              <ref type="method" id="-setImage:">
                -setImage:
              </ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isSetOnMouseEntered</sel>
          <desc>
            <p>
              Returns whether if the cursor is set on
              <ref type="method" id="-mouseEntered:">
                -mouseEntered:
              </ref>
              .
            </p>
            <p>
              See Also:
              <ref type="method" id="-setOnMouseEntered:">
                -setOnMouseEntered:
              </ref>
              <ref type="method" id="-mouseEntered:">
                -mouseEntered:
              </ref>
              <ref type="method" id="-set">
                -set
              </ref>
              <ref type="method" id="-isSetOnMouseExited">
                -isSetOnMouseExited
              </ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isSetOnMouseExited</sel>
          <desc>
            <p>
              Returns whether if the cursor is push on
              <ref type="method" id="-mouseExited:">
                -mouseExited:
              </ref>
              .
            </p>
            <p>
              See Also:
              <ref type="method" id="-setOnMouseEntered:">
                -setOnMouseEntered:
              </ref>
              <ref type="method" id="-mouseExited:">
                -mouseExited:
              </ref>
              <ref type="method" id="-set">
                -set
              </ref>
              <ref type="method" id="-isSetOnMouseEntered">
                -isSetOnMouseEntered
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>mouseEntered:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <desc>
            <p>
              Sets the cursor if
              <ref type="method" id="-isSetOnMouseEntered">
                -isSetOnMouseEntered
              </ref>
              is <code>YES</code> or pushs the cursor if
              <ref type="method" id="-isSetOnMouseExited">
                -isSetOnMouseExited
              </ref>
              is <code>NO</code>
            </p>
            <p>
              See Also:
              <ref type="method" id="-isSetOnMouseEntered">
                -isSetOnMouseEntered
              </ref>
              <ref type="method" id="-isSetOnMouseExited">
                -isSetOnMouseExited
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>mouseExited:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <desc>
            <p>
              Sets the cursor if
              <ref type="method" id="-isSetOnMouseExited">
                -isSetOnMouseExited
              </ref>
              is <code>YES</code> or pops the cursor if
              <ref type="method" id="-isSetOnMouseEntered">
                -isSetOnMouseEntered
              </ref>
              is <code>NO</code>
            </p>
            <p>
              See Also:
              <ref type="method" id="-isSetOnMouseExited">
                -isSetOnMouseExited
              </ref>
              <ref type="method" id="-isSetOnMouseEntered">
                -isSetOnMouseEntered
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>pop</sel>
          <desc>
            <p>
              Pops the cursor off the top of the stack and makes
              the previous the current cursor.
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>push</sel>
          <desc>
            <p>
              Adds the NSCursor into the cursor stack and makes it
              the current cursor.
            </p>
            <p>
              See Also: <ref type="method" id="-pop">-pop</ref>
              <ref type="method" id="-set">
                -set
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>set</sel>
          <desc>
            <p>
              Sets the NSCursor as the current cursor.
            </p>
          </desc>
        </method>
        <method type="void" ovadd="0.0.0" ovrem="0.0.0">
          <sel>setHotSpot:</sel>
          <arg type="NSPoint">spot</arg>
          <desc>
            <p>
              Sets the hot <var>spot</var> point of the NSCursor
              to <var>spot</var>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="0.0.0" ovrem="0.0.0">
          <sel>setImage:</sel>
          <arg type="NSImage*">newImage</arg>
          <desc>
            <p>
              Sets <var>newImage</var> the image of the NSCursor
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setOnMouseEntered:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether if the cursor is set on
              <ref type="method" id="-mouseEntered:">
                -mouseEntered:
              </ref>
              .
            </p>
            <p>
              See Also:
              <ref type="method" id="-isSetOnMouseEntered">
                -isSetOnMouseEntered
              </ref>
              <ref type="method" id="-mouseEntered:">
                -mouseEntered:
              </ref>
              <ref type="method" id="-set">
                -set
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setOnMouseExited:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether if the cursor is push on
              <ref type="method" id="-mouseExited:">
                -mouseExited:
              </ref>
              .
            </p>
            <p>
              See Also:
              <ref type="method" id="-isSetOnMouseExited">
                -isSetOnMouseExited
              </ref>
              <ref type="method" id="-mouseExited:">
                -mouseExited:
              </ref>
              <ref type="method" id="-set">
                -set
              </ref>
            </p>
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
