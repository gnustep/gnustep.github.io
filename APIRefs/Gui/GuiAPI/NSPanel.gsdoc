<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSPanel" stylesheeturl="default-styles.css" up="Gui">
  <head>
    <title>NSPanel</title>
    <author name="Scott Christley">
      <email address="scottc@net-community.com">
        scottc@net-community.com
      </email>
    </author>
    <date>Generated at 2024-11-13 12:52:37 -0500</date>
    <abstract>
      Panel window class and related functions
    </abstract>
    <copy>1996 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSPanel class
      </heading>
      <class name="NSPanel" super="NSWindow" ovadd="1.0.0">
        <declared>AppKit/NSPanel.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="BOOL" ovadd="1.0.0">
          <sel>becomesKeyOnlyIfNeeded</sel>
          <desc>
            <p>
              Returns whether if the NSPanel becomes key window
              only when a view require to be the first responder.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setBecomesKeyOnlyIfNeeded:">
                -setBecomesKeyOnlyIfNeeded:
              </ref>
              <ref type="method" id="-needsPanelToBecomeKey" class="NSView">[NSView -needsPanelToBecomeKey]</ref> <ref type="method" id="-sendEvent:" class="NSWindow">[NSWindow -sendEvent:]</ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isFloatingPanel</sel>
          <desc>
            <p>
              Returns whether the NSPanel is a floating panel,
              e.g. the window level is NSFloatingWindowLevel
              instead of NSNormalWindowLevel.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setFloatingPanel:">
                -setFloatingPanel:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setBecomesKeyOnlyIfNeeded:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether if the NSPanel becomes key window only
              when a view require to be the first responder.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setBecomesKeyOnlyIfNeeded:">
                -setBecomesKeyOnlyIfNeeded:
              </ref>
              <ref type="method" id="-needsPanelToBecomeKey" class="NSView">[NSView -needsPanelToBecomeKey]</ref> <ref type="method" id="-sendEvent:" class="NSWindow">[NSWindow -sendEvent:]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setFloatingPanel:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether the NSPanel is a floating panel, e.g.
              the window level is NSFloatingWindowLevel instead of
              NSNormalWindowLevel.
            </p>
            <p>
              See Also:
              <ref type="method" id="-isFloatingPanel">
                -isFloatingPanel
              </ref>
              <ref type="method" id="-setLevel:" class="NSWindow">
                [NSWindow -setLevel:]
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setWorksWhenModal:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether the NSPanel can receive events when
              another window/panel runs modally.
            </p>
            See Also:
            <ref type="method" id="-worksWhenModal">
              -worksWhenModal
            </ref>
            <ref type="method" id="-runModalSession:" class="NSApplication">[NSApplication -runModalSession:]</ref>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>worksWhenModal</sel>
          <desc>
            <p>
              Returns whether the NSPanel can receive events
              when another window/panel runs modally.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setWorksWhenModal:">
                -setWorksWhenModal:
              </ref>
              <ref type="method" id="-runModalSession:" class="NSApplication">[NSApplication -runModalSession:]</ref>
            </p>
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
