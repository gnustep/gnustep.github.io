<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSTextAttachment" stylesheeturl="default-styles.css" up="Gui">
  <head>
    <title>NSTextAttachment</title>
    <author name="Fred Kiefer">
      <email address="FredKiefer@gmx.de">
        FredKiefer@gmx.de
      </email>
    </author>
    <date>Generated at 2024-11-13 12:52:37 -0500</date>
    <abstract>
      Classes to represent text attachments.
    </abstract>
    <copy>2000 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSTextAttachment class
      </heading>
      <class name="NSTextAttachment" super="NSObject" ovadd="10.0.0">
        <declared>AppKit/NSTextAttachment.h</declared>
        <conform>NSCoding</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <ivariable type="id&lt;NSTextAttachmentCell&gt;" name="_cell" validity="protected" ovadd="10.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSFileWrapper*" name="_fileWrapper" validity="protected" ovadd="10.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="struct GSTextAttachmentFlagsType" name="struct GSTextAttachmentFlagsType" validity="protected" ovadd="10.0.0">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <method type="id&lt;NSTextAttachmentCell&gt;" ovadd="10.0.0">
          <sel>attachmentCell</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSFileWrapper*" ovadd="10.0.0">
          <sel>fileWrapper</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id" ovadd="10.0.0">
          <sel>initWithFileWrapper:</sel>
          <arg type="NSFileWrapper*">fileWrapper</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>setAttachmentCell:</sel>
          <arg type="id&lt;NSTextAttachmentCell&gt;">cell</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>setFileWrapper:</sel>
          <arg type="NSFileWrapper*">fileWrapper</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSTextAttachmentCell
        class
      </heading>
      <class name="NSTextAttachmentCell" super="NSCell" ovadd="10.0.0">
        <declared>AppKit/NSTextAttachment.h</declared>
        <conform>NSTextAttachmentCell</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <ivariable type="NSTextAttachment*" name="_attachment" validity="protected" ovadd="10.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSAttributedString(NSTextAttachment)
        category
      </heading>
      <category name="NSTextAttachment" class="NSAttributedString" ovadd="10.0.0">
        <declared>AppKit/NSTextAttachment.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="NSAttributedString*" factory="yes" ovadd="10.0.0">
          <sel>attributedStringWithAttachment:</sel>
          <arg type="NSTextAttachment*">attachment</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.0.0">
          <sel>containsAttachments</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSMutableAttributedString(NSTextAttachment)
        category
      </heading>
      <category name="NSTextAttachment" class="NSMutableAttributedString" ovadd="10.0.0">
        <declared>AppKit/NSTextAttachment.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="void" ovadd="10.0.0">
          <sel>updateAttachmentsFromPath:</sel>
          <arg type="NSString*">path</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSTextAttachmentCell
        protocol
      </heading>
      <protocol name="NSTextAttachmentCell" ovadd="10.0.0">
        <declared>AppKit/NSTextAttachment.h</declared>
        <conform>NSObject</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="NSTextAttachment*" ovadd="10.0.0">
          <sel>attachment</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSPoint" ovadd="10.0.0">
          <sel>cellBaselineOffset</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSRect" ovadd="10.0.0">
          <sel>cellFrameForTextContainer:</sel>
          <arg type="NSTextContainer*">textContainer</arg>
          <sel>proposedLineFragment:</sel>
          <arg type="NSRect">lineFrag</arg>
          <sel>glyphPosition:</sel>
          <arg type="NSPoint">position</arg>
          <sel>characterIndex:</sel>
          <arg type="NSUInteger">charIndex</arg>
          <desc>
            The new way of placing the cell.
          </desc>
        </method>
        <method type="NSSize" ovadd="10.0.0">
          <sel>cellSize</sel>
          <desc>
            The old way of placing the cell. The text system will
            never call these directly (TODO: make sure it
            doesn't), but other things might. The class
            implements the new method by calling these, so
            subclasses can easily change behavior by
            overriding these.
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>drawWithFrame:</sel>
          <arg type="NSRect">cellFrame</arg>
          <sel>inView:</sel>
          <arg type="NSView*">controlView</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>drawWithFrame:</sel>
          <arg type="NSRect">cellFrame</arg>
          <sel>inView:</sel>
          <arg type="NSView*">controlView</arg>
          <sel>characterIndex:</sel>
          <arg type="NSUInteger">charIndex</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>drawWithFrame:</sel>
          <arg type="NSRect">cellFrame</arg>
          <sel>inView:</sel>
          <arg type="NSView*">controlView</arg>
          <sel>characterIndex:</sel>
          <arg type="NSUInteger">charIndex</arg>
          <sel>layoutManager:</sel>
          <arg type="NSLayoutManager*">layoutManager</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>highlight:</sel>
          <arg type="BOOL">flag</arg>
          <sel>withFrame:</sel>
          <arg type="NSRect">cellFrame</arg>
          <sel>inView:</sel>
          <arg type="NSView*">controlView</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>setAttachment:</sel>
          <arg type="NSTextAttachment*">anObject</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.0.0">
          <sel>trackMouse:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <sel>inRect:</sel>
          <arg type="NSRect">cellFrame</arg>
          <sel>ofView:</sel>
          <arg type="NSView*">controlView</arg>
          <sel>atCharacterIndex:</sel>
          <arg type="NSUInteger">charIndex</arg>
          <sel>untilMouseUp:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.0.0">
          <sel>trackMouse:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <sel>inRect:</sel>
          <arg type="NSRect">cellFrame</arg>
          <sel>ofView:</sel>
          <arg type="NSView*">controlView</arg>
          <sel>untilMouseUp:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.0.0">
          <sel>wantsToTrackMouse</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.0.0">
          <sel>wantsToTrackMouseForEvent:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <sel>inRect:</sel>
          <arg type="NSRect">cellFrame</arg>
          <sel>ofView:</sel>
          <arg type="NSView*">controlView</arg>
          <sel>atCharacterIndex:</sel>
          <arg type="NSUInteger">charIndex</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </protocol>
    </chapter>
  </body>
</gsdoc>
