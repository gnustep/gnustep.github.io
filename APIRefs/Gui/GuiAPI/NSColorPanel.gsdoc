<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSColorPanel" stylesheeturl="default-styles.css" up="Gui">
  <head>
    <title>NSColorPanel</title>
    <author name="Scott Christley">
      <email address="scottc@net-community.com">
        scottc@net-community.com
      </email>
    </author>
    <date>Generated at 2024-11-13 12:52:37 -0500</date>
    <abstract>System generic color panel</abstract>
    <copy>1996 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSColorPanel class
      </heading>
      <class name="NSColorPanel" super="NSPanel" ovadd="1.0.0">
        <declared>AppKit/NSColorPanel.h</declared>
        <desc>
          <p>
            TODO Description
          </p>
        </desc>
        <ivariable type="NSView*" name="_accessoryView" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="SEL" name="_action" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSSlider*" name="_alphaSlider" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSColorWell*" name="_colorWell" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="id&lt;NSColorPickingCustom,NSColorPickingDefault&gt;" name="_currentPicker" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_isContinuous" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSButton*" name="_magnifyButton" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSBox*" name="_pickerBox" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSMatrix*" name="_pickerMatrix" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSMutableArray*" name="_pickers" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_showsAlpha" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSSplitView*" name="_splitView" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="id" name="_target" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSView*" name="_topView" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <method type="BOOL" factory="yes" ovadd="1.0.0">
          <sel>dragColor:</sel>
          <arg type="NSColor*">aColor</arg>
          <sel>withEvent:</sel>
          <arg type="NSEvent*">anEvent</arg>
          <sel>fromView:</sel>
          <arg type="NSView*">sourceView</arg>
          <desc>
            <p>
              Drags <var>aColor</var> from <var>sourceView</var>
              at the location give by the event <var>anEvent</var> (
              <ref type="method" id="-convertPoint:fromView:" class="NSView">[NSView -convertPoint:fromView:]</ref>). The type declared into the pasteboard is NSColorPboardType
            </p>
            <p>
              See Also:
              <ref type="method" id="-convertPoint:fromView:" class="NSView">[NSView -convertPoint:fromView:]</ref> [NSView-dragImage:at:offset:event:pasteboard:source:slideBack:
            </p>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>setPickerMask:</sel>
          <arg type="int">mask</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>setPickerMode:</sel>
          <arg type="int">mode</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColorPanel*" factory="yes" ovadd="1.0.0">
          <sel>sharedColorPanel</sel>
          <desc>
            <p>
              Creates (if needed) and returns the shared
              NSColorPanel.
            </p>
          </desc>
        </method>
        <method type="BOOL" factory="yes" ovadd="1.0.0">
          <sel>sharedColorPanelExists</sel>
          <desc>
            <p>
              Returns whether the NSColorPanel has been already
              created.
            </p>
          </desc>
        </method>
        <method type="NSView*" ovadd="1.0.0">
          <sel>accessoryView</sel>
          <desc>
            <p>
              Returns the NSColorPanel's accessory view if it
              exists, <code>nil</code> otherwise.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setAccessoryView:">
                -setAccessoryView:
              </ref>
            </p>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>alpha</sel>
          <desc>
            <p>
              Returns the alpha value of the NSColorPanel.
              Returns 1.0 if the NSColorPanel does not show
              alpha
            </p>
            <p>
              See Also:
              <ref type="method" id="-showsAlpha">
                -showsAlpha
              </ref>
              <ref type="method" id="-setShowsAlpha:">
                -setShowsAlpha:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>attachColorList:</sel>
          <arg type="NSColorList*">aColorList</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" ovadd="1.0.0">
          <sel>color</sel>
          <desc>
            <p>
              Returns the current NSColor displayed by the
              NSColorPanel.
            </p>
            <p>
              See Also :
              <ref type="method" id="-setColor:">
                -setColor:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>detachColorList:</sel>
          <arg type="NSColorList*">aColorList</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isContinuous</sel>
          <desc>
            <p>
              Returns whether the NSColorPanel continuously
              sends its action message.
            </p>
            <p>
              See Also: -setContinuous:-setAction:
              <ref type="method" id="-setTarget:">
                -setTarget:
              </ref>
            </p>
          </desc>
        </method>
        <method type="int" ovadd="1.0.0">
          <sel>mode</sel>
          <desc>
            <p>
              Returns the current mode of the NSColorPanel.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setMode:">
                -setMode:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setAccessoryView:</sel>
          <arg type="NSView*">aView</arg>
          <desc>
            <p>
              Sets the accessoryView to a view. The old view (if
              exists) will be removed (and released). You need
              to retain it if you want to use it later
            </p>
            <p>
              See Also:
              <ref type="method" id="-accessoryView">
                -accessoryView
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setAction:</sel>
          <arg type="SEL">aSelector</arg>
          <desc>
            <p>
              Sets the NSColorPanl action method to
              <var>aSelector</var> The action message is usally
              send in
              <ref type="method" id="-setColor:">
                -setColor:
              </ref>
              , when the picker is updated, when a new picker is
              shown, when the alpha is changed or when one of
              the color wells at the bottom is selected.
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setColor:</sel>
          <arg type="NSColor*">aColor</arg>
          <desc>
            <p>
              Sets the NSColor displayed to <var>aColor</var>.
              This method posts a
              NSColorPanelColorDidChangeNotification
              notification if needed.
            </p>
            <p>
              See Also: <ref type="method" id="-color">-color</ref>
              <ref type="method" id="-setColor:" class="NSColorWell">
                [NSColorWell -setColor:]
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setContinuous:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether the NSColorPanel sends continuously
              action messages
            </p>
            <p>
              See Also:
              <ref type="method" id="-isContinuous">
                -isContinuous
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setMode:</sel>
          <arg type="int">mode</arg>
          <desc>
            <p>
              Set the NSColorPanel <var>mode</var> to
              <var>mode</var>.
            </p>
            <p>
              See Also: <ref type="method" id="-mode">-mode</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setShowsAlpha:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether the NSColorPanel shows alpha values and
              the alpha slider.
            </p>
            <p>
              See Also:
              <ref type="method" id="-showsAlpha">
                -showsAlpha
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTarget:</sel>
          <arg type="id">anObject</arg>
          <desc>
            <p>
              Sets the target object to <var>anObject</var>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>showsAlpha</sel>
          <desc>
            <p>
              Returns whether the NSColorPanel shows alpha
              values and the alpha slider
            </p>
            <p>
              See Also:
              <ref type="method" id="-setShowsAlpha:">
                -setShowsAlpha:
              </ref>
            </p>
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSApplication(NSColorPanel)
        category
      </heading>
      <category name="NSColorPanel" class="NSApplication" ovadd="1.0.0">
        <declared>AppKit/NSColorPanel.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="void" ovadd="1.0.0">
          <sel>orderFrontColorPanel:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </category>
    </chapter>
  </body>
</gsdoc>
