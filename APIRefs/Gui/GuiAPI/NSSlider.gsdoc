<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSSlider" stylesheeturl="default-styles.css" up="Gui">
  <head>
    <title>NSSlider</title>
    <author name="Ovidiu Predescu">
      <email address="ovidiu@net-community.com">
        ovidiu@net-community.com
      </email>
    </author>
    <author name="Felipe A. Rodriguez">
      <email address="far@ix.netcom.com">
        far@ix.netcom.com
      </email>
    </author>
    <date>Generated at 2024-11-13 12:52:37 -0500</date>
    <copy>1996 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading><strong>Class</strong> Description</heading>
      <p>
        An NSSlider displays, and allows control of, some value in
        the application. It represents a continuous stream of
        values of type <code><strong>float</strong></code>,
        which can be retrieved by the method
        <code>floatValue</code> and set by the method
        <code>setFloatValue:</code>.
      </p>
      <p>
        This control is a continuous control. It sends its action
        message as <strong>long</strong> as the user is
        manipulating it. This can be changed by passing
        <code>NO</code> to the <code>setContinuous:</code>
        message of a given NSSlider.
      </p>
      <p>
        Although methods for adding and managing a title are
        provided, the slider's knob can cover this title, so
        it is recommended that a label be added near the slider, for
        identification.
      </p>
      <p>
        As with many controls, NSSlider relies on its cell
        counterpart, NSSliderCell. For more information,
        please see the specification for NSSliderCell.
      </p>
      <p>
        Use of an NSSlider to do the role of an NSScroller is not
        recommended. A scroller is intended to represent
        the visible portion of a view, whereas a slider is intended
        to represent some value.
      </p>
      <class name="NSSlider" super="NSControl" ovadd="1.0.0">
        <declared>AppKit/NSSlider.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="BOOL" ovadd="1.0.0">
          <sel>acceptsFirstMouse:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <desc>
            Returns <code>YES</code> by default. This will
            allow the first click sent to the slider, when in an
            inactive window, to both bring the window into
            focus and manipulate the slider.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.0.0">
          <sel>allowsTickMarkValuesOnly</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="double" ovadd="1.0.0">
          <sel>altIncrementValue</sel>
          <desc>
            <p>
              Returns the value by which the slider will be
              incremented if the user holds down the ALT
              key.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setAltIncrementValue:">
                -setAltIncrementValue:
              </ref>
            </p>
          </desc>
        </method>
        <method type="double" ovadd="10.0.0">
          <sel>closestTickMarkValueToValue:</sel>
          <arg type="double">aValue</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSImage*" ovadd="1.0.0">
          <sel>image</sel>
          <desc>
            <p>
              Returns the image drawn in the slider's track.
              Returns <code>nil</code> if this has not been
              set.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setImage:">
                -setImage:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSInteger" ovadd="10.0.0">
          <sel>indexOfTickMarkAtPoint:</sel>
          <arg type="NSPoint">point</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>isVertical</sel>
          <desc>
            Returns whether or not the slider is vertical. If,
            for some reason, this cannot be determined, for such
            reasons as the slider is not yet displayed, this
            method returns -1. Generally, a slider is considered
            vertical if its height is greater than its width.
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>knobThickness</sel>
          <desc>
            Returns the thickness of the slider's knob. This
            value is in pixels, and is the size of the knob along
            the slider's track.
          </desc>
        </method>
        <method type="double" ovadd="1.0.0">
          <sel>maxValue</sel>
          <desc>
            <p>
              Returns the maximum value that the slider
              represents.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setMaxValue:">
                -setMaxValue:
              </ref>
            </p>
          </desc>
        </method>
        <method type="double" ovadd="1.0.0">
          <sel>minValue</sel>
          <desc>
            <p>
              Returns the minimum value that the slider
              represents.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setMinValue:">
                -setMinValue:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSInteger" ovadd="10.0.0">
          <sel>numberOfTickMarks</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSRect" ovadd="10.0.0">
          <sel>rectOfTickMarkAtIndex:</sel>
          <arg type="NSInteger">index</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>setAllowsTickMarkValuesOnly:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setAltIncrementValue:</sel>
          <arg type="double">increment</arg>
          <desc>
            <p>
              Sets the value by which the slider will be
              incremented, when the ALT key is held down,
              to <var>increment</var>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-altIncrementValue">
                -altIncrementValue
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setImage:</sel>
          <arg type="NSImage*">backgroundImage</arg>
          <desc>
            <p>
              Sets the image to be displayed in the slider's track
              to <var>barImage</var>.
            </p>
            <p>
              See Also: <ref type="method" id="-image">-image</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setKnobThickness:</sel>
          <arg type="CGFloat">aFloat</arg>
          <desc>
            <p>
              Sets the thickness of the knob to <var>aFloat</var>,
              in pixels. This value sets the amount of space which
              the knob takes up in the slider's track.
            </p>
            <p>
              See Also:
              <ref type="method" id="-knobThickness">
                -knobThickness
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setMaxValue:</sel>
          <arg type="double">aDouble</arg>
          <desc>
            <p>
              Sets the maximum value that the sliders represents
              to <var>aDouble</var>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-maxValue">
                -maxValue
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setMinValue:</sel>
          <arg type="double">aDouble</arg>
          <desc>
            <p>
              Sets the minimum value that the slider represents to
              <var>aDouble</var>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-minValue">
                -minValue
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>setNumberOfTickMarks:</sel>
          <arg type="NSInteger">numberOfTickMarks</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>setTickMarkPosition:</sel>
          <arg type="NSTickMarkPosition">position</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTitle:</sel>
          <arg type="NSString*">aString</arg>
          <desc>
            <p>
              Sets the title of the slider to <var>aString</var>.
              This title is displayed on the slider's track,
              behind the knob.
            </p>
            <p>
              See Also: <ref type="method" id="-title">-title</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTitleCell:</sel>
          <arg type="NSCell*">aCell</arg>
          <desc>
            <p>
              Sets the cell used to draw the title to
              <var>aCell</var>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-titleCell">
                -titleCell
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTitleColor:</sel>
          <arg type="NSColor*">aColor</arg>
          <desc>
            <p>
              Sets the colour with which the title will be drawn
              to <var>aColor</var>.
            </p>
            <p>
              See Also
              <ref type="method" id="-titleColor">
                -titleColor
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTitleFont:</sel>
          <arg type="NSFont*">fontObject</arg>
          <desc>
            <p>
              Sets the font with which the title will be drawm to
              <var>fontObject</var>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-titleFont">
                -titleFont
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSTickMarkPosition" ovadd="10.0.0">
          <sel>tickMarkPosition</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="double" ovadd="10.0.0">
          <sel>tickMarkValueAtIndex:</sel>
          <arg type="NSInteger">index</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>title</sel>
          <desc>
            <p>
              Returns the title of the slider as an
              <code>NSString</code>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setTitle:">
                -setTitle:
              </ref>
            </p>
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>titleCell</sel>
          <desc>
            <p>
              Returns the cell used to draw the title.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setTitleCell:">
                -setTitleCell:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSColor*" ovadd="1.0.0">
          <sel>titleColor</sel>
          <desc>
            <p>
              Returns the colour used to draw the title.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setTitleColor:">
                -setTitleColor:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSFont*" ovadd="1.0.0">
          <sel>titleFont</sel>
          <desc>
            <p>
              Returns the font used to draw the title.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setTitleFont:">
                -setTitleFont:
              </ref>
            </p>
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
