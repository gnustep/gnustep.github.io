<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSForm" stylesheeturl="default-styles.css" up="Gui">
  <head>
    <title>NSForm</title>
    <author name="Ovidiu Predescu">
      <email address="ovidiu@net-community.com">
        ovidiu@net-community.com
      </email>
    </author>
    <date>Generated at 2024-11-13 12:52:37 -0500</date>
    <abstract>
      Form class, a matrix of text fields with labels
    </abstract>
    <copy>1996 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSForm class
      </heading>
      <class name="NSForm" super="NSMatrix" ovadd="1.0.0">
        <declared>AppKit/NSForm.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <ivariable type="BOOL" name="_title_width_needs_update" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <method type="void" ovadd="1.0.0">
          <sel>_setTitleWidthNeedsUpdate:</sel>
          <arg type="NSNotification*">notification</arg>
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this method indicates that it is private, for
            internal use only, and you should not use the
            method in your code.
          </desc>
        </method>
        <method type="NSFormCell*" ovadd="1.0.0">
          <sel>addEntry:</sel>
          <arg type="NSString*">title</arg>
          <desc>
            <p>
              Adds a new entry with <var>title</var> as its
              <var>title</var> at the end of the NSForm and
              returns the NSFormCell.
            </p>
            <p>
              See Also:
              <ref type="method" id="-insertEntry:atIndex:">
                -insertEntry:atIndex:
              </ref>
              <ref type="method" id="-removeEntryAtIndex:">
                -removeEntryAtIndex:
              </ref>
            </p>
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>cellAtIndex:</sel>
          <arg type="NSInteger">index</arg>
          <desc>
            <p>
              Returns the NSFormCell at <var>index</var>
              <var>index</var>
            </p>
            <p>
              See Also:
              <ref type="method" id="-cellAtRow:column:" class="NSMatrix">[NSMatrix -cellAtRow:column:]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>drawCellAtIndex:</sel>
          <arg type="NSInteger">index</arg>
          <desc>
            <p>
              Draws the NSFormCell at the specified
              <var>index</var>
            </p>
            <p>
              See Also:
              <ref type="method" id="-cellAtIndex:">
                -cellAtIndex:
              </ref>
              <ref type="method" id="-drawWithFrame:inView:" class="NSCell">[NSCell -drawWithFrame:inView:]</ref> <ref type="method" id="-cellFrameAtRow:column:" class="NSMatrix">[NSMatrix -cellFrameAtRow:column:]</ref>
            </p>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>indexOfCellWithTag:</sel>
          <arg type="NSInteger">aTag</arg>
          <desc>
            <p>
              Returns the index of the entry specified by
              <var>aTag</var> or -1 if <var>aTag</var> is not
              found in entries.
            </p>
            <p>
              See Also:
              <ref type="method" id="-cellAtRow:column:" class="NSMatrix">[NSMatrix -cellAtRow:column:]</ref>
            </p>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>indexOfSelectedItem</sel>
          <desc>
            <p>
              Returns the index of the current selected entry.
            </p>
            <p>
              <ref type="method" id="-selectedRow" class="NSMatrix">
                [NSMatrix -selectedRow]
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSFormCell*" ovadd="1.0.0">
          <sel>insertEntry:</sel>
          <arg type="NSString*">title</arg>
          <sel>atIndex:</sel>
          <arg type="NSInteger">index</arg>
          <desc>
            <p>
              Inserts a new entry with <var>title</var> as its
              <var>title</var> at the <var>index</var>
              <var>index</var> of the NSForm and returns the
              NSFormCell.
            </p>
            <p>
              See Also:
              <ref type="method" id="-addEntry:">
                -addEntry:
              </ref>
              <ref type="method" id="-removeEntryAtIndex:">
                -removeEntryAtIndex:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>removeEntryAtIndex:</sel>
          <arg type="NSInteger">index</arg>
          <desc>
            <p>
              Removes the entry at <var>index</var>
              <var>index</var>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-insertEntry:atIndex:">
                -insertEntry:atIndex:
              </ref>
              <ref type="method" id="-addEntry:">
                -addEntry:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>selectTextAtIndex:</sel>
          <arg type="NSInteger">index</arg>
          <desc>
            <p>
              Selects the text in the entry specified by
              <var>index</var>.
            </p>
            <p>
              <ref type="method" id="-selectTextAtRow:column:" class="NSMatrix">[NSMatrix -selectTextAtRow:column:]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setBezeled:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether then NSForm's entries have bezeled
              border.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setBezeled:" class="NSCell">
                [NSCell -setBezeled:]
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setBordered:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether then NSForm's entries have border
            </p>
            <p>
              See Also:
              <ref type="method" id="-setBordered:" class="NSCell">
                [NSCell -setBordered:]
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setEntryWidth:</sel>
          <arg type="float">width</arg>
          <desc>
            <p>
              Sets the <var>width</var> of all entries to
              <var>width</var>
            </p>
            <p>
              See Also:
              <ref type="method" id="-setCellSize:" class="NSMatrix">
                [NSMatrix -setCellSize:]
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setInterlineSpacing:</sel>
          <arg type="CGFloat">spacing</arg>
          <desc>
            <p>
              Sets the <var>spacing</var> between all entries to
              <var>spacing</var>. By default the
              <var>spacing</var> is 4.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setIntercellSpacing:" class="NSMatrix">[NSMatrix -setIntercellSpacing:]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTextAlignment:</sel>
          <arg type="NSTextAlignment">aMode</arg>
          <desc>
            <p>
              Sets the text alignment to <var>aMode</var> for all
              entries. See
              <ref type="type" id="NSTextAlignment">
                NSTextAlignment
              </ref>
              for more informations. The default text alignment is
              NSRightTextAlignment
            </p>
            <p>
              See Also:
              <ref type="method" id="-setTitleAlignment:">
                -setTitleAlignment:
              </ref>
              <ref type="method" id="-setAlignment:" class="NSCell">
                [NSCell -setAlignment:]
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.4.0">
          <sel>setTextBaseWritingDirection:</sel>
          <arg type="NSWritingDirection">direction</arg>
          <desc>
            <p>
              Sets the contents writing <var>direction</var> to
              <var>direction</var> for all entries
            </p>
            <p>
              See Also:
              <ref type="method" id="-setBaseWritingDirection:" class="NSCell">[NSCell -setBaseWritingDirection:]</ref> <ref type="method" id="-setTitleBaseWritingDirection:">-setTitleBaseWritingDirection:</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTextFont:</sel>
          <arg type="NSFont*">fontObject</arg>
          <desc>
            <p>
              Sets the text font to <var>fontObject</var> for all
              entries
            </p>
            <p>
              See Also:
              <ref type="method" id="-setFont:" class="NSCell">
                [NSCell -setFont:]
              </ref>
              <ref type="method" id="-setTitleFont:">
                -setTitleFont:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTitleAlignment:</sel>
          <arg type="NSTextAlignment">aMode</arg>
          <desc>
            <p>
              Sets the text alignment of the title to
              <var>aMode</var> for all entries. See
              <ref type="type" id="NSTextAlignment">
                NSTextAlignment
              </ref>
              for more informations. The default title alignment is
              NSLeftTextAlignment
            </p>
            <p>
              See Also:
              <ref type="method" id="-setTitleAlignment:" class="NSFormCell">[NSFormCell -setTitleAlignment:]</ref> <ref type="method" id="-setTextAlignment:">-setTextAlignment:</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.4.0">
          <sel>setTitleBaseWritingDirection:</sel>
          <arg type="NSWritingDirection">direction</arg>
          <desc>
            <p>
              Sets the title writing <var>direction</var> to
              <var>direction</var> for all entries
            </p>
            <p>
              See Also:
              <ref type="method" id="-setTitleBaseWritingDirection:" class="NSFormCell">[NSFormCell -setTitleBaseWritingDirection:]</ref> <ref type="method" id="-setTextBaseWritingDirection:">-setTextBaseWritingDirection:</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTitleFont:</sel>
          <arg type="NSFont*">fontObject</arg>
          <desc>
            <p>
              Sets the text font of the title to
              <var>fontObject</var> for all entries
            </p>
            <p>
              See Also:
              <ref type="method" id="-setTitleFont:" class="NSFormCell">[NSFormCell -setTitleFont:]</ref> <ref type="method" id="-setTextFont:">-setTextFont:</ref>
            </p>
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
