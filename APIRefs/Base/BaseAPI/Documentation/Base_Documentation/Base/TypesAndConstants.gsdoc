<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.3//EN" "http://www.gnustep.org/gsdoc-1_0_3.dtd">
<!--
Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
-->
<gsdoc base="TypesAndConstants" up="Base">
  <head>
    <title>Types and Constants</title>
    <author name="Richard Frith-Macdonald"></author>
    <copy>2005 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front>
      <contents />
      <chapter>
	<heading>Type index</heading>
	<index type="type" scope="file" />
      </chapter>
      <chapter>
	<heading>Variable index</heading>
	<index type="variable" scope="file" />
      </chapter>
      <chapter>
	<heading>Constant index</heading>
	<index type="constant" scope="file" />
      </chapter>
    </front>
  <!--StartConstants-->
<!--StartNSArchiverConstants-->
    <chapter>
      <heading>NSArchiver constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSInconsistentArchiveException" ovadd="1.0.0">
        <desc>
          Specified in OpenStep to be raised by
          <ref type="class" id="NSArchiver">NSArchiver</ref>
            or subclasses if there are problems initializing or
            encoding.
            <em>
              Not currently used. NSInternalInconsistencyException
              usually raised instead.
            </em>
        </desc>
      </constant>
    </chapter>
<!--EndNSArchiverConstants-->
<!--StartNSBundleConstants-->
    <chapter>
      <heading>NSBundle constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSBundleDidLoadNotification" ovadd="1.0.0">
        <desc>
          Notification posted when a bundle is loaded. The
          notification object is the
          <ref type="class" id="NSBundle">NSBundle</ref>
            itself. The notification also contains a
            <em>userInfo</em> dictionary, containing the single
            key ' <code>NSLoadedClasses</code> ', mapped to an
            <ref type="class" id="NSArray">NSArray</ref>
              containing the names of each class and
              category loaded (as strings).
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLoadedClasses" ovadd="1.0.0">
        <desc>
          When an
          <ref type="class" id="NSBundle">NSBundle</ref>
            loads classes and posts a
            <code>NSBundleDidLoadNotification</code>, its
            <em>userInfo</em> dictionary contains this key, mapped
            to an
            <ref type="class" id="NSArray">NSArray</ref>
              containing the names of each class and
              category loaded (as strings).
        </desc>
      </constant>
      <constant type="NSString* const" name="NSShowNonLocalizedStrings" ovadd="1.0.0">
        <desc>
          A user default affecting the behavior of
          <ref type="method" id="-localizedStringForKey:value:table:" class="NSBundle">[NSBundle -localizedStringForKey:value:table:]</ref>. If set, the value of the key will be returned as an uppercase string rather than any localized equivalent found. This can be useful during development to check where a given string in the UI is "coming from".
        </desc>
      </constant>
    </chapter>
<!--EndNSBundleConstants-->
<!--StartNSCalendarConstants-->
    <chapter>
      <heading>NSCalendar constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSCalendarIdentifierBuddhist" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierChinese" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierCoptic" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierEthiopicAmeteAlem" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierEthiopicAmeteMihret" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierGregorian" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierHebrew" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierISO8601" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierIndian" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierIslamic" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierIslamicCivil" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierIslamicTabular" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierIslamicUmmAlQura" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierJapanese" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierPersian" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCalendarIdentifierRepublicOfChina" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSCalendarConstants-->
<!--StartNSClassDescriptionConstants-->
    <chapter>
      <heading>NSClassDescription constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSClassDescriptionNeededForClassNotification" ovadd="10.0.0">
        <desc>
          Posted by
          <ref type="method" id="+classDescriptionForClass:" class="NSClassDescription">[NSClassDescription +classDescriptionForClass:]</ref> when a class description cannot be found for a class. The implementation will check again after the notification is (synchronously) processed, allowing descriptions to be registered lazily.
        </desc>
      </constant>
    </chapter>
<!--EndNSClassDescriptionConstants-->
<!--StartNSConnectionConstants-->
    <chapter>
      <heading>NSConnection constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSConnectionDidDieNotification" ovadd="1.0.0">
        <desc>
          Posted when an
          <ref type="class" id="NSConnection">NSConnection</ref>
            is deallocated or it is notified its port is
            deactivated. (Note, connections to remote
            ports don't get such a notification.) Receivers
            should deregister themselves for notifications from
            the given connection.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSConnectionDidInitializeNotification" ovadd="1.0.0">
        <desc>
          Posted when an
          <ref type="class" id="NSConnection">NSConnection</ref>
            is initialized.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSConnectionLocalCount" ovadd="1.0.0">
        <desc>
          GNUstep-specific key for dictionary returned
          by
          <ref type="method" id="-statistics" class="NSConnection">
            [NSConnection -statistics]
          </ref>
          : number of local objects currently in use remotely.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSConnectionProxyCount" ovadd="1.0.0">
        <desc>
          GNUstep-specific key for dictionary returned
          by
          <ref type="method" id="-statistics" class="NSConnection">
            [NSConnection -statistics]
          </ref>
          : number of remote objects currently in use.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSConnectionRepliesReceived" ovadd="1.0.0">
        <desc>
          Key for dictionary returned by
          <ref type="method" id="-statistics" class="NSConnection">
            [NSConnection -statistics]
          </ref>
          : number of messages replied to so far by the remote
          connection.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSConnectionRepliesSent" ovadd="1.0.0">
        <desc>
          Key for dictionary returned by
          <ref type="method" id="-statistics" class="NSConnection">
            [NSConnection -statistics]
          </ref>
          : number of messages sent so far to the remote connection.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSConnectionReplyMode" ovadd="1.0.0">
        <desc>
          <ref type="class" id="NSRunLoop">NSRunLoop</ref>
            mode for
            <ref type="class" id="NSConnection">NSConnection</ref>
              objects waiting for replies. Mainly used
              internally by distributed objects system.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSConnectionRequestsReceived" ovadd="1.0.0">
        <desc>
          Key for dictionary returned by
          <ref type="method" id="-statistics" class="NSConnection">
            [NSConnection -statistics]
          </ref>
          : number of messages received so far from the remote
          connection.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSConnectionRequestsSent" ovadd="1.0.0">
        <desc>
          Key for dictionary returned by
          <ref type="method" id="-statistics" class="NSConnection">
            [NSConnection -statistics]
          </ref>
          : number of messages sent so far to the remote connection.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSDestinationInvalidException" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFailedAuthenticationException" ovadd="1.0.0">
        <desc>
          Raised by an
          <ref type="class" id="NSConnection">NSConnection</ref>
            on receiving a message that it or its delegate cannot
            authenticate.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSObjectInaccessibleException" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSObjectNotAvailableException" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSConnectionConstants-->
<!--StartNSDateConstants-->
    <chapter>
      <heading>NSDate constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSSystemClockDidChangeNotification" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSTimeInterval" name="NSTimeIntervalSince1970" ovadd="1.0.0">
        <desc>
          Time interval between the unix standard reference date
          of 1 January 1970 and the OpenStep reference date of 1
          January 2001 <br /> This number comes from: <br />
          (((31 years * 365 days) + 8 days for leap years) =
          total number of days <br /> 24 hours * 60 minutes * 60
          seconds) <br /> This ignores leap-seconds.
        </desc>
      </constant>
    </chapter>
<!--EndNSDateConstants-->
<!--StartNSDistributedNotificationCenterConstants-->
    <chapter>
      <heading>NSDistributedNotificationCenter constants</heading>
      <p></p>
      <constant type="NSString* const" name="GSNetworkNotificationCenterType" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Type of
          <ref type="method" id="+notificationCenterForType:" class="NSDistributedNotificationCenter">[NSDistributedNotificationCenter +notificationCenterForType:]</ref> - localhost and LAN broadcast. This type is available only on GNUstep.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSPublicNotificationCenterType" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Type of
          <ref type="method" id="+notificationCenterForType:" class="NSDistributedNotificationCenter">[NSDistributedNotificationCenter +notificationCenterForType:]</ref> - all users on the local host. This type is available only on GNUstep.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocalNotificationCenterType" ovadd="10.0.0">
        <desc>
          Type for
          <ref type="method" id="+notificationCenterForType:" class="NSDistributedNotificationCenter">[NSDistributedNotificationCenter +notificationCenterForType:]</ref> - localhost current user broadcast only. This is the only type on OS X.
        </desc>
      </constant>
    </chapter>
<!--EndNSDistributedNotificationCenterConstants-->
<!--StartNSErrorConstants-->
    <chapter>
      <heading>NSError constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSFilePathErrorKey" ovadd="10.4.0">
        <desc>
          This key can be used to store the file path of a
          resource involved in the error (eg unreadable file).
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocalizedDescriptionKey" ovadd="10.3.0">
        <desc>
          Key for user info dictionary component which describes
          the error in a human readable format.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocalizedFailureReasonErrorKey" ovadd="10.4.0">
        <desc>
          Key to store a string describing what caused the error to
          occur.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocalizedRecoveryOptionsErrorKey" ovadd="10.4.0">
        <desc>
          Key to store an
          <ref type="class" id="NSArray">NSArray</ref>
            of strings suitable for use as the titles of buttons in
            an alert panel used to attempt error recovery in a GUI
            application.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocalizedRecoverySuggestionErrorKey" ovadd="10.4.0">
        <desc>
          Key to store a string providing a hint on how to use the
          buttons in an alert panel.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSRecoveryAttempterErrorKey" ovadd="10.4.0">
        <desc>
          Key to store an object which can be used to attempt to
          recover from the error.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStringEncodingErrorKey" ovadd="10.4.0">
        <desc>
          Key for an
          <ref type="class" id="NSNumber">NSNumber</ref>
            containing an NSStringEncoding value.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLErrorFailingURLErrorKey" ovadd="10.6.0">
        <desc>
          NSURL to indicate the URL which did not load, in the
          NSURLErrorDomain.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLErrorFailingURLStringErrorKey" ovadd="10.6.0">
        <desc>
          NSString in the NSURLDomain to indicate the object
          for the URL that did not load. This supersedes
          NSErrorFailingURLStringKey
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLErrorKey" ovadd="10.4.0">
        <desc>
          This can be used to store the URLK involved in the
          error.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSUnderlyingErrorKey" ovadd="10.3.0">
        <desc>
          Where one error has caused another, the underlying
          error can be stored in the user info dictionary using
          this key.
        </desc>
      </constant>
    </chapter>
<!--EndNSErrorConstants-->
<!--StartNSExceptionConstants-->
    <chapter>
      <heading>NSException constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSAssertionHandlerKey" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCharacterConversionException" ovadd="1.0.0">
        <desc>
          An exception when character set conversion fails.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSDestinationInvalidException" ovadd="1.0.0">
        <desc>
          Attempt to use an invalidated destination.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSGenericException" ovadd="1.0.0">
        <desc>
          A generic exception for general purpose usage.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSInternalInconsistencyException" ovadd="1.0.0">
        <desc>
          An exception for cases where unexpected state is detected
          within an object.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSInvalidArgumentException" ovadd="1.0.0">
        <desc>
          An exception used when an invalid argument is passed to a
          method or function.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSInvalidReceivePortException" ovadd="1.0.0">
        <desc>
          Attempt to use a receive port which has been
          invalidated.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSInvalidSendPortException" ovadd="1.0.0">
        <desc>
          Attempt to use a send port which has been
          invalidated.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMallocException" ovadd="1.0.0">
        <desc>
          An exception used when the system fails to allocate
          required memory.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSObjectInaccessibleException" ovadd="1.0.0">
        <desc>
          An exception when a remote object is sent a message from a
          thread unable to access the object.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSObjectNotAvailableException" ovadd="1.0.0">
        <desc>
          Attempt to send to an object which is no longer
          available.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSOldStyleException" ovadd="1.0.0">
        <desc>
          UNused... for MacOS-X compatibility.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSParseErrorException" ovadd="10.0.0">
        <desc>
          An exception used when some form of parsing fails.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSPortReceiveException" ovadd="1.0.0">
        <desc>
          Some failure to receive on a port.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSPortSendException" ovadd="1.0.0">
        <desc>
          Some failure to send on a port.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSPortTimeoutException" ovadd="1.0.0">
        <desc>
          Exception raised by
          <ref type="class" id="NSPort">NSPort</ref>
            ,
            <ref type="class" id="NSConnection">NSConnection</ref>
              , and friends if sufficient time elapses while waiting
              for a response, or if the receiving port is
              invalidated before a request can be received.
              See
              <ref type="method" id="-setReplyTimeout:" class="NSConnection">[NSConnection -setReplyTimeout:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSRangeException" ovadd="1.0.0">
        <desc>
          An exception used when an illegal range is encountered...
          usually this is used to provide more information than
          an invalid argument exception.
        </desc>
      </constant>
    </chapter>
<!--EndNSExceptionConstants-->
<!--StartNSExtensionContextConstants-->
    <chapter>
      <heading>NSExtensionContext constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSExtensionHostDidBecomeActiveNotification" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSExtensionHostDidEnterBackgroundNotification" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSExtensionHostWillEnterForegroundNotification" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSExtensionHostWillResignActiveNotification" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSExtensionItemsAndErrorsKey" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSExtensionContextConstants-->
<!--StartNSExtensionItemConstants-->
    <chapter>
      <heading>NSExtensionItem constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSExtensionItemAttachmentsKey" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSExtensionItemAttributedContentTextKey" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSExtensionItemAttributedTitleKey" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSExtensionItemConstants-->
<!--StartNSFileHandleConstants-->
    <chapter>
      <heading>NSFileHandle constants</heading>
      <p></p>
      <constant type="NSString* const" name="GSFileHandleConnectCompletionNotification" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Notification posted when an asynchronous
          <ref type="class" id="NSFileHandle">NSFileHandle</ref>
            connection attempt (to an FTP, HTTP, or other
            internet server) has succeeded.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSFileHandleNotificationError" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Message describing error in asynchronous
          <ref type="class" id="NSFileHandle">NSFileHandle</ref>
            accept,read,write operation.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSFileHandleWriteCompletionNotification" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Notification posted when an asynchronous
          <ref type="class" id="NSFileHandle">NSFileHandle</ref>
            write operation (to an FTP, HTTP, or other internet
            server) has succeeded.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSTLSCAFile" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Dictionary key for the path to a PEM encoded
          certificate authority file.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSTLSCertificateFile" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Dictionary key for the path to a PEM encoded
          certificate used to identify this end of a
          connection.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSTLSCertificateKeyFile" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Dictionary key for the path to a PEM encoded
          private key used to unlock the certificate used by
          this end of a connection.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSTLSCertificateKeyPassword" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Dictionary key for the password used to decrypt
          the key file used to unlock the certificate used by this
          end of a connection.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSTLSDebug" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Dictionary key for a boolean to enable TLS debug
          for a session.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSTLSIssuers" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Dictionary key for an array of issuers to use in
          certificate verification.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSTLSOwners" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Dictionary key for an array of owners to use in
          certificate verification.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSTLSPriority" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Dictionary key for a GNUTLS priority setting for a
          session.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSTLSRemoteHosts" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Dictionary key for a list of hosts to use in
          certificate verification.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSTLSRevokeFile" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Dictionary key for the path to a PEM encoded
          certificate revocation file.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSTLSServerName" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Dictionary key for the value controlling the
          Server Name Indication (SNI) sent as part of the TLS
          handshake.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSTLSVerify" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Dictionary key for a boolean to enable certificate
          verification.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileHandleConnectionAcceptedNotification" ovadd="1.0.0">
        <desc>
          Posted when one of the
          <ref type="class" id="NSFileHandle">NSFileHandle</ref>
            methods
            <code>acceptConnectionInBackground...</code>
            succeeds and has connected to a stream-type socket
            in another process. The notification's <em>userInfo</em>
            dictionary will contain the
            <ref type="class" id="NSFileHandle">NSFileHandle</ref>
              for the near end of the connection (associated to the
              key '
              <code>
                NSFileHandleNotificationFileHandleItem
              </code>
              ').
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileHandleDataAvailableNotification" ovadd="1.0.0">
        <desc>
          Posted when one of the
          <ref type="class" id="NSFileHandle">NSFileHandle</ref>
            methods <code>waitForDataInBackground...</code> has
            been informed that data is available. The receiving
            <ref type="class" id="NSFileHandle">NSFileHandle</ref>
              is passed in the notification.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileHandleNotificationDataItem" ovadd="1.0.0">
        <desc>
          Dictionary key for
          <ref type="class" id="NSFileHandle">NSFileHandle</ref>
            notifications used to access an
            <ref type="class" id="NSData">NSData</ref>
              object containing received data.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileHandleNotificationFileHandleItem" ovadd="1.0.0">
        <desc>
          Dictionary key for
          <ref type="class" id="NSFileHandle">NSFileHandle</ref>
            notifications used to mark the
            <ref type="class" id="NSFileHandle">NSFileHandle</ref>
              that has established a stream-socket connection.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileHandleNotificationMonitorModes" ovadd="1.0.0">
        <desc>
          Dictionary key for
          <ref type="class" id="NSFileHandle">NSFileHandle</ref>
            notifications postable to certain run loop
            modes, associated to an NSArray containing the modes
            allowed.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileHandleOperationException" ovadd="1.0.0">
        <desc>
          Exception raised when attempts to read from an
          <ref type="class" id="NSFileHandle">NSFileHandle</ref>
            channel fail.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileHandleReadCompletionNotification" ovadd="1.0.0">
        <desc>
          Posted when one of the
          <ref type="class" id="NSFileHandle">NSFileHandle</ref>
            methods readDataInBackground... has consumed data.
            The receiving
            <ref type="class" id="NSFileHandle">NSFileHandle</ref>
              is passed in the notification's <em>userInfo</em>
              dictionary associated to the key '
              <code>NSFileHandleNotificationDataItem</code> '.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileHandleReadToEndOfFileCompletionNotification" ovadd="1.0.0">
        <desc>
          Posted when one of the
          <ref type="class" id="NSFileHandle">NSFileHandle</ref>
            methods <code>readToEndOfFileInBackground...</code>
            has finished. The receiving
            <ref type="class" id="NSFileHandle">NSFileHandle</ref>
              is passed in the notification's <em>userInfo</em>
              dictionary associated to the key '
              <code>NSFileHandleNotificationDataItem</code> '.
        </desc>
      </constant>
    </chapter>
<!--EndNSFileHandleConstants-->
<!--StartNSFileManagerConstants-->
    <chapter>
      <heading>NSFileManager constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSFileAppendOnly" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileCreationDate" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileDeviceIdentifier" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileExtensionHidden" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileGroupOwnerAccountID" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileGroupOwnerAccountName" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileHFSCreatorCode" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileHFSTypeCode" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileImmutable" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileModificationDate" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileOwnerAccountID" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileOwnerAccountName" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFilePosixPermissions" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileReferenceCount" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileSize" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileSystemFileNumber" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileSystemFreeNodes" ovadd="10.0.0">
        <desc>
          File system attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileSystemFreeSize" ovadd="10.0.0">
        <desc>
          File system attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileSystemNodes" ovadd="10.0.0">
        <desc>
          File system attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileSystemNumber" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileSystemSize" ovadd="10.0.0">
        <desc>
          File system attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileType" ovadd="10.0.0">
        <desc>
          File attribute key in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileTypeBlockSpecial" ovadd="10.0.0">
        <desc>
          Possible value for ' <code>NSFileType</code> ' key
          in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileTypeCharacterSpecial" ovadd="10.0.0">
        <desc>
          Possible value for ' <code>NSFileType</code> ' key
          in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileTypeDirectory" ovadd="10.0.0">
        <desc>
          Possible value for ' <code>NSFileType</code> ' key
          in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileTypeFifo" ovadd="10.0.0">
        <desc>
          Possible value for ' <code>NSFileType</code> ' key
          in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileTypeRegular" ovadd="10.0.0">
        <desc>
          Possible value for ' <code>NSFileType</code> ' key
          in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileTypeSocket" ovadd="10.0.0">
        <desc>
          Possible value for ' <code>NSFileType</code> ' key
          in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileTypeSymbolicLink" ovadd="10.0.0">
        <desc>
          Possible value for ' <code>NSFileType</code> ' key
          in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFileTypeUnknown" ovadd="10.0.0">
        <desc>
          Possible value for ' <code>NSFileType</code> ' key
          in dictionary returned by
          <ref type="method" id="-fileAttributesAtPath:traverseLink:" class="NSFileManager">[NSFileManager -fileAttributesAtPath:traverseLink:]</ref>.
        </desc>
      </constant>
    </chapter>
<!--EndNSFileManagerConstants-->
<!--StartNSGeometryConstants-->
    <chapter>
      <heading>NSGeometry constants</heading>
      <p></p>
      <constant type="const NSEdgeInsets" name="NSEdgeInsetsZero" ovadd="10.7.0">
        <desc>
          Zero edge insets
        </desc>
      </constant>
      <constant type="const NSPoint" name="NSZeroPoint" ovadd="1.0.0">
        <desc>
          Point at 0,0
        </desc>
      </constant>
      <constant type="const NSRect" name="NSZeroRect" ovadd="1.0.0">
        <desc>
          Zero-size rectangle at 0,0
        </desc>
      </constant>
      <constant type="const NSSize" name="NSZeroSize" ovadd="1.0.0">
        <desc>
          Zero size
        </desc>
      </constant>
    </chapter>
<!--EndNSGeometryConstants-->
<!--StartNSHashTableConstants-->
    <chapter>
      <heading>NSHashTable constants</heading>
      <p></p>
      <constant type="const NSHashTableCallBacks" name="NSIntHashCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSHashTableCallBacks" name="NSIntegerHashCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSHashTableCallBacks" name="NSNonOwnedPointerHashCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSHashTableCallBacks" name="NSNonRetainedObjectHashCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSHashTableCallBacks" name="NSObjectHashCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSHashTableCallBacks" name="NSOwnedPointerHashCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSHashTableCallBacks" name="NSPointerToStructHashCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSHashTableConstants-->
<!--StartNSHTTPCookieConstants-->
    <chapter>
      <heading>NSHTTPCookie constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSHTTPCookieComment" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Obtain text of the comment
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPCookieCommentURL" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Obtain the comment URL
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPCookieDiscard" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Obtain the sessions discard setting
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPCookieDomain" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Obtain cookie domain
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPCookieExpires" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Obtain cookie expiry date
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPCookieMaximumAge" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Obtain maximum age (expiry)
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPCookieName" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Obtain name of cookie
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPCookieOriginURL" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Obtain cookie origin URL
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPCookiePath" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Obtain cookie path
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPCookiePort" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Obtain cookie ports
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPCookieSecure" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Obtain cookie security
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPCookieValue" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Obtain value of cookie
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPCookieVersion" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Obtain cookie version
        </desc>
      </constant>
    </chapter>
<!--EndNSHTTPCookieConstants-->
<!--StartNSHTTPCookieStorageConstants-->
    <chapter>
      <heading>NSHTTPCookieStorage constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSHTTPCookieManagerAcceptPolicyChangedNotification" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Posted to the distributed notification center when the
          cookie accept policy is changed.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPCookieManagerCookiesChangedNotification" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Posted when the set of cookies changes
        </desc>
      </constant>
    </chapter>
<!--EndNSHTTPCookieStorageConstants-->
<!--StartNSInvocationOperationConstants-->
    <chapter>
      <heading>NSInvocationOperation constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSInvocationOperationCancelledException" ovadd="10.5.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSInvocationOperationVoidResultException" ovadd="10.5.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSInvocationOperationConstants-->
<!--StartNSItemProviderConstants-->
    <chapter>
      <heading>NSItemProvider constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSExtensionJavaScriptFinalizeArgumentKey" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSExtensionJavaScriptPreprocessingResultsKey" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSItemProviderErrorDomain" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSItemProviderPreferredImageSizeKey" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSItemProviderConstants-->
<!--StartNSKeyedArchiverConstants-->
    <chapter>
      <heading>NSKeyedArchiver constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSInvalidArchiveOperationException" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSInvalidUnarchiveOperationException" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSKeyedArchiverConstants-->
<!--StartNSKeyValueCodingConstants-->
    <chapter>
      <heading>NSKeyValueCoding constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSUndefinedKeyException" ovadd="10.0.0">
        <desc>
          An exception for an unknown key in
          <ref type="category" id="NSObject(NSKeyValueCoding)">NSObject(NSKeyValueCoding)</ref>
            .
        </desc>
      </constant>
    </chapter>
<!--EndNSKeyValueCodingConstants-->
<!--StartNSKeyValueObservingConstants-->
    <chapter>
      <heading>NSKeyValueObserving constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSKeyValueChangeIndexesKey" ovadd="10.3.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSKeyValueChangeKindKey" ovadd="10.3.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSKeyValueChangeNewKey" ovadd="10.3.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSKeyValueChangeNotificationIsPriorKey" ovadd="10.5.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSKeyValueChangeOldKey" ovadd="10.3.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSKeyValueObservingConstants-->
<!--StartNSLocaleConstants-->
    <chapter>
      <heading>NSLocale constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSBuddhistCalendar" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSChineseCalendar" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCurrentLocaleDidChangeNotification" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSGregorianCalendar" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHebrewCalendar" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSISO8601Calendar" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSIndianCalendar" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSIslamicCalendar" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSIslamicCivilCalendar" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSJapaneseCalendar" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleAlternateQuotationBeginDelimiterKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleAlternateQuotationEndDelimiterKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleCalendar" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleCalendarIdentifier" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleCollationIdentifier" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleCollatorIdentifier" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleCountryCode" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleCurrencyCode" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleCurrencySymbol" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleDecimalSeparator" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleExemplarCharacterSet" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleGroupingSeparator" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleIdentifier" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleLanguageCode" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleMeasurementSystem" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleQuotationBeginDelimiterKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleQuotationEndDelimiterKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleScriptCode" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleUsesMetricSystem" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLocaleVariantCode" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSPersianCalendar" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSRepublicOfChinaCalendar" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSLocaleConstants-->
<!--StartNSMapTableConstants-->
    <chapter>
      <heading>NSMapTable constants</heading>
      <p></p>
      <constant type="const NSMapTableKeyCallBacks" name="NSIntMapKeyCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMapTableValueCallBacks" name="NSIntMapValueCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMapTableKeyCallBacks" name="NSIntegerMapKeyCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMapTableValueCallBacks" name="NSIntegerMapValueCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMapTableKeyCallBacks" name="NSNonOwnedPointerMapKeyCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMapTableValueCallBacks" name="NSNonOwnedPointerMapValueCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMapTableKeyCallBacks" name="NSNonOwnedPointerOrNullMapKeyCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMapTableKeyCallBacks" name="NSNonRetainedObjectMapKeyCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMapTableValueCallBacks" name="NSNonRetainedObjectMapValueCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMapTableKeyCallBacks" name="NSObjectMapKeyCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMapTableValueCallBacks" name="NSObjectMapValueCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMapTableKeyCallBacks" name="NSOwnedPointerMapKeyCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMapTableValueCallBacks" name="NSOwnedPointerMapValueCallBacks" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSMapTableConstants-->
<!--StartNSMetadataAttributesConstants-->
    <chapter>
      <heading>NSMetadataAttributes constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSMetadataItemAcquisitionMakeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAcquisitionModelKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAlbumKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAltitudeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemApertureKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAppleLoopDescriptorsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAppleLoopsKeyFilterTypeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAppleLoopsLoopModeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAppleLoopsRootKeyKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemApplicationCategoriesKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAttributeChangeDateKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAudiencesKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAudioBitRateKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAudioChannelCountKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAudioEncodingApplicationKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAudioSampleRateKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAudioTrackNumberKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAuthorAddressesKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAuthorEmailAddressesKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemAuthorsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemBitsPerSampleKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemCFBundleIdentifierKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemCameraOwnerKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemCityKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemCodecsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemColorSpaceKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemCommentKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemComposerKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemContactKeywordsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemContentCreationDateKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemContentModificationDateKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemContentTypeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemContentTypeTreeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemContributorsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemCopyrightKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemCountryKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemCoverageKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemCreatorKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemDateAddedKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemDeliveryTypeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemDescriptionKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemDirectorKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemDisplayNameKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemDownloadedDateKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemDueDateKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemDurationSecondsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemEXIFGPSVersionKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemEXIFVersionKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemEditorsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemEmailAddressesKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemEncodingApplicationsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemExecutableArchitecturesKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemExecutablePlatformKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemExposureModeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemExposureProgramKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemExposureTimeSecondsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemExposureTimeStringKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemFNumberKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemFSContentChangeDateKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemFSCreationDateKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemFSNameKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemFSSizeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemFinderCommentKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemFlashOnOffKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemFocalLength35mmKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemFocalLengthKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemFontsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemGPSAreaInformationKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemGPSDOPKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemGPSDateStampKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemGPSDestBearingKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemGPSDestDistanceKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemGPSDestLatitudeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemGPSDestLongitudeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemGPSDifferentalKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemGPSMapDatumKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemGPSMeasureModeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemGPSProcessingMethodKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemGPSStatusKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemGPSTrackKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemGenreKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemHasAlphaChannelKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemHeadlineKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemISOSpeedKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemIdentifierKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemImageDirectionKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemInformationKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemInstantMessageAddressesKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemInstructionsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemIsApplicationManagedKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemIsGeneralMIDISequenceKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemIsLikelyJunkKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemIsUbiquitousKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemKeySignatureKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemKeywordsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemKindKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemLanguagesKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemLastUsedDateKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemLatitudeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemLayerNamesKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemLensModelKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemLongitudeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemLyricistKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemMaxApertureKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemMediaTypesKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemMeteringModeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemMusicalGenreKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemMusicalInstrumentCategoryKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemMusicalInstrumentNameKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemNamedLocationKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemNumberOfPagesKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemOrganizationsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemOrientationKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemOriginalFormatKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemOriginalSourceKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemPageHeightKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemPageWidthKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemParticipantsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemPathKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemPerformersKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemPhoneNumbersKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemPixelCountKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemPixelHeightKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemPixelWidthKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemProducerKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemProfileNameKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemProjectsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemPublishersKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemRecipientAddressesKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemRecipientEmailAddressesKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemRecipientsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemRecordingDateKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemRecordingYearKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemRedEyeOnOffKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemResolutionHeightDPIKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemResolutionWidthDPIKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemRightsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemSecurityMethodKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemSpeedKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemStarRatingKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemStateOrProvinceKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemStreamableKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemSubjectKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemTempoKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemTextContentKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemThemeKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemTimeSignatureKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemTimestampKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemTitleKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemTotalBitRateKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemURLKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemVersionKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemVideoBitRateKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemWhereFromsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataItemWhiteBalanceKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemContainerDisplayNameKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemDownloadRequestedKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemDownloadingErrorKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemDownloadingStatusCurrent" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemDownloadingStatusDownloaded" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemDownloadingStatusKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemDownloadingStatusNotDownloaded" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemHasUnresolvedConflictsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemIsDownloadedKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemIsDownloadingKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemIsExternalDocumentKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemIsSharedKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemIsUploadedKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemIsUploadingKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemPercentDownloadedKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemPercentUploadedKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemURLInLocalContainerKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousItemUploadingErrorKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousSharedItemCurrentUserPermissionsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousSharedItemCurrentUserRoleKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousSharedItemMostRecentEditorNameComponentsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousSharedItemOwnerNameComponentsKey" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousSharedItemPermissionsReadOnly" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousSharedItemPermissionsReadWrite" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousSharedItemRoleOwner" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataUbiquitousSharedItemRoleParticipant" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSMetadataAttributesConstants-->
<!--StartNSMetadataConstants-->
    <chapter>
      <heading>NSMetadata constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSMetadataQueryDidFinishGatheringNotification" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataQueryDidStartGatheringNotification" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataQueryDidUpdateNotification" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataQueryGatheringProgressNotification" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataQueryLocalComputerScope" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataQueryNetworkScope" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataQueryUbiquitousDataScope" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataQueryUbiquitousDocumentsScope" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMetadataQueryUserHomeScope" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSMetadataConstants-->
<!--StartNSNetServicesConstants-->
    <chapter>
      <heading>NSNetServices constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSNetServicesErrorCode" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSNetServicesErrorDomain" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSNetServicesConstants-->
<!--StartNSPersonNameComponentsFormatterConstants-->
    <chapter>
      <heading>NSPersonNameComponentsFormatter constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSPersonNameComponentDelimiter" ovadd="10.11.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSPersonNameComponentFamilyName" ovadd="10.11.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSPersonNameComponentGivenName" ovadd="10.11.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSPersonNameComponentKey" ovadd="10.11.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSPersonNameComponentMiddleName" ovadd="10.11.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSPersonNameComponentNickname" ovadd="10.11.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSPersonNameComponentPrefix" ovadd="10.11.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSPersonNameComponentSuffix" ovadd="10.11.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSPersonNameComponentsFormatterConstants-->
<!--StartNSPortConstants-->
    <chapter>
      <heading>NSPort constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSPortDidBecomeInvalidNotification" ovadd="1.0.0">
        <desc>
          Notification posted when an instance of
          <ref type="class" id="NSPort">NSPort</ref>
            or a subclass becomes invalid.
        </desc>
      </constant>
    </chapter>
<!--EndNSPortConstants-->
<!--StartNSRegularExpressionConstants-->
    <chapter>
      <heading>NSRegularExpression constants</heading>
      <p></p>
      <constant type="const NSMatchingOptions" name="NSMatchingAnchored" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMatchingFlags" name="NSMatchingCompleted" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMatchingFlags" name="NSMatchingHitEnd" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMatchingFlags" name="NSMatchingInternalError" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMatchingFlags" name="NSMatchingProgress" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMatchingOptions" name="NSMatchingReportCompletion" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMatchingOptions" name="NSMatchingReportProgress" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMatchingFlags" name="NSMatchingRequiredEnd" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMatchingOptions" name="NSMatchingWithTransparentBounds" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSMatchingOptions" name="NSMatchingWithoutAnchoringBounds" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSRegularExpressionOptions" name="NSRegularExpressionAllowCommentsAndWhitespace" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSRegularExpressionOptions" name="NSRegularExpressionAnchorsMatchLines" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSRegularExpressionOptions" name="NSRegularExpressionCaseInsensitive" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSRegularExpressionOptions" name="NSRegularExpressionDotMatchesLineSeparators" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSRegularExpressionOptions" name="NSRegularExpressionIgnoreMetacharacters" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSRegularExpressionOptions" name="NSRegularExpressionUseUnicodeWordBoundaries" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const NSRegularExpressionOptions" name="NSRegularExpressionUseUnixLineSeparators" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSRegularExpressionConstants-->
<!--StartNSSpellServerConstants-->
    <chapter>
      <heading>NSSpellServer constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSGrammarCorrections" ovadd="10.5.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSGrammarRange" ovadd="10.5.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSGrammarUserDescription" ovadd="10.5.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSSpellServerConstants-->
<!--StartNSStreamConstants-->
    <chapter>
      <heading>NSStream constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSStreamDataWrittenToMemoryStreamKey" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamFileCurrentOffsetKey" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSOCKSErrorDomain" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSOCKSProxyConfigurationKey" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSOCKSProxyHostKey" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSOCKSProxyPasswordKey" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSOCKSProxyPortKey" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSOCKSProxyUserKey" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSOCKSProxyVersion4" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSOCKSProxyVersion5" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSOCKSProxyVersionKey" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSocketSSLErrorDomain" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSocketSecurityLevelKey" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSocketSecurityLevelNegotiatedSSL" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSocketSecurityLevelNone" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSocketSecurityLevelSSLv2" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSocketSecurityLevelSSLv3" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSStreamSocketSecurityLevelTLSv1" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSStreamConstants-->
<!--StartNSTaskConstants-->
    <chapter>
      <heading>NSTask constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSTaskDidTerminateNotification" ovadd="1.0.0">
        <desc>
          Notification posted when an
          <ref type="class" id="NSTask">NSTask</ref>
            terminates, either due to the subprocess ending
            or the
            <ref type="method" id="-terminate" class="NSTask">
              [NSTask -terminate]
            </ref>
            method explicitly being called.
        </desc>
      </constant>
    </chapter>
<!--EndNSTaskConstants-->
<!--StartNSThreadConstants-->
    <chapter>
      <heading>NSThread constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSThreadDidStartNotification" gvadd="0.0.0" gvrem="0.0.0">
        <desc>
          Notification posted whenever a new thread is
          started up. This is a GNUstep extension.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSThreadWillExitNotification" ovadd="1.0.0">
        <desc>
          Notification posted when an
          <ref type="class" id="NSThread">NSThread</ref>
            instance receives an exit message, or an external
            thread has been deregistered.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSWillBecomeMultiThreadedNotification" ovadd="1.0.0">
        <desc>
          Notification posted the first time a new
          <ref type="class" id="NSThread">NSThread</ref>
            is created or a separate thread from another library is
            registered in an application. (The initial
            thread that a program starts with does <em>not</em>
            post this notification.) Before such a notification
            has been posted you can assume the application is in
            single-threaded mode and locks are not
            necessary. Afterwards multiple threads
            <em>may</em> be running.
        </desc>
      </constant>
    </chapter>
<!--EndNSThreadConstants-->
<!--StartNSTimeZoneConstants-->
    <chapter>
      <heading>NSTimeZone constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSSystemTimeZoneDidChangeNotification" ovadd="10.5.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSTimeZoneConstants-->
<!--StartNSUbiquitousKeyValueStoreConstants-->
    <chapter>
      <heading>NSUbiquitousKeyValueStore constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSUbiquitousKeyValueStoreChangeReasonKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSUbiquitousKeyValueStoreDidChangeExternallyNotification" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSUbiquitousKeyValueStoreConstants-->
<!--StartNSUndoManagerConstants-->
    <chapter>
      <heading>NSUndoManager constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSUndoManagerCheckpointNotification" ovadd="10.0.0">
        <desc>
          Notification posted whenever
          <ref type="class" id="NSUndoManager">NSUndoManager</ref>
            opens or closes an undo group. The undo manager
            itself is the notification object, with no
            <em>userInfo</em> dictionary.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSUndoManagerDidOpenUndoGroupNotification" ovadd="10.0.0">
        <desc>
          Notification posted after an
          <ref type="class" id="NSUndoManager">NSUndoManager</ref>
            opens an undo group.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSUndoManagerDidRedoChangeNotification" ovadd="10.0.0">
        <desc>
          Notification posted after an
          <ref type="class" id="NSUndoManager">NSUndoManager</ref>
            executes a redo operation.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSUndoManagerDidUndoChangeNotification" ovadd="10.0.0">
        <desc>
          Notification posted after an
          <ref type="class" id="NSUndoManager">NSUndoManager</ref>
            executes an undo operation.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSUndoManagerWillCloseUndoGroupNotification" ovadd="10.0.0">
        <desc>
          Notification posted before an
          <ref type="class" id="NSUndoManager">NSUndoManager</ref>
            closes an undo group.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSUndoManagerWillRedoChangeNotification" ovadd="10.0.0">
        <desc>
          Notification posted before an
          <ref type="class" id="NSUndoManager">NSUndoManager</ref>
            will execute a redo operation.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSUndoManagerWillUndoChangeNotification" ovadd="10.0.0">
        <desc>
          Notification posted before an
          <ref type="class" id="NSUndoManager">NSUndoManager</ref>
            will execute an undo operation.
        </desc>
      </constant>
    </chapter>
<!--EndNSUndoManagerConstants-->
<!--StartNSURLCredentialStorageConstants-->
    <chapter>
      <heading>NSURLCredentialStorage constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSURLCredentialStorageChangedNotification" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Notification sent when the set of stored
          credentials changes.
        </desc>
      </constant>
    </chapter>
<!--EndNSURLCredentialStorageConstants-->
<!--StartNSURLErrorConstants-->
    <chapter>
      <heading>NSURLError constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSErrorFailingURLStringKey" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Obtain the URL which caused the failure
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLErrorDomain" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          The domain for a URL error.
        </desc>
      </constant>
    </chapter>
<!--EndNSURLErrorConstants-->
<!--StartNSURLConstants-->
    <chapter>
      <heading>NSURL constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSThumbnail1024x1024SizeKey" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLAddedToDirectoryDateKey" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLApplicationIsScriptableKey" ovadd="10.11.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLAttributeModificationDateKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLContentAccessDateKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLContentModificationDateKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLCreationDateKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLCustomIconKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLDocumentIdentifierKey" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLEffectiveIconKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLFileAllocatedSizeKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLFileResourceIdentifierKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLFileResourceTypeBlockSpecial" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLFileResourceTypeCharacterSpecial" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLFileResourceTypeDirectory" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLFileResourceTypeKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLFileResourceTypeNamedPipe" ovadd="10.7.0">
        <desc>
          Possible values for File Resource Type Key
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLFileResourceTypeRegular" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLFileResourceTypeSocket" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLFileResourceTypeSymbolicLink" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLFileResourceTypeUnknown" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLFileScheme" ovadd="10.0.0">
        <desc>
          URL scheme constant for use with
          <ref type="method" id="-initWithScheme:host:path:" class="NSURL">[NSURL -initWithScheme:host:path:]</ref>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLFileSecurityKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLFileSizeKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLGenerationIdentifierKey" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLHasHiddenExtensionKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsAliasFileKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsApplicationKey" ovadd="10.11.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsDirectoryKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsExcludedFromBackupKey" ovadd="10.8.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsExecutableKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsHiddenKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsMountTriggerKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsPackageKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsReadableKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsRegularFileKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsSymbolicLinkKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsSystemImmutableKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsUbiquitousItemKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsUserImmutableKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsVolumeKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLIsWritableKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLLabelColorKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLLabelNumberKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLLinkCountKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLLocalizedLabelKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLLocalizedNameKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLLocalizedTypeDescriptionKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLNameKey" ovadd="10.6.0">
        <desc>
          URL Resource Value Constants
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLParentDirectoryURLKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLPathKey" ovadd="10.8.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLPreferredIOBlockSizeKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLQuarantinePropertiesKey" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLTagNamesKey" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLTotalFileAllocatedSizeKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLTotalFileSizeKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLTypeIdentifierKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLUbiquitousItemContainerDisplayNameKey" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLUbiquitousItemDownloadRequestedKey" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLUbiquitousItemDownloadingErrorKey" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLUbiquitousItemDownloadingStatusCurrent" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLUbiquitousItemDownloadingStatusDownloaded" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLUbiquitousItemDownloadingStatusKey" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLUbiquitousItemDownloadingStatusNotDownloaded" ovadd="10.9.0">
        <desc>
          Possible values for Ubiquitous Item Downloading Key
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLUbiquitousItemHasUnresolvedConflictsKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLUbiquitousItemIsDownloadingKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLUbiquitousItemIsUploadedKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLUbiquitousItemIsUploadingKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLUbiquitousItemUploadingErrorKey" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeAvailableCapacityKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeCreationDateKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeIdentifierKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeIsAutomountedKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeIsBrowsableKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeIsEjectableKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeIsInternalKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeIsJournalingKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeIsLocalKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeIsReadOnlyKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeIsRemovableKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeLocalizedFormatDescriptionKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeLocalizedNameKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeMaximumFileSizeKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeNameKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeResourceCountKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeSupportsAdvisoryFileLockingKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeSupportsCasePreservedNamesKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeSupportsCaseSensitiveNamesKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeSupportsExtendedSecurityKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeSupportsHardLinksKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeSupportsJournalingKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeSupportsPersistentIDsKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeSupportsRenamingKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeSupportsRootDirectoryDatesKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeSupportsSparseFilesKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeSupportsSymbolicLinksKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeSupportsVolumeSizesKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeSupportsZeroRunsKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeTotalCapacityKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeURLForRemountingKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeURLKey" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLVolumeUUIDStringKey" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSURLConstants-->
<!--StartNSURLHandleConstants-->
    <chapter>
      <heading>NSURLHandle constants</heading>
      <p></p>
      <constant type="NSString* const" name="GSHTTPPropertyCertificateFileKey" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Key for passing to
          <ref type="class" id="NSURLHandle">NSURLHandle</ref>
            's <code>propertyForKey..</code> methods to specify the
            location of an SSL certificate file.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSHTTPPropertyKeyFileKey" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Key for passing to
          <ref type="class" id="NSURLHandle">NSURLHandle</ref>
            's <code>propertyForKey..</code> methods to specify the
            location of an SSL key file.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSHTTPPropertyLocalHostKey" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Key for passing to
          <ref type="class" id="NSURLHandle">NSURLHandle</ref>
            's <code>propertyForKey..</code> methods to obtain local
            host.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSHTTPPropertyMethodKey" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Key for passing to
          <ref type="class" id="NSURLHandle">NSURLHandle</ref>
            's <code>propertyForKey..</code> methods to obtain
            method (GET, POST, etc.).
        </desc>
      </constant>
      <constant type="NSString* const" name="GSHTTPPropertyPasswordKey" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Key for passing to
          <ref type="class" id="NSURLHandle">NSURLHandle</ref>
            's <code>propertyForKey..</code> methods to specify the
            password for an SSL key file.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSHTTPPropertyProxyHostKey" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Key for passing to
          <ref type="class" id="NSURLHandle">NSURLHandle</ref>
            's <code>propertyForKey..</code> methods to obtain proxy
            host.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSHTTPPropertyProxyPortKey" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          Key for passing to
          <ref type="class" id="NSURLHandle">NSURLHandle</ref>
            's <code>propertyForKey..</code> methods to obtain proxy
            port.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPPropertyErrorPageDataKey" ovadd="10.0.0">
        <desc>
          Key for passing to
          <ref type="class" id="NSURLHandle">NSURLHandle</ref>
            's <code>propertyForKey..</code> methods to obtain error
            page data.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPPropertyRedirectionHeadersKey" ovadd="10.0.0">
        <desc>
          Key for passing to
          <ref type="class" id="NSURLHandle">NSURLHandle</ref>
            's <code>propertyForKey..</code> methods to obtain
            redirection headers.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPPropertyServerHTTPVersionKey" ovadd="10.0.0">
        <desc>
          Key for passing to
          <ref type="class" id="NSURLHandle">NSURLHandle</ref>
            's <code>propertyForKey..</code> methods to obtain HTTP
            version supported by server.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPPropertyStatusCodeKey" ovadd="10.0.0">
        <desc>
          Key for passing to
          <ref type="class" id="NSURLHandle">NSURLHandle</ref>
            's <code>propertyForKey..</code> methods to obtain
            status code.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHTTPPropertyStatusReasonKey" ovadd="10.0.0">
        <desc>
          Key for passing to
          <ref type="class" id="NSURLHandle">NSURLHandle</ref>
            's <code>propertyForKey..</code> methods to obtain
            status reason.
        </desc>
      </constant>
    </chapter>
<!--EndNSURLHandleConstants-->
<!--StartNSURLProtectionSpaceConstants-->
    <chapter>
      <heading>NSURLProtectionSpace constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSURLAuthenticationMethodClientCertificate" ovadd="10.6.0" gvadd="1.13.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLAuthenticationMethodDefault" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Default authentication (Basic)
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLAuthenticationMethodHTMLForm" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          HTML form authentication
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLAuthenticationMethodHTTPBasic" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          HTTP Basic authentication
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLAuthenticationMethodHTTPDigest" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          HTTP Digest authentication
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLAuthenticationMethodNTLM" ovadd="10.5.0" gvadd="1.13.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLAuthenticationMethodNegotiate" ovadd="10.5.0" gvadd="1.13.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLAuthenticationMethodServerTrust" ovadd="10.6.0" gvadd="1.13.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLProtectionSpaceFTPProxy" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          An FTP proxy
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLProtectionSpaceHTTPProxy" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          An HTTP proxy
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLProtectionSpaceHTTPSProxy" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          An HTTPS proxy
        </desc>
      </constant>
      <constant type="NSString* const" name="NSURLProtectionSpaceSOCKSProxy" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          A SOCKS proxy
        </desc>
      </constant>
    </chapter>
<!--EndNSURLProtectionSpaceConstants-->
<!--StartNSURLSessionConstants-->
    <chapter>
      <heading>NSURLSession constants</heading>
      <p></p>
      <constant type="const float" name="NSURLSessionTaskPriorityDefault" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const float" name="NSURLSessionTaskPriorityHigh" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const float" name="NSURLSessionTaskPriorityLow" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="const int64_t" name="NSURLSessionTransferSizeUnknown" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSURLSessionConstants-->
<!--StartNSUserDefaultsConstants-->
    <chapter>
      <heading>NSUserDefaults constants</heading>
      <p></p>
      <constant type="NSString* const" name="GSCACertificateFilePath" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
      <constant type="NSString* const" name="GSConfigDomain" ovadd="1.0.0">
        <desc>
          User defaults domain for GNUstep config file and for any
          defaults stored in the GlobalDefaults.plist file
          alongside the config file.
        </desc>
      </constant>
      <constant type="NSString* const" name="GSLocale" ovadd="0.0.0">
        <desc>
          Key for locale dictionary: name of locale.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSAMPMDesignation" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: array of strings for AM and
          PM.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSArgumentDomain" ovadd="1.0.0">
        <desc>
          User defaults domain for process arguments. Command-line
          arguments (key-value pairs, as in "-NSFoo bar") are
          placed in this domain. <br /> Where there is a
          sequence of arguments beginning with '-', only the
          last one is used (so "-a" "-b" "-c" "d" will produce a
          single user default 'c' with value 'd'). <br /> NB. On
          OSX the argument "-" means a key consisting of an empty
          string (so you can't use a '-' as a default value),
          while in GNUstep a "-" is a special case which does not
          mean a default key (so '-' may be used as a value).
          <br />
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCurrencyString" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: text formatter string for
          monetary amounts.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSCurrencySymbol" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: currency symbol.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSDateFormatString" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: format string for feeding to
          <ref type="class" id="NSDateFormatter">NSDateFormatter</ref>
            .
        </desc>
      </constant>
      <constant type="NSString* const" name="NSDateTimeOrdering" ovadd="0.0.0">
        <desc>
          Key for locale dictionary: string with 'Y', 'M', 'D', and
          'H' designating the default method of writing dates, as
          in "MDYH" for the U.S..
        </desc>
      </constant>
      <constant type="NSString* const" name="NSDecimalDigits" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: array of strings for 0-9.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSDecimalSeparator" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: decimal separator.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSEarlierTimeDesignations" ovadd="0.0.0">
        <desc>
          Key for locale dictionary: adjectives that modify values
          in NSYearMonthWeekDesignations, as in "last", "previous",
          etc..
        </desc>
      </constant>
      <constant type="NSString* const" name="NSFormalName" ovadd="0.0.0">
        <desc>
          Key for locale dictionary: formal name of language.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSGlobalDomain" ovadd="1.0.0">
        <desc>
          User defaults domain for system defaults.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSHourNameDesignations" ovadd="0.0.0">
        <desc>
          Array of arrays of NSStrings, first member of each
          specifying a time, followed by one or more
          colloquial names for the time, as in "(0,
          midnight), (12, noon, lunch)".
        </desc>
      </constant>
      <constant type="NSString* const" name="NSInternationalCurrencyString" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: three-letter ISO 4217 currency
          abbreviation.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLanguageCode" ovadd="0.0.0">
        <desc>
          Key for locale dictionary: two-letter ISO code.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLanguageName" ovadd="0.0.0">
        <desc>
          Key for locale dictionary: name of language.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSLaterTimeDesignations" ovadd="0.0.0">
        <desc>
          Key for locale dictionary: adjectives that modify values
          in NSYearMonthWeekDesignations, as in "next",
          "subsequent", etc..
        </desc>
      </constant>
      <constant type="NSString* const" name="NSMonthNameArray" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: names of months of year.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSNextDayDesignations" ovadd="0.0.0">
        <desc>
          Key for locale dictionary: one or more strings
          designating the next day, such as "tomorrow".
        </desc>
      </constant>
      <constant type="NSString* const" name="NSNextNextDayDesignations" ovadd="0.0.0">
        <desc>
          Key for locale dictionary: one or more strings
          designating the next day, such as "day after
          tomorrow".
        </desc>
      </constant>
      <constant type="NSString* const" name="NSPriorDayDesignations" ovadd="0.0.0">
        <desc>
          Key for locale dictionary: one or more strings
          designating the previous day, such as
          "yesterday".
        </desc>
      </constant>
      <constant type="NSString* const" name="NSRegistrationDomain" ovadd="1.0.0">
        <desc>
          User defaults domain for application-registered "default
          defaults".
        </desc>
      </constant>
      <constant type="NSString* const" name="NSShortDateFormatString" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: format string for feeding to
          <ref type="class" id="NSDateFormatter">NSDateFormatter</ref>
            .
        </desc>
      </constant>
      <constant type="NSString* const" name="NSShortMonthNameArray" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: abbreviations of months of
          year.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSShortTimeDateFormatString" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: format string for feeding to
          <ref type="class" id="NSDateFormatter">NSDateFormatter</ref>
            .
        </desc>
      </constant>
      <constant type="NSString* const" name="NSShortWeekDayNameArray" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: abbreviations of days of week.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSThisDayDesignations" ovadd="0.0.0">
        <desc>
          Key for locale dictionary: one or more strings
          designating the current day, such as "today".
        </desc>
      </constant>
      <constant type="NSString* const" name="NSThousandsSeparator" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: thousands separator.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSTimeDateFormatString" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: format string for feeding to
          <ref type="class" id="NSDateFormatter">NSDateFormatter</ref>
            .
        </desc>
      </constant>
      <constant type="NSString* const" name="NSTimeFormatString" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: format string for feeding to
          <ref type="class" id="NSDateFormatter">NSDateFormatter</ref>
            .
        </desc>
      </constant>
      <constant type="NSString* const" name="NSUserDefaultsDidChangeNotification" ovadd="1.0.0">
        <desc>
          Notification posted when a defaults synchronize
          has been performed (see
          <ref type="method" id="-synchronize" class="NSUserDefaults">
            [NSUserDefaults -synchronize]
          </ref>
          ) and changes have been loaded in from disk.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSWeekDayNameArray" ovadd="1.0.0">
        <desc>
          Key for locale dictionary: names of days of week.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSYearMonthWeekDesignations" ovadd="0.0.0">
        <desc>
          Strings for "year", "month", "week".
        </desc>
      </constant>
    </chapter>
<!--EndNSUserDefaultsConstants-->
<!--StartNSUserNotificationConstants-->
    <chapter>
      <heading>NSUserNotification constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSUserNotificationDefaultSoundName" ovadd="10.8.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </constant>
    </chapter>
<!--EndNSUserNotificationConstants-->
<!--StartNSValueTransformerConstants-->
    <chapter>
      <heading>NSValueTransformer constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSIsNilTransformerName" ovadd="10.3.0" gvadd="1.2.0">
        <desc>
          This transformer converts a <code>nil</code> value to a
          <code>YES</code>. <br /> Not reversible.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSIsNotNilTransformerName" ovadd="10.3.0" gvadd="1.2.0">
        <desc>
          This transformer converts a non-nil value to a
          <code>YES</code>. <br /> Not reversible.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSNegateBooleanTransformerName" ovadd="10.3.0" gvadd="1.2.0">
        <desc>
          This transformer converts a <code>YES</code> to a
          <code>NO</code> and a <code>NO</code> to a
          <code>YES</code>.
        </desc>
      </constant>
      <constant type="NSString* const" name="NSUnarchiveFromDataTransformerName" ovadd="10.3.0" gvadd="1.2.0">
        <desc>
          This transformer converts an
          <ref type="class" id="NSData">NSData</ref>
            instance to the object archived in it, or archives
            an object inot an
            <ref type="class" id="NSData">NSData</ref>
              .
        </desc>
      </constant>
    </chapter>
<!--EndNSValueTransformerConstants-->
<!--StartNSXMLParserConstants-->
    <chapter>
      <heading>NSXMLParser constants</heading>
      <p></p>
      <constant type="NSString* const" name="NSXMLParserErrorDomain" ovadd="10.3.0">
        <desc>
          Domain for errors
        </desc>
      </constant>
    </chapter>
<!--EndNSXMLParserConstants-->
<!--EndConstants-->
<!--StartTypedefs-->
<!--StartNSArrayTypedefs-->
    <chapter>
      <heading>NSArray types</heading>
      <p></p>
      <type type="NSUInteger" name="NSBinarySearchingOptions" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSArrayTypedefs-->
<!--StartNSAttributedStringTypedefs-->
    <chapter>
      <heading>NSAttributedString types</heading>
      <p></p>
      <type type="NSString*" name="NSAttributedStringKey" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSAttributedStringTypedefs-->
<!--StartNSAutoreleasePoolTypedefs-->
    <chapter>
      <heading>NSAutoreleasePool types</heading>
      <p></p>
      <type type="struct autorelease_array_list" name="struct autorelease_array_list" ovadd="1.0.0">
        <desc>
          Each pool holds its objects-to-be-released in a
          linked-list of these structures.
<example>
{
  struct autorelease_array_list *next;
  unsigned size;
  unsigned count;
  id objects[0];
}
    </example>
        </desc>
      </type>
      <type type="struct autorelease_thread_vars" name="struct autorelease_thread_vars" ovadd="1.0.0">
        <desc>
          Each thread has its own copy of these variables.
<example>
{
  NSAutoreleasePool *current_pool; // current pool for thread
  unsigned total_objects_count;    // total #/autoreleased objects over thread's lifetime
  id *pool_cache;                  // cache of previously-allocated pools,
  int pool_cache_size;             //  used internally for recycling
  int pool_cache_count;
}
 </example>
        </desc>
      </type>
    </chapter>
<!--EndNSAutoreleasePoolTypedefs-->
<!--StartNSBackgroundActivitySchedulerTypedefs-->
    <chapter>
      <heading>NSBackgroundActivityScheduler types</heading>
      <p></p>
      <type type="NSInteger" name="NSBackgroundActivityResult" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSInteger" name="NSQualityOfService" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSBackgroundActivitySchedulerTypedefs-->
<!--StartNSByteCountFormatterTypedefs-->
    <chapter>
      <heading>NSByteCountFormatter types</heading>
      <p></p>
      <type type="NSInteger" name="NSByteCountFormatterCountStyle" ovadd="10.8.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSInteger" name="NSByteCountFormatterUnits" ovadd="10.8.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSByteCountFormatterTypedefs-->
<!--StartNSByteOrderTypedefs-->
    <chapter>
      <heading>NSByteOrder types</heading>
      <p></p>
      <type type="enum ..." name="NSByteOrder" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="uint64_t" name="NSSwappedDouble" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="uint32_t" name="NSSwappedFloat" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSByteOrderTypedefs-->
<!--StartNSCalendarTypedefs-->
    <chapter>
      <heading>NSCalendar types</heading>
      <p></p>
      <type type="NSUInteger" name="NSCalendarOptions" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSCalendarUnit" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSCalendarTypedefs-->
<!--StartNSComparisonPredicateTypedefs-->
    <chapter>
      <heading>NSComparisonPredicate types</heading>
      <p></p>
      <type type="enum _NSComparisonPredicateModifier" name="NSComparisonPredicateModifier" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="enum _NSComparisonPredicateOptions" name="NSComparisonPredicateOptions" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="enum _NSPredicateOperatorType" name="NSPredicateOperatorType" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSComparisonPredicateTypedefs-->
<!--StartNSCompoundPredicateTypedefs-->
    <chapter>
      <heading>NSCompoundPredicate types</heading>
      <p></p>
      <type type="NSUInteger" name="NSCompoundPredicateType" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSCompoundPredicateTypedefs-->
<!--StartNSDataTypedefs-->
    <chapter>
      <heading>NSData types</heading>
      <p></p>
      <type type="NSUInteger" name="NSDataBase64DecodingOptions" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSDataBase64EncodingOptions" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSDataSearchOptions" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSDataTypedefs-->
<!--StartNSDateComponentsFormatterTypedefs-->
    <chapter>
      <heading>NSDateComponentsFormatter types</heading>
      <p></p>
      <type type="NSInteger" name="NSDateComponentsFormatterUnitsStyle" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSDateComponentsFormatterZeroFormattingBehavior" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSDateComponentsFormatterTypedefs-->
<!--StartNSDateFormatterTypedefs-->
    <chapter>
      <heading>NSDateFormatter types</heading>
      <p></p>
      <type type="NSUInteger" name="NSDateFormatterBehavior" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSDateFormatterStyle" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSDateFormatterTypedefs-->
<!--StartNSDateTypedefs-->
    <chapter>
      <heading>NSDate types</heading>
      <p></p>
      <type type="double" name="NSTimeInterval" ovadd="1.0.0">
        <desc>
          Time interval difference between two dates, in seconds.
        </desc>
      </type>
    </chapter>
<!--EndNSDateTypedefs-->
<!--StartNSDateIntervalFormatterTypedefs-->
    <chapter>
      <heading>NSDateIntervalFormatter types</heading>
      <p></p>
      <type type="NSUInteger" name="NSDateIntervalFormatterStyle" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSDateIntervalFormatterTypedefs-->
<!--StartNSDebugTypedefs-->
    <chapter>
      <heading>NSDebug types</heading>
      <p></p>
      <type type="NSObject*(*" name="GSDebugAllocationTraceFunction" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSDebugTypedefs-->
<!--StartNSDecimalTypedefs-->
    <chapter>
      <heading>NSDecimal types</heading>
      <p></p>
      <type type="NSUInteger" name="NSCalculationError" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSRoundingMode" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSDecimalTypedefs-->
<!--StartNSDistributedNotificationCenterTypedefs-->
    <chapter>
      <heading>NSDistributedNotificationCenter types</heading>
      <p></p>
      <type type="NSUInteger" name="NSNotificationSuspensionBehavior" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSDistributedNotificationCenterTypedefs-->
<!--StartNSEnergyFormatterTypedefs-->
    <chapter>
      <heading>NSEnergyFormatter types</heading>
      <p></p>
      <type type="NSInteger" name="NSEnergyFormatterUnit" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSEnergyFormatterTypedefs-->
<!--StartNSErrorTypedefs-->
    <chapter>
      <heading>NSError types</heading>
      <p></p>
      <type type="NSString*" name="NSErrorDomain" ovadd="10.3.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSErrorTypedefs-->
<!--StartNSExceptionTypedefs-->
    <chapter>
      <heading>NSException types</heading>
      <p></p>
      <type type="struct _NSHandler" name="struct _NSHandler" ovadd="1.0.0">
        <desc>
          The actual structure for an NSHandler. You shouldn't need
          to worry about it.
        </desc>
      </type>
    </chapter>
<!--EndNSExceptionTypedefs-->
<!--StartNSExpressionTypedefs-->
    <chapter>
      <heading>NSExpression types</heading>
      <p></p>
      <type type="NSUInteger" name="NSExpressionType" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSExpressionTypedefs-->
<!--StartNSFileCoordinatorTypedefs-->
    <chapter>
      <heading>NSFileCoordinator types</heading>
      <p></p>
      <type type="NSUInteger" name="NSFileCoordinatorReadingOptions" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSFileCoordinatorWritingOptions" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSFileCoordinatorTypedefs-->
<!--StartNSFileManagerTypedefs-->
    <chapter>
      <heading>NSFileManager types</heading>
      <p></p>
      <type type="NSUInteger" name="NSDirectoryEnumerationOptions" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="uint32_t" name="OSType" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSFileManagerTypedefs-->
<!--StartNSFileVersionTypedefs-->
    <chapter>
      <heading>NSFileVersion types</heading>
      <p></p>
      <type type="NSUInteger" name="NSFileVersionAddingOptions" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSFileVersionReplacingOptions" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSFileVersionTypedefs-->
<!--StartNSFileWrapperTypedefs-->
    <chapter>
      <heading>NSFileWrapper types</heading>
      <p></p>
      <type type="enum ..." name="GSFileWrapperType" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSFileWrapperReadingOptions" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSFileWrapperWritingOptions" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSFileWrapperTypedefs-->
<!--StartNSFormatterTypedefs-->
    <chapter>
      <heading>NSFormatter types</heading>
      <p></p>
      <type type="NSInteger" name="NSFormattingContext" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSInteger" name="NSFormattingUnitStyle" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSFormatterTypedefs-->
<!--StartNSGeometryTypedefs-->
    <chapter>
      <heading>NSGeometry types</heading>
      <p></p>
      <type type="struct CGPoint" name="NSPoint" ovadd="1.0.0">
        <desc>
<example>{
  CGFloat x;
  CGFloat y;
}</example>
          <p>
            Represents a 2-d cartesian position.
          </p>
        </desc>
      </type>
      <type type="NSPoint*" name="NSPointArray" ovadd="10.0.0">
        <desc>
          Array of NSPoint structs.
        </desc>
      </type>
      <type type="NSPoint*" name="NSPointPointer" ovadd="10.0.0">
        <desc>
          Pointer to NSPoint struct.
        </desc>
      </type>
      <type type="struct CGRect" name="NSRect" ovadd="1.0.0">
        <desc>
<example>{
  NSPoint origin;
  NSSize size;
}</example>
          <p>
            Rectangle.
          </p>
        </desc>
      </type>
      <type type="NSRect*" name="NSRectArray" ovadd="10.0.0">
        <desc>
          Array of NSRect structs.
        </desc>
      </type>
      <type type="NSUInteger" name="NSRectEdge" ovadd="1.0.0">
        <desc>
          Sides of a rectangle.
<example>
{
  NSMinXEdge,
  NSMinYEdge,
  NSMaxXEdge,
  NSMaxYEdge
}
</example>
        </desc>
      </type>
      <type type="NSRect*" name="NSRectPointer" ovadd="10.0.0">
        <desc>
          Pointer to NSRect struct.
        </desc>
      </type>
      <type type="struct CGSize" name="NSSize" ovadd="1.0.0">
        <desc>
<example>{
  CGFloat width;
  CGFloat height;
}</example>
          <p>
            Floating point rectangle size.
          </p>
        </desc>
      </type>
      <type type="NSSize*" name="NSSizeArray" ovadd="10.0.0">
        <desc>
          Array of NSSize structs.
        </desc>
      </type>
      <type type="NSSize*" name="NSSizePointer" ovadd="10.0.0">
        <desc>
          Pointer to NSSize struct.
        </desc>
      </type>
      <type type="struct NSEdgeInsets" name="struct NSEdgeInsets" ovadd="10.7.0">
        <desc>
<example>{
  CGFloat top;
  CGFloat left;
  CGFloat bottom;
  CGFloat right;
}</example>
          <p>
            A description of the distance between the edges of two
            rectangles.
          </p>
        </desc>
      </type>
    </chapter>
<!--EndNSGeometryTypedefs-->
<!--StartNSHashTableTypedefs-->
    <chapter>
      <heading>NSHashTable types</heading>
      <p></p>
      <type type="NSUInteger" name="NSHashTableOptions" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="struct _NSHashTableCallBacks" name="struct _NSHashTableCallBacks" ovadd="1.0.0">
        <desc>
          Callback functions for an NSHashTable. See
          <ref type="function" id="NSCreateHashTable">
            NSCreateHashTable()
          </ref>
          . <br />
          <code>
            NSUInteger (*hash)(NSHashTable *, const
            <strong>void</strong> *)
          </code>
          ... Hashing function. NOTE: Elements with equal values
          must have equal hash function values. The default if
          NULL uses the pointer addresses directly. <br />
          <code>
            BOOL (*isEqual)(NSHashTable *, const
            <strong>void</strong> *, const
            <strong>void</strong> *)
          </code>
          ... Comparison function. The default if NULL uses '
          <code>==</code> '. <br />
          <code>
            <strong>void</strong> (*retain)(NSHashTable *,
            const <strong>void</strong> *)
          </code>
          ... Retaining function called when adding elements to the
          table. The default if NULL is a no-op (no reference
          counting). <br />
          <code>
            <strong>void</strong> (*release)(NSHashTable *,
            <strong>void</strong> *)
          </code>
          ... Releasing function called when a data element is
          removed from the table. The default if NULL is a
          no-op (no reference counting). <br />
          <code>
            NSString *(*describe)(NSHashTable *, const
            <strong>void</strong> *)
          </code>
          ... Description function. The default if NULL prints
          boilerplate. <br />
        </desc>
      </type>
    </chapter>
<!--EndNSHashTableTypedefs-->
<!--StartNSHTTPCookieStorageTypedefs-->
    <chapter>
      <heading>NSHTTPCookieStorage types</heading>
      <p></p>
      <type type="NSUInteger" name="NSHTTPCookieAcceptPolicy" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          NSHTTPCookieAcceptPolicyAlways
          Accept all cookies NSHTTPCookieAcceptPolicyNever
          Reject all cookies
          NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain
          Accept cookies only from the main document domain
        </desc>
      </type>
    </chapter>
<!--EndNSHTTPCookieStorageTypedefs-->
<!--StartNSISO8601DateFormatterTypedefs-->
    <chapter>
      <heading>NSISO8601DateFormatter types</heading>
      <p></p>
      <type type="NSUInteger" name="NSISO8601DateFormatOptions" ovadd="0.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSISO8601DateFormatterTypedefs-->
<!--StartNSItemProviderTypedefs-->
    <chapter>
      <heading>NSItemProvider types</heading>
      <p></p>
      <type type="NSInteger" name="NSItemProviderErrorCode" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSInteger" name="NSItemProviderFileOptions" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSInteger" name="NSItemProviderRepresentationVisibility" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSItemProviderTypedefs-->
<!--StartNSJSONSerializationTypedefs-->
    <chapter>
      <heading>NSJSONSerialization types</heading>
      <p></p>
      <type type="NSUInteger" name="NSJSONReadingOptions" ovadd="1.0.0">
        <desc>
          A bitmask containing flags from the NSJSONReading* set,
          specifying options to use when reading JSON.
        </desc>
      </type>
      <type type="NSUInteger" name="NSJSONWritingOptions" ovadd="1.0.0">
        <desc>
          A bitmask containing flags from the NSJSONWriting* set,
          specifying options to use when writing JSON.
        </desc>
      </type>
    </chapter>
<!--EndNSJSONSerializationTypedefs-->
<!--StartNSKeyValueObservingTypedefs-->
    <chapter>
      <heading>NSKeyValueObserving types</heading>
      <p></p>
      <type type="NSUInteger" name="NSKeyValueChange" ovadd="10.3.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSString*" name="NSKeyValueChangeKey" ovadd="10.12.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSKeyValueObservingOptions" ovadd="10.3.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSKeyValueSetMutationKind" ovadd="10.3.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSKeyValueObservingTypedefs-->
<!--StartNSLengthFormatterTypedefs-->
    <chapter>
      <heading>NSLengthFormatter types</heading>
      <p></p>
      <type type="NSInteger" name="NSLengthFormatterUnit" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSLengthFormatterTypedefs-->
<!--StartNSLinguisticTaggerTypedefs-->
    <chapter>
      <heading>NSLinguisticTagger types</heading>
      <p></p>
      <type type="NSString*" name="NSLinguisticTag" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSString*" name="NSLinguisticTagScheme" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSLinguisticTaggerOptions" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSLinguisticTaggerUnit" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSLinguisticTaggerTypedefs-->
<!--StartNSLocaleTypedefs-->
    <chapter>
      <heading>NSLocale types</heading>
      <p></p>
      <type type="NSUInteger" name="NSLocaleLanguageDirection" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSLocaleTypedefs-->
<!--StartNSMapTableTypedefs-->
    <chapter>
      <heading>NSMapTable types</heading>
      <p></p>
      <type type="NSUInteger" name="NSMapTableOptions" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="struct _NSMapTableValueCallBacks" name="NSMapTableValueCallBacks" ovadd="1.0.0">
        <desc>
          Callback functions for a value.
        </desc>
      </type>
      <type type="struct _NSMapTableKeyCallBacks" name="struct _NSMapTableKeyCallBacks" ovadd="1.0.0">
        <desc>
          Callback functions for a key. <br /> Comparison
          function. Must not modify either key. <br />
          Retaining function called when adding elements to
          table. <br /> Notionally this must not modify the key
          (the key may not actually have a retain count, or the
          retain count may be stored externally to the key, but
          in practice this often actually changes a counter within
          the key). <br /> Releasing function called when a data
          element is removed from the table. This may decrease
          a retain count or may actually destroy the key. <br />
          Description function. Generates a string
          describing the key and does not modify the key
          itself. <br /> Quantity that is not a key to the map
          table.
        </desc>
      </type>
    </chapter>
<!--EndNSMapTableTypedefs-->
<!--StartNSMassFormatterTypedefs-->
    <chapter>
      <heading>NSMassFormatter types</heading>
      <p></p>
      <type type="NSInteger" name="NSMassFormatterUnit" ovadd="10.10.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSMassFormatterTypedefs-->
<!--StartNSMeasurementFormatterTypedefs-->
    <chapter>
      <heading>NSMeasurementFormatter types</heading>
      <p></p>
      <type type="NSUInteger" name="NSMeasurementFormatterUnitOptions" ovadd="10.12.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSMeasurementFormatterTypedefs-->
<!--StartNSNetServicesTypedefs-->
    <chapter>
      <heading>NSNetServices types</heading>
      <p></p>
      <type type="NSUInteger" name="NSNetServiceOptions" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSNetServicesError" ovadd="1.0.0">
        <desc>
          <list>
            <item>
              <strong>NSNetServicesUnknownError</strong>
              <br /> An unknown error occurred. <br /> <br />
            </item>
            <item>
              <strong>NSNetServicesCollisionError</strong>
              <br /> The given registration has had a name
              collision. Registration should be cancelled
              and tried again with a different name. <br /> <br />
            </item>
            <item>
              <strong>NSNetServicesNotFoundError</strong>
              <br /> The service could not be found. <br />
              <br />
            </item>
            <item>
              <strong>NSNetServicesActivityInProgress</strong>
              <br /> A request is already in progress. <br />
              <br />
            </item>
            <item>
              <strong>NSNetServicesBadArgumentError</strong>
              <br /> An invalid argument was used to create the
              object. <br /> <br />
            </item>
            <item>
              <strong>NSNetServicesCancelledError</strong>
              <br /> The request has been cancelled. <br />
              <br />
            </item>
            <item>
              <strong>NSNetServicesInvalidError</strong>
              <br /> The service was improperly configured.
              <br /> <br />
            </item>
            <item>
              <strong>NSNetServicesTimeoutError</strong>
              <br /> The request has timed out before a
              successful resolution. <br /> <br />
            </item>
          </list>
        </desc>
      </type>
    </chapter>
<!--EndNSNetServicesTypedefs-->
<!--StartNSNotificationTypedefs-->
    <chapter>
      <heading>NSNotification types</heading>
      <p></p>
      <type type="NSString*" name="NSNotificationName" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSNotificationTypedefs-->
<!--StartNSNotificationQueueTypedefs-->
    <chapter>
      <heading>NSNotificationQueue types</heading>
      <p></p>
      <type type="NSUInteger" name="NSNotificationCoalescing" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSPostingStyle" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSNotificationQueueTypedefs-->
<!--StartNSNumberFormatterTypedefs-->
    <chapter>
      <heading>NSNumberFormatter types</heading>
      <p></p>
      <type type="NSUInteger" name="NSNumberFormatterBehavior" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSNumberFormatterPadPosition" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSNumberFormatterRoundingMode" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSNumberFormatterStyle" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSNumberFormatterTypedefs-->
<!--StartNSObjCRuntimeTypedefs-->
    <chapter>
      <heading>NSObjCRuntime types</heading>
      <p></p>
      <type type="NS_ENUM(NSInteger)" name="NSComparisonResult" ovadd="1.0.0">
        <desc>
          Contains values <code>NSOrderedSame</code>,
          <code>NSOrderedAscending</code>
          <code>NSOrderedDescending</code>, for left hand side
          equals, less than, or greater than right hand side.
          <deflist>
            <term><em>NSOrderedAscending</em></term>
            <desc></desc> <term><em>NSOrderedSame</em></term>
            <desc></desc>
            <term><em>NSOrderedDescending</em></term>
            <desc></desc>
          </deflist>
        </desc>
      </type>
      <type type="NS_OPTIONS(NSUInteger)" name="NSEnumerationOptions" ovadd="1.0.0">
        <desc>
          Backwards compatibility macro for the
          objc_designated_initializer
          attribute <br /> Bitfield used to specify options
          to control enumeration over collections.
          <deflist>
            <term><em>NSEnumerationConcurrent</em></term>
            <desc></desc>
            <term><em>NSEnumerationReverse</em></term>
            <desc>
              Specifies that the enumeration is
              concurrency-safe. Note that this does
              not mean that it will be carried out in a concurrent
              manner, only that it can be.
            </desc>
          </deflist>
        </desc>
      </type>
      <type type="NSString*" name="NSExceptionName" ovadd="1.0.0">
        <desc>
          Declare the foundation export macro as an alias to
          GS_EXPORT <br /> Declare NSExceptionName
        </desc>
      </type>
      <type type="intptr_t" name="NSInteger" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NS_OPTIONS(NSUInteger)" name="NSSortOptions" ovadd="1.0.0">
        <desc>
          Bitfield used to specify options to control the
          sorting of collections.
          <deflist>
            <term><em>NSSortConcurrent</em></term> <desc></desc>
            <term><em>NSSortStable</em></term>
            <desc>
              Specifies that the sort is concurrency-safe.
              Note that this does not mean that it will be carried
              out in a concurrent manner, only that it can be.
            </desc>
          </deflist>
        </desc>
      </type>
      <type type="uintptr_t" name="NSUInteger" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSObjCRuntimeTypedefs-->
<!--StartNSOperationTypedefs-->
    <chapter>
      <heading>NSOperation types</heading>
      <p></p>
      <type type="NSInteger" name="NSOperationQueuePriority" ovadd="10.5.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSOperationTypedefs-->
<!--StartNSPathUtilitiesTypedefs-->
    <chapter>
      <heading>NSPathUtilities types</heading>
      <p></p>
      <type type="NSUInteger" name="NSSearchPathDirectory" ovadd="10.0.0">
        <desc>
          Enumeration of possible requested directory type
          specifiers for
          <ref type="function" id="NSSearchPathForDirectoriesInDomains">NSSearchPathForDirectoriesInDomains()</ref> function. On a traditional GNUstep filesystem layout these correspond to the subdirectories that may be found in the various domains, such as "Library" and "Applications". In a different filesystem layout these directories might be located anywhere on disk.
<example>
{
  NSApplicationDirectory,
  NSDemoApplicationDirectory,
  NSDeveloperApplicationDirectory,
  NSAdminApplicationDirectory,
  NSLibraryDirectory,
  NSDeveloperDirectory,
  NSUserDirectory,
  NSDocumentationDirectory,
  NSDocumentDirectory,
  NSCoreServiceDirectory,
  NSDesktopDirectory,
  NSCachesDirectory,
  NSApplicationSupportDirectory
  NSAllApplicationsDirectory,
  NSAllLibrariesDirectory,
  NSItemReplacementDirectory,
  GSLibrariesDirectory,
  GSToolsDirectory,
  GSAdminToolsDirectory,
  GSFontsDirectory,
  GSFrameworksDirectory,
  GSWebApplicationsDirectory
}
 </example>
        </desc>
      </type>
      <type type="NSUInteger" name="NSSearchPathDomainMask" ovadd="10.0.0">
        <desc>
          Mask type for
          <ref type="function" id="NSSearchPathForDirectoriesInDomains">NSSearchPathForDirectoriesInDomains()</ref> function. A bitwise OR of one or more of <code>NSUserDomainMask, NSLocalDomainMask, NSNetworkDomainMask, NSSystemDomainMask, NSAllDomainsMask</code>.
        </desc>
      </type>
    </chapter>
<!--EndNSPathUtilitiesTypedefs-->
<!--StartNSPersonNameComponentsFormatterTypedefs-->
    <chapter>
      <heading>NSPersonNameComponentsFormatter types</heading>
      <p></p>
      <type type="NSUInteger" name="NSPersonNameComponentsFormatterOptions" ovadd="10.11.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSPersonNameComponentsFormatterStyle" ovadd="10.11.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSPersonNameComponentsFormatterTypedefs-->
<!--StartNSPointerFunctionsTypedefs-->
    <chapter>
      <heading>NSPointerFunctions types</heading>
      <p></p>
      <type type="NSUInteger" name="NSPointerFunctionsOptions" ovadd="10.5.0">
        <desc>
          An integer value containing memory option, personality
          option, and copying option.
        </desc>
      </type>
    </chapter>
<!--EndNSPointerFunctionsTypedefs-->
<!--StartNSPortTypedefs-->
    <chapter>
      <heading>NSPort types</heading>
      <p></p>
      <type type="SOCKET" name="NSSocketNativeHandle" ovadd="10.0.0">
        <desc>
          Native socket type.
        </desc>
      </type>
    </chapter>
<!--EndNSPortTypedefs-->
<!--StartNSProcessInfoTypedefs-->
    <chapter>
      <heading>NSProcessInfo types</heading>
      <p></p>
      <type type="uint64_t" name="NSActivityOptions" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSProcessInfoTypedefs-->
<!--StartNSProgressTypedefs-->
    <chapter>
      <heading>NSProgress types</heading>
      <p></p>
      <type type="NSString*" name="NSProgressFileOperationKind" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSString*" name="NSProgressKind" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSString*" name="NSProgressUserInfoKey" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSProgressTypedefs-->
<!--StartNSPropertyListTypedefs-->
    <chapter>
      <heading>NSPropertyList types</heading>
      <p></p>
      <type type="NSUInteger" name="NSPropertyListFormat" ovadd="10.0.0">
        <desc>
          Specifies the serialisation format for a serialised
          property list.
          <list>
            <item>
              <strong>NSPropertyListOpenStepFormat</strong>
              the most human-readable format
            </item>
            <item>
              <strong>NSPropertyListXMLFormat_v1_0</strong>
              portable and readable
            </item>
            <item>
              <strong>NSPropertyListBinaryFormat_v1_0</strong>
              the standard format on macos-x
            </item>
            <item>
              <strong>NSPropertyListGNUstepFormat</strong>
              extension of OpenStep format
            </item>
            <item>
              <strong>
                NSPropertyListGNUstepBinaryFormat
              </strong>
              efficient, hardware independent
            </item>
          </list>
        </desc>
      </type>
      <type type="NSUInteger" name="NSPropertyListMutabilityOptions" ovadd="10.0.0">
        <desc>
          Describes the mutability to use when generating
          objects during deserialisation of a property list.
          <list>
            <item>
              <strong>NSPropertyListImmutable</strong> all
              objects in created list are immutable
            </item>
            <item>
              <strong>NSPropertyListMutableContainers</strong>
              dictionaries, arrays, strings and data
              objects are mutable
            </item>
          </list>
        </desc>
      </type>
      <type type="NSUInteger" name="NSPropertyListReadOptions" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSPropertyListWriteOptions" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSPropertyListTypedefs-->
<!--StartNSRangeTypedefs-->
    <chapter>
      <heading>NSRange types</heading>
      <p></p>
      <type type="struct _NSRange" name="NSRange" ovadd="1.0.0">
        <desc>
<example>
{
  NSUInteger location;
  NSUInteger length;
}</example>
          <p>
            The NSRange type is used to specify ranges of
            locations, typically items in an array,
            characters in a string, and bytes in a data
            object.
          </p>
          <p>
            As 'boundary' or 'fencepost' errors are a particularly
            common problem in programming, it is important that
            you understand how an NSRange works.
          </p>
          <p>
            An NSRange consists of a <em>location</em> and a
            <em>length</em>. The points that are considered to lie
            in a range are the integers from the location to the
            location plus the length, so the number of points
            in a range is the length of the range plus one. <br />
            However, if you consider these points like the
            marks on a ruler, you can only store information
            <strong>between</strong> points. So the number of
            items that can be stored in a range is the length of
            the range.
          </p>
        </desc>
      </type>
      <type type="NSRange*" name="NSRangePointer" ovadd="10.0.0">
        <desc>
          Pointer to an NSRange structure.
        </desc>
      </type>
    </chapter>
<!--EndNSRangeTypedefs-->
<!--StartNSRegularExpressionTypedefs-->
    <chapter>
      <heading>NSRegularExpression types</heading>
      <p></p>
      <type type="NSUInteger" name="NSMatchingFlags" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSMatchingOptions" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSRegularExpressionOptions" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSRegularExpressionTypedefs-->
<!--StartNSRunLoopTypedefs-->
    <chapter>
      <heading>NSRunLoop types</heading>
      <p></p>
      <type type="NSString*" name="NSRunLoopMode" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="enum ..." name="RunLoopEventType" ovadd="1.0.0">
        <desc>
          This type specifies the kinds of event which may be
          'watched' in a run loop.
          <deflist>
            <term><em>ET_RPORT</em></term> <desc></desc>
            <term><em>ET_WINMSG</em></term> <desc></desc>
            <term><em>ET_TRIGGER</em></term> <desc></desc>
            <term><em>ET_WDESC</em></term> <desc></desc>
            <term><em>ET_RPORT</em></term> <desc></desc>
            <term><em>ET_EDESC</em></term> <desc></desc>
            <term><em>ET_TRIGGER</em></term> <desc></desc>
          </deflist>
        </desc>
      </type>
    </chapter>
<!--EndNSRunLoopTypedefs-->
<!--StartNSStreamTypedefs-->
    <chapter>
      <heading>NSStream types</heading>
      <p></p>
      <type type="NSUInteger" name="NSStreamEvent" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSStreamStatus" ovadd="10.4.0" gvadd="1.2.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSStreamTypedefs-->
<!--StartNSStringTypedefs-->
    <chapter>
      <heading>NSString types</heading>
      <p></p>
      <type type="NSUInteger" name="NSStringCompareOptions" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="enum _NSStringEncoding" name="NSStringEncoding" ovadd="1.0.0">
        <desc>
          <p>
            Enumeration of available encodings for
            converting between bytes and characters (in
            <ref type="class" id="NSString">NSString</ref>
              s). The ones that are shared with OpenStep and Cocoa
              are:
              <code>
                NSASCIIStringEncoding,
                NSNEXTSTEPStringEncoding,
                NSJapaneseEUCStringEncoding,
                NSUTF8StringEncoding,
                NSISOLatin1StringEncoding,
                NSSymbolStringEncoding,
                NSNonLossyASCIIStringEncoding,
                NSShiftJISStringEncoding,
                NSISOLatin2StringEncoding,
                NSUnicodeStringEncoding,
                NSWindowsCP1251StringEncoding,
                NSWindowsCP1252StringEncoding,
                NSWindowsCP1253StringEncoding,
                NSWindowsCP1254StringEncoding,
                NSWindowsCP1250StringEncoding,
                NSISO2022JPStringEncoding,
                NSMacOSRomanStringEncoding,
                NSProprietaryStringEncoding
              </code>
              .
            </p>
            <p>
              Additional encodings available under GNUstep
              are:
              <code>
                NSKOI8RStringEncoding,
                NSISOLatin3StringEncoding,
                NSISOLatin4StringEncoding,
                NSISOCyrillicStringEncoding,
                NSISOArabicStringEncoding,
                NSISOGreekStringEncoding,
                NSISOHebrewStringEncoding,
                NSISOLatin5StringEncoding,
                NSISOLatin6StringEncoding,
                NSISOThaiStringEncoding,
                NSISOLatin7StringEncoding,
                NSISOLatin8StringEncoding,
                NSISOLatin9StringEncoding,
                NSChineseEUCStringEncoding,
                NSUTF7StringEncoding,
                NSGSM0338StringEncoding,
                NSBig5StringEncoding,
                NSKoreanEUCStringEncoding,
                NSDOSLatinUSStringEncoding,
                NSDOSGreekStringEncoding,
                NSDOSBalticRimStringEncoding,
                NSDOSLatin1StringEncoding,
                NSDOSGreek1StringEncoding,
                NSDOSLatin2StringEncoding,
                NSDOSCyrillicStringEncoding,
                NSDOSTurkishStringEncoding,
                NSDOICortugueseStringEncoding,
                NSDOSIcelandicStringEncoding,
                NSDOSHebrewStringEncoding,
                NSDOSCanadianFrenchStringEncoding,
                NSDOSArabicStringEncoding,
                NSDOSNordicStringEncoding,
                NSDOSRussianStringEncoding,
                NSDOSGreek2StringEncoding,
                NSDOSThaiStringEncoding,
                NSDOSJapaneseStringEncoding,
                NSDOSChineseSimplifStringEncoding,
                NSDOSKoreanStringEncoding,
                NSDOSChineseTradStringEncoding,
                NSWindowsHebrewStringEncoding,
                NSWindowsArabicStringEncoding,
                NSWindowsBalticRimStringEncoding,
                NSWindowsVietnameseStringEncoding
                NSWindowsKoreanJohabStringEncoding
              </code>
              .
            </p>
            <deflist>
              <term><em>GSUndefinedEncoding</em></term>
              <desc></desc>
              <term><em>NSASCIIStringEncoding</em></term>
              <desc></desc>
              <term><em>NSNEXTSTEPStringEncoding</em></term>
              <desc></desc>
              <term><em>NSJapaneseEUCStringEncoding</em></term>
              <desc></desc>
              <term><em>NSUTF8StringEncoding</em></term>
              <desc></desc>
              <term><em>NSISOLatin1StringEncoding</em></term>
              <desc></desc>
              <term><em>NSSymbolStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSNonLossyASCIIStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSShiftJISStringEncoding</em></term>
              <desc></desc>
              <term><em>NSISOLatin2StringEncoding</em></term>
              <desc></desc>
              <term><em>NSUnicodeStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSWindowsCP1251StringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSWindowsCP1252StringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSWindowsCP1253StringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSWindowsCP1254StringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSWindowsCP1250StringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSISO2022JPStringEncoding</em></term>
              <desc></desc>
              <term><em>NSMacOSRomanStringEncoding</em></term>
              <desc></desc>
              <term><em>NSUTF16StringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSUTF16BigEndianStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSUTF16LittleEndianStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSUTF32StringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSUTF32BigEndianStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSUTF32LittleEndianStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSProprietaryStringEncoding</em></term>
              <desc></desc>
              <term><em>NSGSM0338StringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSMacOSJapaneseStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSMacOSTraditionalChineseStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSMacOSKoreanStringEncoding</em></term>
              <desc></desc>
              <term><em>NSMacOSArabicStringEncoding</em></term>
              <desc></desc>
              <term><em>NSMacOSHebrewStringEncoding</em></term>
              <desc></desc>
              <term><em>NSMacOSGreekStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSMacOSCyrillicStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSMacOSDevanagariStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSMacOSGurmukhiStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSMacOSGujaratiStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSMacOSOriyaStringEncoding</em></term>
              <desc></desc>
              <term><em>NSMacOSBengaliStringEncoding</em></term>
              <desc></desc>
              <term><em>NSMacOSTamilStringEncoding</em></term>
              <desc></desc>
              <term><em>NSMacOSTeluguStringEncoding</em></term>
              <desc></desc>
              <term><em>NSMacOSKannadaStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSMacOSMalayalamStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSMacOSSinhaleseStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSMacOSBurmeseStringEncoding</em></term>
              <desc></desc>
              <term><em>NSMacOSKhmerStringEncoding</em></term>
              <desc></desc>
              <term><em>NSMacOSThaiStringEncoding</em></term>
              <desc></desc>
              <term><em>NSMacOSLaotianStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSMacOSGeorgianStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSMacOSArmenianStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSMacOSSimplifiedChineseStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSMacOSTibetanStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSMacOSMongolianStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSMacOSEthiopicStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSMacOSCentralEuropeanRomanStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSMacOSVietnameseStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSMacOSExtendedArabicStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSMacOSSymbolStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSMacOSDingbatsStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSMacOSTurkishStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSMacOSCroatianStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSMacOSIcelandicStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSMacOSRomanianStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSMacOSCelticStringEncoding</em></term>
              <desc></desc>
              <term><em>NSMacOSGaelicStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSMacOSKeyboardSymbolsStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSMacOSFarsiStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSMacOSUkrainianStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSMacOSInuitStringEncoding</em></term>
              <desc></desc>
              <term><em>NSMacVT100StringEncoding</em></term>
              <desc></desc>
              <term><em>NSMacHFSStringEncoding</em></term>
              <desc></desc> <term><em>GS_API_LATEST</em></term>
              <desc></desc>
              <term><em>NSUTF7IMAPStringEncoding</em></term>
              <desc></desc>
              <term><em>NSISOLatin3StringEncoding</em></term>
              <desc></desc>
              <term><em>NSISOLatin4StringEncoding</em></term>
              <desc></desc>
              <term><em>NSISOCyrillicStringEncoding</em></term>
              <desc></desc>
              <term><em>NSISOArabicStringEncoding</em></term>
              <desc></desc>
              <term><em>NSISOGreekStringEncoding</em></term>
              <desc></desc>
              <term><em>NSISOHebrewStringEncoding</em></term>
              <desc></desc>
              <term><em>NSISOLatin5StringEncoding</em></term>
              <desc></desc>
              <term><em>NSISOLatin6StringEncoding</em></term>
              <desc></desc>
              <term><em>NSISOThaiStringEncoding</em></term>
              <desc></desc>
              <term><em>NSISOLatin7StringEncoding</em></term>
              <desc></desc>
              <term><em>NSISOLatin8StringEncoding</em></term>
              <desc></desc>
              <term><em>NSISOLatin9StringEncoding</em></term>
              <desc></desc> <term><em>GS_API_LATEST</em></term>
              <desc></desc>
              <term>
                <em>NSISOLatinBalticRimStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSISOLatinCelticStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSISOLatinCyrillicStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSISOLatinGreekStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSISOLatinHebrewStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSISOLatinNordicStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSISOLatinThaiStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSISOLatinTurkishStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSDOSLatinUSStringEncoding</em></term>
              <desc></desc>
              <term><em>NSDOSGreekStringEncoding</em></term>
              <desc></desc>
              <term><em>NSDOSBalticRimStringEncoding</em></term>
              <desc></desc>
              <term><em>NSDOSLatin1StringEncoding</em></term>
              <desc></desc>
              <term><em>NSDOSGreek1StringEncoding</em></term>
              <desc></desc>
              <term><em>NSDOSLatin2StringEncoding</em></term>
              <desc></desc>
              <term><em>NSDOSCyrillicStringEncoding</em></term>
              <desc></desc>
              <term><em>NSDOSTurkishStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSDOICortugueseStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSDOSIcelandicStringEncoding</em></term>
              <desc></desc>
              <term><em>NSDOSHebrewStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSDOSCanadianFrenchStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSDOSArabicStringEncoding</em></term>
              <desc></desc>
              <term><em>NSDOSNordicStringEncoding</em></term>
              <desc></desc>
              <term><em>NSDOSRussianStringEncoding</em></term>
              <desc></desc>
              <term><em>NSDOSGreek2StringEncoding</em></term>
              <desc></desc>
              <term><em>NSDOSThaiStringEncoding</em></term>
              <desc></desc>
              <term><em>NSDOSJapaneseStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSDOSChineseSimplifStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSDOSKoreanStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSDOSChineseTradStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSWindowsLatin1StringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSWindowsLatin2StringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSWindowsCyrillicStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSWindowsGreekStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSWindowsLatin5StringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSWindowsHebrewStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSWindowsArabicStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSWindowsBalticRimStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSWindowsVietnameseStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSWindowsKoreanJohabStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSJIS_X0201_76StringEncoding</em></term>
              <desc></desc>
              <term><em>NSJIS_X0208_83StringEncoding</em></term>
              <desc></desc>
              <term><em>NSJIS_X0208_90StringEncoding</em></term>
              <desc></desc>
              <term><em>NSJIS_X0212_90StringEncoding</em></term>
              <desc></desc>
              <term><em>NSJIS_C6226_78StringEncoding</em></term>
              <desc></desc> <term><em>GS_API_LATEST</em></term>
              <desc></desc> <term><em>GS_API_LATEST</em></term>
              <desc></desc>
              <term>
                <em>NSShiftJIS_X0213_00StringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSGBK_95StringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSGB_18030_2000StringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSKSC_5601_87StringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSKSC_5601_92_JohabStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSCNS_11643_92_P1StringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSCNS_11643_92_P2StringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSCNS_11643_92_P3StringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSISO2022JapaneseStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSISO2022Japanese2StringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSISO2022Japanese1StringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSISO2022Japanese3StringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSISO2022ChineseStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSISO2022ExtendedChineseStringEncoding</em>
              </term>
              <desc></desc>
              <term>
                <em>NSISO2022KoreanStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSEUCJapaneseStringEncoding</em></term>
              <desc></desc>
              <term><em>NSEUCChineseStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSEUCTaiwanChineseStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSEUCKoreanStringEncoding</em></term>
              <desc></desc>
              <term><em>NSKoreanEUCStringEncoding</em></term>
              <desc></desc>
              <term><em>NSChineseEUCStringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSTaiwanChineseEUCStringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSKOI8RStringEncoding</em></term>
              <desc></desc>
              <term><em>NSBig5StringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSMacRomanLatin1StringEncoding</em>
              </term>
              <desc></desc>
              <term><em>NSHZ_GB_2312StringEncoding</em></term>
              <desc></desc>
              <term>
                <em>NSBig5_HKSCS_1999StringEncoding</em>
              </term>
              <desc></desc> <term><em>GS_API_LATEST</em></term>
              <desc></desc>
              <term><em>NSKOI8UStringEncoding</em></term>
              <desc></desc>
              <term><em>NSBig5EStringEncoding</em></term>
              <desc></desc> <term><em>GS_API_LATEST</em></term>
              <desc></desc>
              <term><em>NSEBCDICUSStringEncoding</em></term>
              <desc></desc>
              <term><em>NSEBCDICCP037StringEncoding</em></term>
              <desc></desc>
            </deflist>
        </desc>
      </type>
      <type type="NSUInteger" name="NSStringEncodingConversionOptions" ovadd="10.4.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NSUInteger" name="NSStringEnumerationOptions" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="uint16_t" name="unichar" ovadd="1.0.0">
        <desc>
          Type for representing unicode characters. (16-bit)
        </desc>
      </type>
    </chapter>
<!--EndNSStringTypedefs-->
<!--StartNSTaskTypedefs-->
    <chapter>
      <heading>NSTask types</heading>
      <p></p>
      <type type="NSInteger" name="NSTaskTerminationReason" ovadd="10.5.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSTaskTypedefs-->
<!--StartNSTextCheckingResultTypedefs-->
    <chapter>
      <heading>NSTextCheckingResult types</heading>
      <p></p>
      <type type="uint64_t" name="NSTextCheckingType" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="uint64_t" name="NSTextCheckingTypes" ovadd="10.6.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSTextCheckingResultTypedefs-->
<!--StartNSTimeZoneTypedefs-->
    <chapter>
      <heading>NSTimeZone types</heading>
      <p></p>
      <type type="NSInteger" name="NSTimeZoneNameStyle" ovadd="10.5.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSTimeZoneTypedefs-->
<!--StartNSURLCacheTypedefs-->
    <chapter>
      <heading>NSURLCache types</heading>
      <p></p>
      <type type="enum ..." name="NSURLCacheStoragePolicy" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Specifies the cache storage policy.
          <deflist>
            <term><em>NSURLCacheStorageAllowed</em></term>
            <desc></desc>
            <term>
              <em>NSURLCacheStorageAllowedInMemoryOnly</em>
            </term>
            <desc>Unrestricted caching</desc>
            <term><em>NSURLCacheStorageNotAllowed</em></term>
            <desc>In memory caching only</desc>
          </deflist>
        </desc>
      </type>
    </chapter>
<!--EndNSURLCacheTypedefs-->
<!--StartNSURLCredentialTypedefs-->
    <chapter>
      <heading>NSURLCredential types</heading>
      <p></p>
      <type type="enum ..." name="NSURLCredentialPersistence" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          Controls how <strong>long</strong> a credential is
          retained.
          <deflist>
            <term><em>NSURLCredentialPersistenceNone</em></term>
            <desc></desc>
            <term>
              <em>NSURLCredentialPersistenceForSession</em>
            </term>
            <desc>Don't save at all</desc>
            <term>
              <em>NSURLCredentialPersistencePermanent</em>
            </term>
            <desc>Save for current session</desc>
            <term>
              <em>NSURLCredentialPersistenceSynchronizable</em>
            </term>
            <desc>Save forever (on disk)</desc>
          </deflist>
        </desc>
      </type>
    </chapter>
<!--EndNSURLCredentialTypedefs-->
<!--StartNSURLTypedefs-->
    <chapter>
      <heading>NSURL types</heading>
      <p></p>
      <type type="NSUInteger" name="NSURLBookmarkResolutionOptions" ovadd="10.6.0">
        <desc>
          URL Bookmark Resolution Options
        </desc>
      </type>
    </chapter>
<!--EndNSURLTypedefs-->
<!--StartNSURLHandleTypedefs-->
    <chapter>
      <heading>NSURLHandle types</heading>
      <p></p>
      <type type="NSUInteger" name="NSURLHandleStatus" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSURLHandleTypedefs-->
<!--StartNSURLRequestTypedefs-->
    <chapter>
      <heading>NSURLRequest types</heading>
      <p></p>
      <type type="NSUInteger" name="NSURLRequestCachePolicy" ovadd="10.2.0" gvadd="1.13.0">
        <desc>
          <deflist>
            <term>NSURLRequestUseProtocolCachePolicy</term>
            <desc>
              Says that any protocol specific cache policy should
              be used... this is the default.
            </desc>
            <term>NSURLRequestReloadIgnoringCacheData</term>
            <desc>
              Says the data should be re-loaded from source rather
              than any cached data being used, irrespective of any
              protocol standard.
            </desc>
            <term>NSURLRequestReturnCacheDataElseLoad</term>
            <desc>
              Says to use cached data if any is available, but to
              load from source if the cache is empty. Ignores any
              protocol specific logic (like cache aging).
            </desc>
            <term>NSURLRequestReturnCacheDataDontLoad</term>
            <desc>
              Says to use cached data if any is available, but to
              return <code>nil</code> without loading if the
              cache is empty.
            </desc>
          </deflist>
        </desc>
      </type>
      <type type="NSUInteger" name="NSURLRequestNetworkServiceType" ovadd="10.7.0" gvadd="1.13.0">
        <desc>
          <deflist>
            <term>NSURLNetworkServiceTypeDefault</term>
            <desc>
              Specifies standard network traffic. Most
              connections should be made using this service
              type this is the default.
            </desc>
            <term>NSURLNetworkServiceTypeVoIP</term>
            <desc>
              Specifies that the request is for VoIP traffic.
            </desc>
            <term>NSURLNetworkServiceTypeVideo</term>
            <desc>
              Specifies that the request is for video
              traffic.
            </desc>
            <term>NSURLNetworkServiceTypeBackground</term>
            <desc>
              Specifies that the request is for background
              traffic.
            </desc>
            <term>NSURLNetworkServiceTypeVoice</term>
            <desc>
              Specifies that the request is for voice
              traffic.
            </desc>
            <term>NSURLNetworkServiceTypeCallSignaling</term>
            <desc>Call Signaling - enumeration cases.</desc>
          </deflist>
        </desc>
      </type>
    </chapter>
<!--EndNSURLRequestTypedefs-->
<!--StartNSURLSessionTypedefs-->
    <chapter>
      <heading>NSURLSession types</heading>
      <p></p>
      <type type="NS_ENUM(NSInteger)" name="NSURLSessionAuthChallengeDisposition" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="NS_ENUM(NSInteger)" name="NSURLSessionResponseDisposition" ovadd="10.9.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSURLSessionTypedefs-->
<!--StartNSUserNotificationTypedefs-->
    <chapter>
      <heading>NSUserNotification types</heading>
      <p></p>
      <type type="NSInteger" name="NSUserNotificationActivationType" ovadd="10.8.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSUserNotificationTypedefs-->
<!--StartNSUUIDTypedefs-->
    <chapter>
      <heading>NSUUID types</heading>
      <p></p>
      <type type="uint8_t" name="gsuuid_t" ovadd="10.8.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSUUIDTypedefs-->
<!--StartNSXMLDocumentTypedefs-->
    <chapter>
      <heading>NSXMLDocument types</heading>
      <p></p>
      <type type="NSUInteger" name="NSXMLDocumentContentKind" ovadd="1.0.0">
        <desc>
          Define what type of document this is.
        </desc>
      </type>
    </chapter>
<!--EndNSXMLDocumentTypedefs-->
<!--StartNSXMLDTDNodeTypedefs-->
    <chapter>
      <heading>NSXMLDTDNode types</heading>
      <p></p>
      <type type="NSUInteger" name="NSXMLDTDNodeKind" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSXMLDTDNodeTypedefs-->
<!--StartNSXMLNodeTypedefs-->
    <chapter>
      <heading>NSXMLNode types</heading>
      <p></p>
      <type type="NSUInteger" name="NSXMLNodeKind" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSXMLNodeTypedefs-->
<!--StartNSXMLParserTypedefs-->
    <chapter>
      <heading>NSXMLParser types</heading>
      <p></p>
      <type type="NSUInteger" name="NSXMLParserError" ovadd="10.3.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSXMLParserTypedefs-->
<!--StartNSXPCConnectionTypedefs-->
    <chapter>
      <heading>NSXPCConnection types</heading>
      <p></p>
      <type type="NSUInteger" name="NSXPCConnectionOptions" ovadd="10.8.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="unsigned int" name="gid_t" ovadd="10.8.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="int" name="pid_t" ovadd="10.8.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
      <type type="unsigned int" name="uid_t" ovadd="10.8.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSXPCConnectionTypedefs-->
<!--StartNSZoneTypedefs-->
    <chapter>
      <heading>NSZone types</heading>
      <p></p>
      <type type="struct _NSZone" name="NSZone" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </type>
    </chapter>
<!--EndNSZoneTypedefs-->
<!--EndTypedefs-->
<!--StartVariables-->
<!--StartNSDebugVariables-->
    <chapter>
      <heading>NSDebug variables</heading>
      <p></p>
      <variable type="BOOL" name="NSDeallocateZombies" ovadd="1.0.0">
        <desc>
          Enable/disable object deallocation.
          <p>
            If zombies are enabled, objects are by default
            <em>not</em> deallocated, and memory leaks. The
            NSDeallocateZombies variable lets you
            say that the the memory used by zombies should be
            freed.
          </p>
          <p>
            Doing this makes the behavior of zombies similar to
            that when zombies are not enabled... the memory
            occupied by the zombie may be re-used for other
            purposes, at which time the isa pointer may be
            overwritten and the zombie behavior will cease.
          </p>
          The default value of this boolean is <code>NO</code>, but
          this can be controlled by the NSDeallocateZombies
          environment variable.
        </desc>
      </variable>
      <variable type="BOOL" name="NSDebugEnabled" ovadd="1.0.0">
        <desc>
          A global variable that you can use to enable debug
          behaviour in your program.
        </desc>
      </variable>
      <variable type="BOOL" name="NSZombieEnabled" ovadd="1.0.0">
        <desc>
          Enable/disable zombies.
          <p>
            When an object is deallocated, its isa pointer is
            normally modified to the hexadecimal value
            0xdeadface, so that any attempt to send a
            message to the deallocated object will cause a
            crash, and examination of the object within the
            debugger will show the 0xdeadface value... making
            it obvious why the program crashed.
          </p>
          <p>
            Turning on zombies changes this behavior so that
            the isa pointer is modified to be that of the NSZombie
            class. When messages are sent to the object, instead
            of crashing, NSZombie will use
            <ref type="function" id="NSLog">
              NSLog()
            </ref>
            to produce an error message. By default the memory used
            by the object will not really be freed, so error
            messages will continue to be generated whenever a
            message is sent to the object, and the object
            instance variables will remain available for
            examination by the debugger.
          </p>
          The default value of this boolean is <code>NO</code>, but
          this can be controlled by the NSZombieEnabled
          environment variable.
        </desc>
      </variable>
    </chapter>
<!--EndNSDebugVariables-->
<!--StartNSErrorVariables-->
    <chapter>
      <heading>NSError variables</heading>
      <p></p>
      <variable type="NSErrorDomainconst" name="NSCocoaErrorDomain" ovadd="10.4.0">
        <desc>
          Domain for Foundation and AppKit (base and gui)
          errors.
        </desc>
      </variable>
      <variable type="NSErrorDomainconst" name="NSMACHErrorDomain" ovadd="10.3.0">
        <desc>
          Domain for system errors (on MACH).
        </desc>
      </variable>
      <variable type="NSErrorDomainconst" name="NSOSStatusErrorDomain" ovadd="10.3.0">
        <desc>
          Domain for system errors.
        </desc>
      </variable>
      <variable type="NSErrorDomainconst" name="NSPOSIXErrorDomain" ovadd="10.3.0">
        <desc>
          Domain for system and system library errors.
        </desc>
      </variable>
    </chapter>
<!--EndNSErrorVariables-->
<!--StartNSFileManagerVariables-->
    <chapter>
      <heading>NSFileManager variables</heading>
      <p></p>
      <variable type="enum _NSDirectoryEnumerationOptions" name="enum _NSDirectoryEnumerationOptions" ovadd="10.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
    </chapter>
<!--EndNSFileManagerVariables-->
<!--StartNSLinguisticTaggerVariables-->
    <chapter>
      <heading>NSLinguisticTagger variables</heading>
      <p></p>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagAdjective" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagAdverb" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagClassifier" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagCloseParenthesis" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagCloseQuote" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagConjunction" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagDash" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagDeterminer" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagIdiom" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagInterjection" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagNoun" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagNumber" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagOpenParenthesis" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagOpenQuote" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagOrganizationName" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagOther" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagOtherPunctuation" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagOtherWhitespace" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagOtherWord" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagParagraphBreak" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagParticle" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagPersonalName" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagPlaceName" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagPreposition" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagPronoun" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagPunctuation" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagSchemeconst" name="NSLinguisticTagSchemeLanguage" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagSchemeconst" name="NSLinguisticTagSchemeLemma" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagSchemeconst" name="NSLinguisticTagSchemeLexicalClass" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagSchemeconst" name="NSLinguisticTagSchemeNameType" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagSchemeconst" name="NSLinguisticTagSchemeNameTypeOrLexicalClass" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagSchemeconst" name="NSLinguisticTagSchemeScript" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagSchemeconst" name="NSLinguisticTagSchemeTokenType" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagSentenceTerminator" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagVerb" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagWhitespace" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagWord" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
      <variable type="NSLinguisticTagconst" name="NSLinguisticTagWordJoiner" ovadd="10.7.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
    </chapter>
<!--EndNSLinguisticTaggerVariables-->
<!--StartNSLockVariables-->
    <chapter>
      <heading>NSLock variables</heading>
      <p></p>
      <variable type="NSLock_error_handler*" name="_NSLock_error_handler" ovadd="1.0.0">
        <desc>
          Code may replace this function pointer in order to
          intercept the normal logging of a deadlock.
        </desc>
      </variable>
    </chapter>
<!--EndNSLockVariables-->
<!--StartNSMapTableVariables-->
    <chapter>
      <heading>NSMapTable variables</heading>
      <p></p>
      <variable type="struct _NSMapTableValueCallBacks" name="struct _NSMapTableValueCallBacks" ovadd="1.0.0">
        <desc>
          Retaining function called when adding elements to
          table. <br /> Notionally this must not modify the
          element (the element may not actually have a retain
          count, or the retain count may be stored externally to
          the element, but in practice this often actually changes
          a counter within the element). <br /> Releasing function
          called when a data element is removed from the table.
          This may decrease a retain count or may actually destroy
          the element. <br /> Description function. Generates a
          string describing the element and does not modify the
          element itself.
        </desc>
      </variable>
    </chapter>
<!--EndNSMapTableVariables-->
<!--StartNSNotificationQueueVariables-->
    <chapter>
      <heading>NSNotificationQueue variables</heading>
      <p></p>
      <variable type="struct _NSNotificationQueueList" name="struct _NSNotificationQueueList" ovadd="1.0.0">
        <desc>
          Structure used internally by
          <ref type="class" id="NSNotificationQueue">NSNotificationQueue</ref>
            .
        </desc>
      </variable>
    </chapter>
<!--EndNSNotificationQueueVariables-->
<!--StartNSObjCRuntimeVariables-->
    <chapter>
      <heading>NSObjCRuntime variables</heading>
      <p></p>
      <variable type="int" name="_NSLogDescriptor" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          A variable holding the file descriptor to which
          <ref type="function" id="NSLogv">
            NSLogv()
          </ref>
          messages are written by default. GNUstep initialises
          this to stderr. <br /> You may change this, but for
          thread safety should use the lock provided by
          <ref type="function" id="GSLogLock">
            GSLogLock()
          </ref>
          to protect the change.
        </desc>
      </variable>
      <variable type="NSLog_printf_handler*" name="_NSLog_printf_handler" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          A pointer to a function used to actually write the log
          data.
          <p>
            GNUstep initialises this to a function implementing
            the standard behavior for logging, but you may change
            this in your program in order to implement any custom
            behavior you wish. You should use the lock
            returned by
            <ref type="function" id="GSLogLock">
              GSLogLock()
            </ref>
            to protect any change you make.
          </p>
          <p>
            Calls from
            <ref type="function" id="NSLogv">
              NSLogv()
            </ref>
            to the function pointed to by this variable are
            protected by a lock, and should therefore be
            thread safe.
          </p>
          <p>
            This function should accept a single NSString argument
            and return <strong>void</strong>.
          </p>
          The default implementation in GNUstep performs as follows
          -
          <list>
            <item>
              Converts the string to be logged to data in the
              default CString encoding or, if that is not
              possible, to UTF8 data.
            </item>
            <item>
              If the system supports writing to syslog and the user
              default to say that logging should be done to
              syslog (GSLogSyslog) is set, writes the data to
              the syslog. <br /> On an mswindows system, where
              syslog is not available, the GSLogSyslog user
              default controls whether or not data is written
              to the system event log,
            </item>
            <item>
              Otherwise, writes the data to the file
              descriptor stored in the variable
              <ref type="variable" id="_NSLogDescriptor">
                _NSLogDescriptor
              </ref>
              , which is set by default to stderr. <br /> Your
              program may change this descriptor... but you
              should protect changes using the lock provided by
              <ref type="function" id="GSLogLock">
                GSLogLock()
              </ref>
              . <br /> NB. If the write to the descriptor fails, and
              the system supports writing to syslog, then the log
              is written to syslog as if the appropriate user
              default had been set.
            </item>
          </list>
        </desc>
      </variable>
    </chapter>
<!--EndNSObjCRuntimeVariables-->
<!--StartNSRangeVariables-->
    <chapter>
      <heading>NSRange variables</heading>
      <p></p>
      <variable type="struct _NSRange" name="struct _NSRange" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
    </chapter>
<!--EndNSRangeVariables-->
<!--StartNSRunLoopVariables-->
    <chapter>
      <heading>NSRunLoop variables</heading>
      <p></p>
      <variable type="NSRunLoopModeconst" name="NSDefaultRunLoopMode" ovadd="1.0.0">
        <desc>
          Run loop mode used to deal with input sources other than
          NSConnections or dialog windows. Most commonly
          used. Defined in <code>Foundation/NSRunLoop.h</code>.
        </desc>
      </variable>
      <variable type="NSRunLoopModeconst" name="NSRunLoopCommonModes" ovadd="1.0.0">
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </variable>
    </chapter>
<!--EndNSRunLoopVariables-->
<!--StartNSStringVariables-->
    <chapter>
      <heading>NSString variables</heading>
      <p></p>
      <variable type="struct objc_class" name="_NSConstantStringClassReference" ovadd="1.0.0">
        <desc>
          For internal use with NeXT runtime; needed, until Apple
          Radar 2870817 is fixed.
        </desc>
      </variable>
    </chapter>
<!--EndNSStringVariables-->
<!--StartNSZoneVariables-->
    <chapter>
      <heading>NSZone variables</heading>
      <p></p>
      <variable type="struct NSZoneStats" name="struct NSZoneStats" ovadd="0.0.0" ovrem="0.0.0">
        <desc>
          <code>NSZoneStats</code> is the structure returned by
          the
          <ref type="function" id="NSZoneStats">
            NSZoneStats()
          </ref>
          function that summarizes the current usage of a
          zone. It is similar to the structure <em>mstats</em> in
          the GNU C library. It has 5 fields of type
          <code>size_t</code> -
          <deflist>
            <term><code>bytes_total</code></term>
            <desc>
              This is the total size of memory managed by the
              zone, in bytes.
            </desc>
            <term><code>chunks_used</code></term>
            <desc>
              This is the number of memory chunks in use in the
              zone.
            </desc>
            <term><code>bytes_used</code></term>
            <desc>This is the number of bytes in use.</desc>
            <term><code>chunks_free</code></term>
            <desc>
              This is the number of memory chunks that are not in
              use.
            </desc>
            <term><code>bytes_free</code></term>
            <desc>
              This is the number of bytes managed by the zone that
              are not in use.
            </desc>
          </deflist>
        </desc>
      </variable>
    </chapter>
<!--EndNSZoneVariables-->
<!--EndVariables-->
</body>
</gsdoc>
