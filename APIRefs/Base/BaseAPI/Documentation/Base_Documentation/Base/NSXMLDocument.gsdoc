<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSXMLDocument" stylesheeturl="gnustepStyle" up="Base">
  <head>
    <title>NSXMLDocument class documentation</title>
    <author name="Richard Frith-Macdonald">
      <email address="rfm@gnu.org">
        rfm@gnu.org
      </email>
    </author>
    <date>Generated at 2024-11-07 16:52:01 -0500</date>
    <copy>2008 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSXMLDocument class
      </heading>
      <class name="NSXMLDocument" super="NSXMLNode" ovadd="1.0.0">
        <declared>Foundation/NSXMLDocument.h</declared>
        <desc>
          An XMLDocument encapsulates an entire document. This must
          contain a single element node.
        </desc>
        <method type="Class" factory="yes" ovadd="1.0.0">
          <sel>replacementClassForClass:</sel>
          <arg type="Class">cls</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSXMLDTD*" ovadd="1.0.0">
          <sel>DTD</sel>
          <desc>
            Returns the DTD set for the receiver.
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>MIMEType</sel>
          <desc>
            Returns the document MIME type..
          </desc>
        </method>
        <method type="NSData*" ovadd="1.0.0">
          <sel>XMLData</sel>
          <desc>
            Outputs XML data using
            <ref type="method" id="-XMLDataWithOptions:">
              -XMLDataWithOptions:
            </ref>
            with NSXMLNodeOptionsNone.
          </desc>
        </method>
        <method type="NSData*" ovadd="1.0.0">
          <sel>XMLDataWithOptions:</sel>
          <arg type="NSUInteger">theOptions</arg>
          <desc>
            Outputs the reciever encoded using the specified
            options.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>addChild:</sel>
          <arg type="NSXMLNode*">child</arg>
          <desc>
            Adds <var>child</var> after existing children.
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>characterEncoding</sel>
          <desc>
            Returns the IANA character encoding, or
            <code>nil</code> if none is set.
          </desc>
        </method>
        <method type="NSXMLDocumentContentKind" ovadd="1.0.0">
          <sel>documentContentKind</sel>
          <desc>
            Returns the kind of document.
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>initWithContentsOfURL:</sel>
          <arg type="NSURL*">url</arg>
          <sel>options:</sel>
          <arg type="NSUInteger">mask</arg>
          <sel>error:</sel>
          <arg type="NSError**">error</arg>
          <desc>
            Initialise using the data downloaded from the
            spplied <var>url</var>.
          </desc>
        </method>
        <method type="id" init="yes" ovadd="1.0.0">
          <sel>initWithData:</sel>
          <arg type="NSData*">data</arg>
          <sel>options:</sel>
          <arg type="NSUInteger">mask</arg>
          <sel>error:</sel>
          <arg type="NSError**">error</arg>
          <desc>
            Returns a document created from <var>data</var>.
            <br /> Parse errors are returned in <var>error</var>
            .
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>initWithRootElement:</sel>
          <arg type="NSXMLElement*">element</arg>
          <desc>
            Returns a document with a single child, the root
            <var>element</var>.
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>initWithXMLString:</sel>
          <arg type="NSString*">string</arg>
          <sel>options:</sel>
          <arg type="NSUInteger">mask</arg>
          <sel>error:</sel>
          <arg type="NSError**">error</arg>
          <desc>
            Initialises the receiver by creating a document
            from XML (or HTML if the HTMLTidy option is set).
            Parse errors are returned in the <var>error</var>
            argument.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>insertChild:</sel>
          <arg type="NSXMLNode*">child</arg>
          <sel>atIndex:</sel>
          <arg type="NSUInteger">index</arg>
          <desc>
            Inserts <var>child</var> at <var>index</var>.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>insertChildren:</sel>
          <arg type="NSArray*">children</arg>
          <sel>atIndex:</sel>
          <arg type="NSUInteger">index</arg>
          <desc>
            Inserts a number of <var>children</var> at the
            <var>index</var>.
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isStandalone</sel>
          <desc>
            Returns <code>NO</code> if the receiver depends
            upon an external DTD, otherwise returns
            <code>YES</code>.
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>objectByApplyingXSLT:</sel>
          <arg type="NSData*">xslt</arg>
          <sel>arguments:</sel>
          <arg type="NSDictionary*">arguments</arg>
          <sel>error:</sel>
          <arg type="NSError**">error</arg>
          <desc>
            Returns a new document created by applying
            <var>xslt</var> (with a set of key/value pairs) to
            the receiver.
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>objectByApplyingXSLTAtURL:</sel>
          <arg type="NSURL*">xsltURL</arg>
          <sel>arguments:</sel>
          <arg type="NSDictionary*">arguments</arg>
          <sel>error:</sel>
          <arg type="NSError**">error</arg>
          <desc>
            Downloads XSLT from <var>xsltURL</var>, and then
            returns a new document created by applying it (with
            a set of key/value pairs) to the receiver.
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>objectByApplyingXSLTString:</sel>
          <arg type="NSString*">xslt</arg>
          <sel>arguments:</sel>
          <arg type="NSDictionary*">arguments</arg>
          <sel>error:</sel>
          <arg type="NSError**">error</arg>
          <desc>
            Returns a new document created by applying
            <var>xslt</var> (with a set of key/value pairs) to
            the receiver.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>removeChildAtIndex:</sel>
          <arg type="NSUInteger">index</arg>
          <desc>
            Removes the child at the <var>index</var>.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>replaceChildAtIndex:</sel>
          <arg type="NSUInteger">index</arg>
          <sel>withNode:</sel>
          <arg type="NSXMLNode*">theNode</arg>
          <desc>
            Replacs the child at the specified <var>index</var>
            .
          </desc>
        </method>
        <method type="NSXMLElement*" ovadd="1.0.0">
          <sel>rootElement</sel>
          <desc>
            Returns the root object of the receiver.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setCharacterEncoding:</sel>
          <arg type="NSString*">encoding</arg>
          <desc>
            Sets the character <var>encoding</var> to an IANA
            characterset type.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setChildren:</sel>
          <arg type="NSArray*">children</arg>
          <desc>
            Replaces all existing child nodes with the ones in
            the array.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setDTD:</sel>
          <arg type="NSXMLDTD*">documentTypeDeclaration</arg>
          <desc>
            Sets the DTD of the receiver. If this is set then the
            DTD will be output when the document is.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setDocumentContentKind:</sel>
          <arg type="NSXMLDocumentContentKind">theContentKind</arg>
          <desc>
            Sets the kind of document.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setMIMEType:</sel>
          <arg type="NSString*">theMIMEType</arg>
          <desc>
            Sets the document MIME type (usually text/xml).
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setRootElement:</sel>
          <arg type="NSXMLNode*">root</arg>
          <desc>
            Sets the <var>root</var> object of the receiver,
            removing any children which were previously set.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setStandalone:</sel>
          <arg type="BOOL">standalone</arg>
          <desc>
            Sets whether the receiver is a document which requires
            an external DTD. <br /> If this is set then the
            <var>standalone</var> declaration will appear if the
            document is output.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setVersion:</sel>
          <arg type="NSString*">version</arg>
          <desc>
            Sets the XML <var>version</var> <br /> Permitted
            values ar '1.0' or '1,1'
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>validateAndReturnError:</sel>
          <arg type="NSError**">error</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>version</sel>
          <desc>
            Returns the XML version or <code>nil</code> if none
            is set.
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
