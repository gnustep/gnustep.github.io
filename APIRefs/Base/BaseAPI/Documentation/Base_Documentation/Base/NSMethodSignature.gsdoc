<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSMethodSignature" stylesheeturl="gnustepStyle" up="Base">
  <head>
    <title>NSMethodSignature class reference</title>
    <author name="Andrew Kachites McCallum">
      <email address="mccallum@gnu.ai.mit.edu">
        mccallum@gnu.ai.mit.edu
      </email>
    </author>
    <date>Generated at 2024-11-07 16:52:01 -0500</date>
    <copy>1994-2015 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSMethodSignature class
      </heading>
      <class name="NSMethodSignature" super="NSObject" ovadd="1.0.0">
        <declared>Foundation/NSMethodSignature.h</declared>
        <desc>
          <p>
            <strong>Class</strong> encapsulating type
            information for method arguments and return
            value. It is used as a component of
            <ref type="class" id="NSInvocation">NSInvocation</ref>
              to implement message forwarding, such as within the
              distributed objects framework. Instances can
              be obtained from the
              <ref type="class" id="NSObject">NSObject</ref>
                method
                <ref type="method" id="-methodSignatureForSelector:" class="NSObject">[NSObject -methodSignatureForSelector:]</ref>.
              </p>
              <p>
                Basically, types are represented as
                Objective-C <code>@encode(...)</code>
                compatible strings. The arguments are
                numbered starting from 0, including the
                implicit arguments <code><em>self</em></code>
                (type <code><strong>id</strong></code>, at
                position 0) and <code><em>_cmd</em></code>
                (type <code><strong>SEL</strong></code>, at
                position 1).
              </p>
        </desc>
        <method type="NSMethodSignature*" factory="yes" ovadd="1.0.0">
          <sel>signatureWithObjCTypes:</sel>
          <arg type="const char*">t</arg>
          <desc>
            Build a method signature directly from string
            description of return type and argument types,
            using the Objective-C <code>@encode(...)</code> type
            codes.
          </desc>
        </method>
        <method type="NSUInteger" ovadd="1.0.0">
          <sel>frameLength</sel>
          <desc>
            Number of bytes that the full set of arguments
            occupies on the stack, which is
            platform(hardware)-dependent.
          </desc>
        </method>
        <method type="const char*" ovadd="1.0.0">
          <sel>getArgumentTypeAtIndex:</sel>
          <arg type="NSUInteger">index</arg>
          <desc>
            Returns Objective-C <code>@encode(...)</code>
            compatible string. Arguments are numbered
            starting from 0, including the implicit arguments
            <code><em>self</em></code> (type
            <code><strong>id</strong></code>, at position 0) and
            <code><em>_cmd</em></code> (type
            <code><strong>SEL</strong></code>, at position 1).
            <br /> Type strings may include leading type
            qualifiers.
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isOneway</sel>
          <desc>
            Pertains to distributed objects; method is
            asynchronous when invoked and return should
            not be waited for.
          </desc>
        </method>
        <method type="NSUInteger" ovadd="1.0.0">
          <sel>methodReturnLength</sel>
          <desc>
            Number of bytes that the return value occupies on
            the stack, which is platform(hardware)-dependent.
          </desc>
        </method>
        <method type="const char*" ovadd="1.0.0">
          <sel>methodReturnType</sel>
          <desc>
            Returns an Objective-C <code>@encode(...)</code>
            compatible string describing the return type of
            the method. This may include type qualifiers.
          </desc>
        </method>
        <method type="NSUInteger" ovadd="1.0.0">
          <sel>numberOfArguments</sel>
          <desc>
            Returns number of arguments to method, including
            the implicit <code><em>self</em></code> and
            <code><em>_cmd</em></code>.
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
