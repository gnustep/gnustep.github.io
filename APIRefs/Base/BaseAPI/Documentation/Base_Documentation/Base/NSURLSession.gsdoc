<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSURLSession" stylesheeturl="gnustepStyle" up="Base">
  <head>
    <title>NSURLSession documentation</title>
    <author name="Hugo Melder">
      <email address="hugo@algoriddim.com">
        hugo@algoriddim.com
      </email>
    </author>
    <date>Generated at 2024-11-07 16:52:01 -0500</date>
    <copy>2017-2024 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the
        NSURLSessionConfiguration class
      </heading>
      <class name="NSURLSessionConfiguration" super="NSObject" ovadd="10.9.0">
        <declared>Foundation/NSURLSession.h</declared>
        <conform>NSCopying</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <ivariable type="NSDictionary*" name="_HTTPAdditionalHeaders" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSHTTPCookieAcceptPolicy" name="_HTTPCookieAcceptPolicy" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSHTTPCookieStorage*" name="_HTTPCookieStorage" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSInteger" name="_HTTPMaximumConnectionLifetime" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSInteger" name="_HTTPMaximumConnectionsPerHost" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_HTTPShouldSetCookies" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_HTTPShouldUsePipelining" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSURLCache*" name="_URLCache" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSURLCredentialStorage*" name="_URLCredentialStorage" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSString*" name="_identifier" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSArray*" name="_protocolClasses" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSURLRequestCachePolicy" name="_requestCachePolicy" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSTimeInterval" name="_timeoutIntervalForRequest" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSTimeInterval" name="_timeoutIntervalForResource" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <method type="NSURLSessionConfiguration*" factory="yes" ovadd="10.9.0">
          <sel>backgroundSessionConfigurationWithIdentifier:</sel>
          <arg type="NSString*">identifier</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSURLSessionConfiguration*" factory="yes" ovadd="10.9.0">
          <sel>defaultSessionConfiguration</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSURLSessionConfiguration*" factory="yes" ovadd="10.9.0">
          <sel>ephemeralSessionConfiguration</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="nullable NSDictionary*" ovadd="10.9.0">
          <sel>HTTPAdditionalHeaders</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSHTTPCookieAcceptPolicy" ovadd="10.9.0">
          <sel>HTTPCookieAcceptPolicy</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="nullable NSHTTPCookieStorage*" ovadd="10.9.0">
          <sel>HTTPCookieStorage</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSInteger" ovadd="10.9.0">
          <sel>HTTPMaximumConnectionLifetime</sel>
          <desc>
            Permits a session to be configured so that older
            connections are reused. A value of zero or less
            uses the default behavior where connections are reused
            as <strong>long</strong> as they are not older than 118
            seconds, which is reasonable for the vast majority
            if situations.
          </desc>
        </method>
        <method type="NSInteger" ovadd="10.9.0">
          <sel>HTTPMaximumConnectionsPerHost</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.9.0">
          <sel>HTTPShouldSetCookies</sel>
          <desc>
            Indicates whether the session should set cookies.
            This property controls whether tasks within sessions
            based on this configuration should automatically
            include cookies from the shared cookie store when
            making requests. If set to <code>NO</code>, you must
            manually provide cookies by adding a Cookie header
            through the session's HTTPAdditionalHeaders
            property or on a per-request basis using a custom
            NSURLRequest object. The default value is
            <code>YES</code>. See Also: - HTTPCookieAcceptPolicy
            - HTTPCookieStorage - NSHTTPCookieStorage - NSHTTPCookie
          </desc>
        </method>
        <method type="BOOL" ovadd="10.9.0">
          <sel>HTTPShouldUsePipelining</sel>
          <desc>
            HTTP/1.1 pipelining is not implemented. This flag
            is ignored.
          </desc>
        </method>
        <method type="nullable NSURLCache*" ovadd="10.9.0">
          <sel>URLCache</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="nullable NSURLCredentialStorage*" ovadd="10.9.0">
          <sel>URLCredentialStorage</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSURLRequest*" ovadd="10.9.0">
          <sel>configureRequest:</sel>
          <arg type="NSURLRequest*">request</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="nullable NSString*" ovadd="10.9.0">
          <sel>identifier</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="nullable NSArray*" ovadd="10.9.0">
          <sel>protocolClasses</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSURLRequestCachePolicy" ovadd="10.9.0">
          <sel>requestCachePolicy</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setHTTPAdditionalHeaders:</sel>
          <arg type="NSDictionary*">headers</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setHTTPCookieAcceptPolicy:</sel>
          <arg type="NSHTTPCookieAcceptPolicy">policy</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setHTTPCookieStorage:</sel>
          <arg type="NSHTTPCookieStorage*">storage</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setHTTPMaximumConnectionLifetime:</sel>
          <arg type="NSInteger">n</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setHTTPMaximumConnectionsPerHost:</sel>
          <arg type="NSInteger">n</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setHTTPShouldSetCookies:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Sets whether the session should set cookies. This
            method controls whether tasks within sessions based
            on this configuration should automatically include
            cookies from the shared cookie store when making
            requests. If set to <code>NO</code>, you must
            manually provide cookies by adding a Cookie header
            through the session's HTTPAdditionalHeaders
            property or on a per-request basis using a custom
            NSURLRequest object. The default value is
            <code>YES</code>. See Also: - HTTPCookieAcceptPolicy
            - HTTPCookieStorage - NSHTTPCookieStorage - NSHTTPCookie
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setHTTPShouldUsePipelining:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setRequestCachePolicy:</sel>
          <arg type="NSURLRequestCachePolicy">policy</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setTimeoutIntervalForRequest:</sel>
          <arg type="NSTimeInterval">interval</arg>
          <desc>
            Sets the timeout <var>interval</var> to use when
            waiting for additional data to arrive.
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setTimeoutIntervalForResource:</sel>
          <arg type="NSTimeInterval">interval</arg>
          <desc>
            Sets the maximum amount of time that a resource
            request should be allowed to take.
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setURLCache:</sel>
          <arg type="NSURLCache*">cache</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setURLCredentialStorage:</sel>
          <arg type="NSURLCredentialStorage*">storage</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSTimeInterval" ovadd="10.9.0">
          <sel>timeoutIntervalForRequest</sel>
          <desc>
            Gets the timeout interval to use when waiting for
            additional data to arrive. The request timeout
            interval controls how <strong>long</strong> (in
            seconds) a task should wait for additional data to
            arrive before giving up. The timer is reset whenever
            new data arrives. When the request timer reaches the
            specified interval without receiving any new
            data, it triggers a timeout. Currently not used by
            NSURLSession.
          </desc>
        </method>
        <method type="NSTimeInterval" ovadd="10.9.0">
          <sel>timeoutIntervalForResource</sel>
          <desc>
            Gets the maximum amount of time that a resource
            request should be allowed to take. The resource
            timeout interval controls how <strong>long</strong>
            (in seconds) to wait for an entire resource to transfer
            before giving up. The resource timer starts when the
            request is initiated and counts until either the
            request completes or this timeout interval is
            reached, whichever comes first.
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSURLSessionDataTask
        class
      </heading>
      <class name="NSURLSessionDataTask" super="NSURLSessionTask" ovadd="10.9.0">
        <declared>Foundation/NSURLSession.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <ivariable type="void*" name="_completionHandler" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSURLSessionDownloadTask class
      </heading>
      <class name="NSURLSessionDownloadTask" super="NSURLSessionTask" ovadd="10.9.0">
        <declared>Foundation/NSURLSession.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <ivariable type="void*" name="_completionHandler" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="int64_t" name="_countOfBytesWritten" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSURLSessionStreamTask
        class
      </heading>
      <class name="NSURLSessionStreamTask" super="NSURLSessionTask" ovadd="10.11.0">
        <declared>Foundation/NSURLSession.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSURLSessionTask class
      </heading>
      <class name="NSURLSessionTask" super="NSObject" ovadd="10.9.0">
        <declared>Foundation/NSURLSession.h</declared>
        <conform>NSCopying</conform>
        <conform>NSProgressReporting</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <ivariable type="NSURLRequest*" name="_currentRequest" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="id&lt;NSURLSessionTaskDelegate&gt;" name="_delegate" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSDate*" name="_earliestBeginDate" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSError*" name="_error" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSURLRequest*" name="_originalRequest" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSProgress*" name="_progress" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSURLResponse*" name="_response" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSURLSessionTaskState" name="_state" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSString*" name="_taskDescription" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSUInteger" name="_taskIdentifier" validity="protected" ovadd="10.9.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <method type="void" ovadd="10.9.0">
          <sel>cancel</sel>
          <desc>
            Cancels the task and the ongoing transfer.
          </desc>
        </method>
        <method type="int64_t" ovadd="10.9.0">
          <sel>countOfBytesClientExpectsToReceive</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="int64_t" ovadd="10.9.0">
          <sel>countOfBytesClientExpectsToSend</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="int64_t" ovadd="10.9.0">
          <sel>countOfBytesExpectedToReceive</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="int64_t" ovadd="10.9.0">
          <sel>countOfBytesExpectedToSend</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="int64_t" ovadd="10.9.0">
          <sel>countOfBytesReceived</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="int64_t" ovadd="10.9.0">
          <sel>countOfBytesSent</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="nullable NSURLRequest*" ovadd="10.9.0">
          <sel>currentRequest</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="nullable id&lt;NSURLSessionTaskDelegate&gt;" ovadd="10.9.0">
          <sel>delegate</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="nullable NSDate*" ovadd="10.9.0">
          <sel>earliestBeginDate</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="nullable NSError*" ovadd="10.9.0">
          <sel>error</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="nullable NSURLRequest*" ovadd="10.9.0">
          <sel>originalRequest</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="float" ovadd="10.9.0">
          <sel>priority</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSProgress*" ovadd="10.9.0">
          <sel>progress</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="nullable NSURLResponse*" ovadd="10.9.0">
          <sel>response</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>resume</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setDelegate:</sel>
          <arg type="nullable id&lt;NSURLSessionTaskDelegate&gt;">delegate</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setEarliestBeginDate:</sel>
          <arg type="nullable NSDate*">date</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setPriority:</sel>
          <arg type="float">priority</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>setTaskDescription:</sel>
          <arg type="nullable NSString*">description</arg>
          <desc>
            Sets an app-specific <var>description</var> of the
            task.
          </desc>
        </method>
        <method type="NSURLSessionTaskState" ovadd="10.9.0">
          <sel>state</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>suspend</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="nullable NSString*" ovadd="10.9.0">
          <sel>taskDescription</sel>
          <desc>
            App-specific description of the task.
          </desc>
        </method>
        <method type="NSUInteger" ovadd="10.9.0">
          <sel>taskIdentifier</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSURLSessionUploadTask
        class
      </heading>
      <class name="NSURLSessionUploadTask" super="NSURLSessionDataTask" ovadd="10.9.0">
        <declared>Foundation/NSURLSession.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSURLSessionDataDelegate protocol
      </heading>
      <protocol name="NSURLSessionDataDelegate" ovadd="10.9.0">
        <declared>Foundation/NSURLSession.h</declared>
        <conform>NSURLSessionTaskDelegate</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="void" ovadd="10.9.0">
          <sel>URLSession:</sel>
          <arg type="NSURLSession*">session</arg>
          <sel>dataTask:</sel>
          <arg type="NSURLSessionDataTask*">dataTask</arg>
          <sel>didReceiveData:</sel>
          <arg type="NSData*">data</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>URLSession:</sel>
          <arg type="NSURLSession*">session</arg>
          <sel>dataTask:</sel>
          <arg type="NSURLSessionDataTask*">dataTask</arg>
          <sel>didReceiveResponse:</sel>
          <arg type="NSURLResponse*">response</arg>
          <sel>completionHandler:</sel>
          <arg type="void(^)(NSURLSessionResponseDisposition disposition)">completionHandler</arg>
          <desc>
            Informs the delegate of a <var>response</var>. This
            message is sent when all the <var>response</var>
            headers have arrived, before the body of the
            <var>response</var> arrives.
          </desc>
        </method>
      </protocol>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSURLSessionDelegate
        protocol
      </heading>
      <protocol name="NSURLSessionDelegate" ovadd="10.9.0">
        <declared>Foundation/NSURLSession.h</declared>
        <conform>NSObject</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="void" ovadd="10.9.0">
          <sel>URLSession:</sel>
          <arg type="NSURLSession*">session</arg>
          <sel>didBecomeInvalidWithError:</sel>
          <arg type="nullable NSError*">error</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>URLSession:</sel>
          <arg type="NSURLSession*">session</arg>
          <sel>didReceiveChallenge:</sel>
          <arg type="NSURLAuthenticationChallenge*">challenge</arg>
          <sel>completionHandler:</sel>
          <arg type="void(^)(NSURLSessionAuthChallengeDisposition disposition,NSURLCredential*credential)">handler</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </protocol>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSURLSessionDownloadDelegate
        protocol
      </heading>
      <protocol name="NSURLSessionDownloadDelegate" ovadd="10.9.0">
        <declared>Foundation/NSURLSession.h</declared>
        <conform>NSURLSessionTaskDelegate</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="void" ovadd="10.9.0">
          <sel>URLSession:</sel>
          <arg type="NSURLSession*">session</arg>
          <sel>downloadTask:</sel>
          <arg type="NSURLSessionDownloadTask*">downloadTask</arg>
          <sel>didFinishDownloadingToURL:</sel>
          <arg type="NSURL*">location</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>URLSession:</sel>
          <arg type="NSURLSession*">session</arg>
          <sel>downloadTask:</sel>
          <arg type="NSURLSessionDownloadTask*">downloadTask</arg>
          <sel>didResumeAtOffset:</sel>
          <arg type="int64_t">fileOffset</arg>
          <sel>expectedTotalBytes:</sel>
          <arg type="int64_t">expectedTotalBytes</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>URLSession:</sel>
          <arg type="NSURLSession*">session</arg>
          <sel>downloadTask:</sel>
          <arg type="NSURLSessionDownloadTask*">downloadTask</arg>
          <sel>didWriteData:</sel>
          <arg type="int64_t">bytesWritten</arg>
          <sel>totalBytesWritten:</sel>
          <arg type="int64_t">totalBytesWritten</arg>
          <sel>totalBytesExpectedToWrite:</sel>
          <arg type="int64_t">totalBytesExpectedToWrite</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </protocol>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSURLSessionTaskDelegate protocol
      </heading>
      <protocol name="NSURLSessionTaskDelegate" ovadd="10.9.0">
        <declared>Foundation/NSURLSession.h</declared>
        <conform>NSURLSessionDelegate</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="void" ovadd="0.0.0">
          <sel>URLSession:</sel>
          <arg type="NSURLSession*">session</arg>
          <sel>didCreateTask:</sel>
          <arg type="NSURLSessionTask*">task</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>URLSession:</sel>
          <arg type="NSURLSession*">session</arg>
          <sel>task:</sel>
          <arg type="NSURLSessionTask*">task</arg>
          <sel>didCompleteWithError:</sel>
          <arg type="nullable NSError*">error</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>URLSession:</sel>
          <arg type="NSURLSession*">session</arg>
          <sel>task:</sel>
          <arg type="NSURLSessionTask*">task</arg>
          <sel>didReceiveChallenge:</sel>
          <arg type="NSURLAuthenticationChallenge*">challenge</arg>
          <sel>completionHandler:</sel>
          <arg type="void(^)(NSURLSessionAuthChallengeDisposition disposition,NSURLCredential*credential)">handler</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>URLSession:</sel>
          <arg type="NSURLSession*">session</arg>
          <sel>task:</sel>
          <arg type="NSURLSessionTask*">task</arg>
          <sel>didSendBodyData:</sel>
          <arg type="int64_t">bytesSent</arg>
          <sel>totalBytesSent:</sel>
          <arg type="int64_t">totalBytesSent</arg>
          <sel>totalBytesExpectedToSend:</sel>
          <arg type="int64_t">totalBytesExpectedToSend</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>URLSession:</sel>
          <arg type="NSURLSession*">session</arg>
          <sel>task:</sel>
          <arg type="NSURLSessionTask*">task</arg>
          <sel>needNewBodyStream:</sel>
          <arg type="void(^)(NSInputStream*bodyStream)">completionHandler</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.9.0">
          <sel>URLSession:</sel>
          <arg type="NSURLSession*">session</arg>
          <sel>task:</sel>
          <arg type="NSURLSessionTask*">task</arg>
          <sel>willPerformHTTPRedirection:</sel>
          <arg type="NSHTTPURLResponse*">response</arg>
          <sel>newRequest:</sel>
          <arg type="NSURLRequest*">request</arg>
          <sel>completionHandler:</sel>
          <arg type="void(^)(NSURLRequest*)">completionHandler</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </protocol>
    </chapter>
  </body>
</gsdoc>
