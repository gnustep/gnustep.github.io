<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSXMLParser" stylesheeturl="gnustepStyle" up="Base">
  <head>
    <title>NSXMLParser class documentation</title>
    <author name="Richard Frith-Macdonald">
      <email address="rfm@gnu.org">
        rfm@gnu.org
      </email>
    </author>
    <date>Generated at 2024-11-07 16:52:01 -0500</date>
    <copy>2004 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSXMLParser class
      </heading>
      <class name="NSXMLParser" super="NSObject" ovadd="10.3.0">
        <declared>Foundation/NSXMLParser.h</declared>
        <desc>
          This class is a PRE-ALPHA implementation. You should be
          prepared to track down and fix bugs and preferably
          contribute fixes back. <br /> If you don't want to
          do that, use the
          <ref type="class" id="GSXMLParser">GSXMLParser</ref>
            class instead... This NSXMLParser class is
            implemented as a wrapper round some of the
            functionality of the more powerful GSXML
            APIs, and is intended as a MacOSX compatibility
            feature.
            <p>
              This class implements an event driven parser
              handling the parsing process by sending messages
              to a delegate when certain parts of the XML document
              being parsed are encountered.
            </p>
            <p>
              To use the class, you create and initialise an
              instance with a particular XML document, set the
              delegate of the instance, and send a
              <ref type="method" id="-parse">
                -parse
              </ref>
              message to it. The delegate must then make use of
              the information it receives in the messages it gets
              from the parser.
            </p>
            <p>
              The
              <ref type="category" id="NSObject(NSXMLParserDelegateEventAdditions)">NSObject(NSXMLParserDelegateEventAdditions)</ref>informal protocol documents the methods which the delegate object may implement in order to handle the parsing process.</p>
        </desc>
        <ivariable type="void*" name="_handler" validity="public" ovadd="10.3.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="void*" name="_parser" validity="public" ovadd="10.3.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <method type="void" ovadd="10.3.0">
          <sel>abortParsing</sel>
          <desc>
            Terminates the current parse operation and sends
            an error to the delegate of the parser.
          </desc>
        </method>
        <method type="id" ovadd="10.3.0">
          <sel>delegate</sel>
          <desc>
            Returns the delegate previously set using
            <ref type="method" id="-setDelegate:">
              -setDelegate:
            </ref>
            or <code>nil</code> if no delegate is set.
          </desc>
        </method>
        <method type="instancetype" ovadd="10.3.0">
          <sel>initWithContentsOfURL:</sel>
          <arg type="NSURL*">anURL</arg>
          <desc>
            Convenience method fetching data from
            <var>anURL</var>. <br />
          </desc>
        </method>
        <method type="instancetype" init="yes" ovadd="10.3.0">
          <sel>initWithData:</sel>
          <arg type="NSData*">data</arg>
          <desc>
            Initialises the parser with the specified xml
            <var>data</var>.
          </desc>
        </method>
        <method type="instancetype" ovadd="10.3.0">
          <sel>initWithStream:</sel>
          <arg type="NSInputStream*">stream</arg>
          <desc>
            Initialises the parser with the specified input
            <var>stream</var>.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>parse</sel>
          <desc>
            Parses the supplied data and returns
            <code>YES</code> on success, <code>NO</code>
            otherwise.
          </desc>
        </method>
        <method type="NSError*" ovadd="10.3.0">
          <sel>parserError</sel>
          <desc>
            Returns the last error produced by parsing (if
            any).
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>setDelegate:</sel>
          <arg type="id">delegate</arg>
          <desc>
            Sets the parser <var>delegate</var> (which is not
            retained).
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>setShouldProcessNamespaces:</sel>
          <arg type="BOOL">aFlag</arg>
          <desc>
            Set flag to determine whether the namespaceURI and the
            qualified name of an element is provided in the
            <ref type="method" id="-parser:didStartElement:namespaceURI:qualifiedName:attributes:" class="NSObject(NSXMLParserDelegateEventAdditions)">[NSObject(NSXMLParserDelegateEventAdditions) -parser:didStartElement:namespaceURI:qualifiedName:attributes:]</ref> and <ref type="method" id="-parser:didEndElement:namespaceURI:qualifiedName:" class="NSObject(NSXMLParserDelegateEventAdditions)">[NSObject(NSXMLParserDelegateEventAdditions) -parser:didEndElement:namespaceURI:qualifiedName:]</ref> methods.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>setShouldReportNamespacePrefixes:</sel>
          <arg type="BOOL">aFlag</arg>
          <desc>
            Sets a flag to specify whether the parser should call
            the
            <ref type="method" id="-parser:didStartMappingPrefix:toURI:" class="NSObject(NSXMLParserDelegateEventAdditions)">[NSObject(NSXMLParserDelegateEventAdditions) -parser:didStartMappingPrefix:toURI:]</ref> and <ref type="method" id="-parser:didEndMappingPrefix:" class="NSObject(NSXMLParserDelegateEventAdditions)">[NSObject(NSXMLParserDelegateEventAdditions) -parser:didEndMappingPrefix:]</ref> delegate methods.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>setShouldResolveExternalEntities:</sel>
          <arg type="BOOL">aFlag</arg>
          <desc>
            Sets flag to determine if declarations of external
            entities are reported using
            <ref type="method" id="-parser:foundExternalEntityDeclarationWithName:publicID:systemID:" class="NSObject(NSXMLParserDelegateEventAdditions)">[NSObject(NSXMLParserDelegateEventAdditions) -parser:foundExternalEntityDeclarationWithName:publicID:systemID:]</ref>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>shouldProcessNamespaces</sel>
          <desc>
            Returns the value set by
            <ref type="method" id="-setShouldProcessNamespaces:">
              -setShouldProcessNamespaces:
            </ref>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>shouldReportNamespacePrefixes</sel>
          <desc>
            Returns the value set by
            <ref type="method" id="-setShouldReportNamespacePrefixes:">-setShouldReportNamespacePrefixes:</ref>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>shouldResolveExternalEntities</sel>
          <desc>
            Returns the value set by
            <ref type="method" id="-setShouldResolveExternalEntities:">-setShouldResolveExternalEntities:</ref>
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSObject(NSXMLParserDelegateEventAdditions)
        category
      </heading>
      <category name="NSXMLParserDelegateEventAdditions" class="NSObject" ovadd="10.3.0">
        <declared>Foundation/NSXMLParser.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>didEndElement:</sel>
          <arg type="NSString*">anElementName</arg>
          <sel>namespaceURI:</sel>
          <arg type="NSString*">aNamespaceURI</arg>
          <sel>qualifiedName:</sel>
          <arg type="NSString*">aQualifierName</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>didEndMappingPrefix:</sel>
          <arg type="NSString*">aPrefix</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>didStartElement:</sel>
          <arg type="NSString*">anElementName</arg>
          <sel>namespaceURI:</sel>
          <arg type="NSString*">aNamespaceURI</arg>
          <sel>qualifiedName:</sel>
          <arg type="NSString*">aQualifierName</arg>
          <sel>attributes:</sel>
          <arg type="NSDictionary*">anAttributeDict</arg>
          <desc>
            Called when the start of an element is encountered
            in the document, this provides the name of the element,
            a dictionary containing the attributes (if any) and
            (where namespaces are used) the namespace
            information for the element.
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>didStartMappingPrefix:</sel>
          <arg type="NSString*">aPrefix</arg>
          <sel>toURI:</sel>
          <arg type="NSString*">aNamespaceURI</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>foundAttributeDeclarationWithName:</sel>
          <arg type="NSString*">anAttributeName</arg>
          <sel>forElement:</sel>
          <arg type="NSString*">anElementName</arg>
          <sel>type:</sel>
          <arg type="NSString*">aType</arg>
          <sel>defaultValue:</sel>
          <arg type="NSString*">aDefaultValue</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>foundCDATA:</sel>
          <arg type="NSData*">aBlock</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>foundCharacters:</sel>
          <arg type="NSString*">aString</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>foundComment:</sel>
          <arg type="NSString*">aComment</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>foundElementDeclarationWithName:</sel>
          <arg type="NSString*">anElementName</arg>
          <sel>model:</sel>
          <arg type="NSString*">aModel</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>foundExternalEntityDeclarationWithName:</sel>
          <arg type="NSString*">aName</arg>
          <sel>publicID:</sel>
          <arg type="NSString*">aPublicID</arg>
          <sel>systemID:</sel>
          <arg type="NSString*">aSystemID</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>foundIgnorableWhitespace:</sel>
          <arg type="NSString*">aWhitespaceString</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>foundInternalEntityDeclarationWithName:</sel>
          <arg type="NSString*">aName</arg>
          <sel>value:</sel>
          <arg type="NSString*">aValue</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>foundNotationDeclarationWithName:</sel>
          <arg type="NSString*">aName</arg>
          <sel>publicID:</sel>
          <arg type="NSString*">aPublicID</arg>
          <sel>systemID:</sel>
          <arg type="NSString*">aSystemID</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>foundProcessingInstructionWithTarget:</sel>
          <arg type="NSString*">aTarget</arg>
          <sel>data:</sel>
          <arg type="NSString*">aData</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>foundUnparsedEntityDeclarationWithName:</sel>
          <arg type="NSString*">aName</arg>
          <sel>publicID:</sel>
          <arg type="NSString*">aPublicID</arg>
          <sel>systemID:</sel>
          <arg type="NSString*">aSystemID</arg>
          <sel>notationName:</sel>
          <arg type="NSString*">aNotationName</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>parseErrorOccurred:</sel>
          <arg type="NSError*">anError</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSData*" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>resolveExternalEntityName:</sel>
          <arg type="NSString*">aName</arg>
          <sel>systemID:</sel>
          <arg type="NSString*">aSystemID</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parser:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <sel>validationErrorOccurred:</sel>
          <arg type="NSError*">anError</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parserDidEndDocument:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <desc>
            Called when parsing ends.
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0">
          <sel>parserDidStartDocument:</sel>
          <arg type="NSXMLParser*">aParser</arg>
          <desc>
            Called when parsing begins.
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSXMLParser(NSXMLParserLocatorAdditions)
        category
      </heading>
      <category name="NSXMLParserLocatorAdditions" class="NSXMLParser" ovadd="10.3.0">
        <declared>Foundation/NSXMLParser.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="NSInteger" ovadd="10.3.0">
          <sel>columnNumber</sel>
          <desc>
            Returns the current column number of the document
            being parsed.
          </desc>
        </method>
        <method type="NSInteger" ovadd="10.3.0">
          <sel>lineNumber</sel>
          <desc>
            Returns the current line number of the document
            being parsed.
          </desc>
        </method>
        <method type="NSString*" ovadd="10.3.0">
          <sel>publicID</sel>
          <desc>
            Returns the public identifier of the external
            entity in the document being parsed.
          </desc>
        </method>
        <method type="NSString*" ovadd="10.3.0">
          <sel>systemID</sel>
          <desc>
            Returns the system identifier of the external
            entity in the document being parsed.
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSXMLParserDelegate
        protocol
      </heading>
      <protocol name="NSXMLParserDelegate" ovadd="10.3.0">
        <declared>Foundation/NSXMLParser.h</declared>
        <conform>NSObject</conform>
        <desc>
          Methods implemented by a delegate in order to make
          use of the parser. <br /> This is now a formal protocol.
        </desc>
      </protocol>
    </chapter>
  </body>
</gsdoc>
