<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSKeyValueObserving" stylesheeturl="gnustepStyle" up="Base">
  <head>
    <title>NSKeyValueObserving documentation</title>
    <author name="Generated by Gregory John Casamento,,,"></author>
    <date>Generated at 2024-11-07 16:52:01 -0500</date>
    <copy>2005 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the
        NSArray(NSKeyValueObserverRegistration)
        category
      </heading>
      <category name="NSKeyValueObserverRegistration" class="NSArray" ovadd="10.3.0" gvadd="1.2.0">
        <declared>Foundation/NSKeyValueObserving.h</declared>
        <desc>
          NSArray objects are not observable, so the
          registration methods raise an exception.
        </desc>
        <method type="void" ovadd="10.3.0" gvadd="1.2.0">
          <sel>addObserver:</sel>
          <arg type="NSObject*">anObserver</arg>
          <sel>toObjectsAtIndexes:</sel>
          <arg type="NSIndexSet*">indexes</arg>
          <sel>forKeyPath:</sel>
          <arg type="NSString*">aPath</arg>
          <sel>options:</sel>
          <arg type="NSKeyValueObservingOptions">options</arg>
          <sel>context:</sel>
          <arg type="void*">aContext</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.3.0" gvadd="1.2.0">
          <sel>removeObserver:</sel>
          <arg type="NSObject*">anObserver</arg>
          <sel>fromObjectsAtIndexes:</sel>
          <arg type="NSIndexSet*">indexes</arg>
          <sel>forKeyPath:</sel>
          <arg type="NSString*">aPath</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.7.0" gvadd="1.2.0">
          <sel>removeObserver:</sel>
          <arg type="NSObject*">anObserver</arg>
          <sel>fromObjectsAtIndexes:</sel>
          <arg type="NSIndexSet*">indexes</arg>
          <sel>forKeyPath:</sel>
          <arg type="NSString*">aPath</arg>
          <sel>context:</sel>
          <arg type="void*">context</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSObject(NSKeyValueObserverNotification)
        category
      </heading>
      <category name="NSKeyValueObserverNotification" class="NSObject" ovadd="10.3.0" gvadd="1.2.0">
        <declared>Foundation/NSKeyValueObserving.h</declared>
        <desc>
          These methods are sent to the receiver when observing
          it active for a key and the key is about to be (or has
          just been) changed.
        </desc>
        <method type="void" override="dummy" ovadd="10.3.0" gvadd="1.2.0">
          <sel>didChange:</sel>
          <arg type="NSKeyValueChange">changeKind</arg>
          <sel>valuesAtIndexes:</sel>
          <arg type="NSIndexSet*">indexes</arg>
          <sel>forKey:</sel>
          <arg type="NSString*">aKey</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0" gvadd="1.2.0">
          <sel>didChangeValueForKey:</sel>
          <arg type="NSString*">aKey</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.4.0" gvadd="1.2.0">
          <sel>didChangeValueForKey:</sel>
          <arg type="NSString*">aKey</arg>
          <sel>withSetMutation:</sel>
          <arg type="NSKeyValueSetMutationKind">mutationKind</arg>
          <sel>usingObjects:</sel>
          <arg type="NSSet*">objects</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0" gvadd="1.2.0">
          <sel>willChange:</sel>
          <arg type="NSKeyValueChange">changeKind</arg>
          <sel>valuesAtIndexes:</sel>
          <arg type="NSIndexSet*">indexes</arg>
          <sel>forKey:</sel>
          <arg type="NSString*">aKey</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.3.0" gvadd="1.2.0">
          <sel>willChangeValueForKey:</sel>
          <arg type="NSString*">aKey</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" override="dummy" ovadd="10.4.0" gvadd="1.2.0">
          <sel>willChangeValueForKey:</sel>
          <arg type="NSString*">aKey</arg>
          <sel>withSetMutation:</sel>
          <arg type="NSKeyValueSetMutationKind">mutationKind</arg>
          <sel>usingObjects:</sel>
          <arg type="NSSet*">objects</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSObject(NSKeyValueObserverRegistration)
        category
      </heading>
      <category name="NSKeyValueObserverRegistration" class="NSObject" ovadd="10.3.0" gvadd="1.2.0">
        <declared>Foundation/NSKeyValueObserving.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="void" ovadd="10.3.0" gvadd="1.2.0">
          <sel>addObserver:</sel>
          <arg type="NSObject*">anObserver</arg>
          <sel>forKeyPath:</sel>
          <arg type="NSString*">aPath</arg>
          <sel>options:</sel>
          <arg type="NSKeyValueObservingOptions">options</arg>
          <sel>context:</sel>
          <arg type="void*">aContext</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.3.0" gvadd="1.2.0">
          <sel>removeObserver:</sel>
          <arg type="NSObject*">anObserver</arg>
          <sel>forKeyPath:</sel>
          <arg type="NSString*">aPath</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.7.0" gvadd="1.2.0">
          <sel>removeObserver:</sel>
          <arg type="NSObject*">anObserver</arg>
          <sel>forKeyPath:</sel>
          <arg type="NSString*">aPath</arg>
          <sel>context:</sel>
          <arg type="void*">context</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSObject(NSKeyValueObserving)
        category
      </heading>
      <category name="NSKeyValueObserving" class="NSObject" ovadd="10.3.0" gvadd="1.2.0">
        <declared>Foundation/NSKeyValueObserving.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="void" ovadd="10.3.0" gvadd="1.2.0">
          <sel>observeValueForKeyPath:</sel>
          <arg type="NSString*">aPath</arg>
          <sel>ofObject:</sel>
          <arg type="id">anObject</arg>
          <sel>change:</sel>
          <arg type="NSDictionary*">aChange</arg>
          <sel>context:</sel>
          <arg type="void*">aContext</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSObject(NSKeyValueObservingCustomization)
        category
      </heading>
      <category name="NSKeyValueObservingCustomization" class="NSObject" ovadd="10.3.0" gvadd="1.2.0">
        <declared>Foundation/NSKeyValueObserving.h</declared>
        <desc>
          These methods permit modifications to the observing
          system.
        </desc>
        <method type="BOOL" factory="yes" ovadd="10.3.0" gvadd="1.2.0">
          <sel>automaticallyNotifiesObserversForKey:</sel>
          <arg type="NSString*">aKey</arg>
          <desc>
            Specifies whether the class should send the
            notification methods of the
            NSKeyValueObserverNotification
            protocol when instances of the class receive
            messages to change the value for the key. <br />
            The default implementation returns <code>YES</code>.
          </desc>
        </method>
        <method type="NSSet*" factory="yes" ovadd="10.5.0" gvadd="1.2.0">
          <sel>keyPathsForValuesAffectingValueForKey:</sel>
          <arg type="NSString*">dependentKey</arg>
          <desc>
            Returns a set of key paths for properties whose
            values affect the value of the specified
            <var>dependentKey</var>.
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="10.3.0" gvadd="1.2.0">
          <sel>setKeys:</sel>
          <arg type="NSArray*">triggerKeys</arg>
          <sel>triggerChangeNotificationsForDependentKey:</sel>
          <arg type="NSString*">dependentKey</arg>
          <desc>
            Tells the observing system that when
            NSKeyValueObserverNotification
            protocol messages are sent for any key in the
            <var>triggerKeys</var> array, they should also be
            sent for <var>dependentKey</var>.
          </desc>
        </method>
        <method type="void*" ovadd="10.3.0" gvadd="1.2.0">
          <sel>observationInfo</sel>
          <desc>
            Returns a reference to the observation information
            for the receiver as stored using the
            <ref type="method" id="-setObservationInfo:">
              -setObservationInfo:
            </ref>
            method. <br /> The default implementation returns
            information from a global table.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0" gvadd="1.2.0">
          <sel>setObservationInfo:</sel>
          <arg type="void*">observationInfo</arg>
          <desc>
            Stores observation information for the receiver. By
            default this is done in a global table, but classes
            may implement storage in an instance variable or some
            other scheme (for improved performance).
          </desc>
        </method>
      </category>
    </chapter>
  </body>
</gsdoc>
