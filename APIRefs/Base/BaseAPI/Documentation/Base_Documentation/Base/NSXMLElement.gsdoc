<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSXMLElement" stylesheeturl="gnustepStyle" up="Base">
  <head>
    <title>NSXMLElement class documentation</title>
    <author name="Richard Frith-Macdonald">
      <email address="rfm@gnu.org">
        rfm@gnu.org
      </email>
    </author>
    <date>Generated at 2024-11-07 16:52:01 -0500</date>
    <copy>2008 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSXMLElement class
      </heading>
      <class name="NSXMLElement" super="NSXMLNode" ovadd="1.0.0">
        <declared>Foundation/NSXMLElement.h</declared>
        <desc>
          Represents an XML element. <br />
        </desc>
        <method type="void" ovadd="1.0.0">
          <sel>addAttribute:</sel>
          <arg type="NSXMLNode*">attribute</arg>
          <desc>
            Adds the supplied <var>attribute</var> to the receiver
            (ignoring if it has a duplicate name).
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>addChild:</sel>
          <arg type="NSXMLNode*">child</arg>
          <desc>
            Adds a <var>child</var> after existing children.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>addNamespace:</sel>
          <arg type="NSXMLNode*">aNamespace</arg>
          <desc>
            Adds a namespace unless the name is a duplicate.
          </desc>
        </method>
        <method type="NSXMLNode*" ovadd="1.0.0">
          <sel>attributeForLocalName:</sel>
          <arg type="NSString*">localName</arg>
          <sel>URI:</sel>
          <arg type="NSString*">URI</arg>
          <desc>
            Returns the attribute matching <var>localName</var>
            and <var>URI</var>.
          </desc>
        </method>
        <method type="NSXMLNode*" ovadd="1.0.0">
          <sel>attributeForName:</sel>
          <arg type="NSString*">name</arg>
          <desc>
            Returns the named attribute.
          </desc>
        </method>
        <method type="NSArray*" ovadd="1.0.0">
          <sel>attributes</sel>
          <desc>
            Returns the receiver's attributes.
          </desc>
        </method>
        <method type="NSArray*" ovadd="1.0.0">
          <sel>elementsForLocalName:</sel>
          <arg type="NSString*">localName</arg>
          <sel>URI:</sel>
          <arg type="NSString*">URI</arg>
          <desc>
            Searches for and returns all child elements which
            match <var>localName</var> and the specified
            <var>URI</var>.
          </desc>
        </method>
        <method type="NSArray*" ovadd="1.0.0">
          <sel>elementsForName:</sel>
          <arg type="NSString*">name</arg>
          <desc>
            Searches for and returns all child elements which
            match <var>name</var>.
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>initWithName:</sel>
          <arg type="NSString*">name</arg>
          <desc>
            Initialises the receiver with the given
            <var>name</var>.
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>initWithName:</sel>
          <arg type="NSString*">name</arg>
          <sel>URI:</sel>
          <arg type="NSString*">URI</arg>
          <desc>
            Initialises the receiver with the given
            <var>name</var> and namespace <var>URI</var>.
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>initWithName:</sel>
          <arg type="NSString*">name</arg>
          <sel>stringValue:</sel>
          <arg type="NSString*">string</arg>
          <desc>
            Initialises the receiver as a text node with
            the given <var>name</var> and content.
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>initWithXMLString:</sel>
          <arg type="NSString*">string</arg>
          <sel>error:</sel>
          <arg type="NSError**">error</arg>
          <desc>
            Initialises the receiver by parsing the XML
            <var>string</var> supplied.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>insertChild:</sel>
          <arg type="NSXMLNode*">child</arg>
          <sel>atIndex:</sel>
          <arg type="NSUInteger">index</arg>
          <desc>
            Inerts a <var>child</var> node.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>insertChildren:</sel>
          <arg type="NSArray*">children</arg>
          <sel>atIndex:</sel>
          <arg type="NSUInteger">index</arg>
          <desc>
            Inserts a number of <var>children</var>.
          </desc>
        </method>
        <method type="NSXMLNode*" ovadd="1.0.0">
          <sel>namespaceForPrefix:</sel>
          <arg type="NSString*">name</arg>
          <desc>
            Returns the namespace for the specified prefix in
            the receiver.
          </desc>
        </method>
        <method type="NSArray*" ovadd="1.0.0">
          <sel>namespaces</sel>
          <desc>
            Returns the namespaces of the receiver.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>normalizeAdjacentTextNodesPreservingCDATA:</sel>
          <arg type="BOOL">preserve</arg>
          <desc>
            Merges adjacent text nodes. If a node's value is the
            empty string, and <var>preserve</var> is
            <code>NO</code>, it is removed. <br /> This should
            be called with a value of <code>NO</code> before using
            XQuery or XPath.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>removeAttributeForName:</sel>
          <arg type="NSString*">name</arg>
          <desc>
            Removes the named attribute.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>removeChildAtIndex:</sel>
          <arg type="NSUInteger">index</arg>
          <desc>
            Removes a child node.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>removeNamespaceForPrefix:</sel>
          <arg type="NSString*">name</arg>
          <desc>
            Removes a named namespace.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>replaceChildAtIndex:</sel>
          <arg type="NSUInteger">index</arg>
          <sel>withNode:</sel>
          <arg type="NSXMLNode*">theNode</arg>
          <desc>
            Replaces the child at the specified
            <var>index</var>.
          </desc>
        </method>
        <method type="NSXMLNode*" ovadd="1.0.0">
          <sel>resolveNamespaceForName:</sel>
          <arg type="NSString*">name</arg>
          <desc>
            Returns the namespace found by searching the chain
            of namespaces.
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>resolvePrefixForNamespaceURI:</sel>
          <arg type="NSString*">namespaceURI</arg>
          <desc>
            Returns the URI by searching the chain of
            namespaces.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setAttributes:</sel>
          <arg type="NSArray*">attributes</arg>
          <desc>
            Sets the <var>attributes</var> of the receiver,
            ignoring all but the first of any duplicates.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setAttributesAsDictionary:</sel>
          <arg type="NSDictionary*">attributes</arg>
          <desc>
            Sets <var>attributes</var> from the supplied
            dictionary. <br /> DEPRECATED... use
            <ref type="method" id="-setAttributesWithDictionary:">
              -setAttributesWithDictionary:
            </ref>
            instead.
          </desc>
        </method>
        <method type="void" ovadd="10.7.0">
          <sel>setAttributesWithDictionary:</sel>
          <arg type="NSDictionary*">attributes</arg>
          <desc>
            Sets <var>attributes</var> from the supplied
            dictionary.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setChildren:</sel>
          <arg type="NSArray*">children</arg>
          <desc>
            Replaces all existing child nodes with those from
            the array.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setNamespaces:</sel>
          <arg type="NSArray*">namespaces</arg>
          <desc>
            Sets the <var>namespaces</var> for the receiver,
            ignoring all but the first of any duplicates.
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
