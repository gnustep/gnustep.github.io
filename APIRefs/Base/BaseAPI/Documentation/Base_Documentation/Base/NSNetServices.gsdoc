<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSNetServices" stylesheeturl="gnustepStyle" up="Base">
  <head>
    <title>NSNetServices documentation</title>
    <author name="Chris B. Vetter">
    </author>
    <date>Generated at 2024-11-07 16:52:01 -0500</date>
    <copy>2006 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSNetService class
      </heading>
      <class name="NSNetService" super="NSObject" ovadd="1.0.0">
        <declared>Foundation/NSNetServices.h</declared>
        <desc>
          <p>
            <ref type="class" id="NSNetService">NSNetService</ref>
              lets you publish a network service in a domain using
              multicast DNS. Additionally, it lets you
              resolve a network service that was discovered by
              <ref type="class" id="NSNetServiceBrowser">NSNetServiceBrowser</ref>. This class is an abstract superclass for concrete implementations of its functionality.</p>
        </desc>
        <ivariable type="id" name="_delegate" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="void*" name="_netService" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="void*" name="_reserved" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <method type="NSData*" factory="yes" ovadd="1.0.0">
          <sel>dataFromTXTRecordDictionary:</sel>
          <arg type="NSDictionary*">txtDictionary</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSDictionary*" factory="yes" ovadd="1.0.0">
          <sel>dictionaryFromTXTRecordData:</sel>
          <arg type="NSData*">txtData</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSData*" ovadd="1.0.0">
          <sel>TXTRecordData</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSArray*" ovadd="1.0.0">
          <sel>addresses</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id&lt;NSNetServiceDelegate&gt;" ovadd="1.0.0">
          <sel>delegate</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>domain</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>getInputStream:</sel>
          <arg type="NSInputStream**">inputStream</arg>
          <sel>outputStream:</sel>
          <arg type="NSOutputStream**">outputStream</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>hostName</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>initWithDomain:</sel>
          <arg type="NSString*">domain</arg>
          <sel>type:</sel>
          <arg type="NSString*">type</arg>
          <sel>name:</sel>
          <arg type="NSString*">name</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>initWithDomain:</sel>
          <arg type="NSString*">domain</arg>
          <sel>type:</sel>
          <arg type="NSString*">type</arg>
          <sel>name:</sel>
          <arg type="NSString*">name</arg>
          <sel>port:</sel>
          <arg type="NSInteger">port</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>name</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSInteger" ovadd="10.5.0">
          <sel>port</sel>
          <desc>
            Not implemented
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>protocolSpecificInformation</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>publish</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.5.0">
          <sel>publishWithOptions:</sel>
          <arg type="NSNetServiceOptions">options</arg>
          <desc>
            Not implemented
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>removeFromRunLoop:</sel>
          <arg type="NSRunLoop*">aRunLoop</arg>
          <sel>forMode:</sel>
          <arg type="NSString*">mode</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>resolve</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>resolveWithTimeout:</sel>
          <arg type="NSTimeInterval">timeout</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>scheduleInRunLoop:</sel>
          <arg type="NSRunLoop*">aRunLoop</arg>
          <sel>forMode:</sel>
          <arg type="NSString*">mode</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setDelegate:</sel>
          <arg type="id&lt;NSNetServiceDelegate&gt;">delegate</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setProtocolSpecificInformation:</sel>
          <arg type="NSString*">specificInformation</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>setTXTRecordData:</sel>
          <arg type="NSData*">recordData</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>startMonitoring</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>stop</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>stopMonitoring</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>type</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSNetServiceBrowser
        class
      </heading>
      <class name="NSNetServiceBrowser" super="NSObject" ovadd="1.0.0">
        <declared>Foundation/NSNetServices.h</declared>
        <desc>
          <p>
            <ref type="class" id="NSNetServiceBrowser">NSNetServiceBrowser</ref>asynchronously lets you discover network domains and, additionally, search for a type of network service. It sends its delegate a message whenever it discovers a new network service, and whenever a network service goes away.</p>
            <p>
              Each
              <ref type="class" id="NSNetServiceBrowser">NSNetServiceBrowser</ref>performs one search at a time. So in order to perform multiple searches simultaneously, create multiple instances. This class is an abstract superclass for concrete implementations of its functionality.</p>
        </desc>
        <ivariable type="id" name="_delegate" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="void*" name="_netServiceBrowser" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="void*" name="_reserved" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <method type="id&lt;NSNetServiceBrowserDelegate&gt;" ovadd="1.0.0">
          <sel>delegate</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>init</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>removeFromRunLoop:</sel>
          <arg type="NSRunLoop*">aRunLoop</arg>
          <sel>forMode:</sel>
          <arg type="NSString*">mode</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>scheduleInRunLoop:</sel>
          <arg type="NSRunLoop*">aRunLoop</arg>
          <sel>forMode:</sel>
          <arg type="NSString*">mode</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>searchForAllDomains</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>searchForBrowsableDomains</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>searchForRegistrationDomains</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>searchForServicesOfType:</sel>
          <arg type="NSString*">serviceType</arg>
          <sel>inDomain:</sel>
          <arg type="NSString*">domainName</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setDelegate:</sel>
          <arg type="id&lt;NSNetServiceBrowserDelegate&gt;">delegate</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>stop</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSObject(NSNetServiceBrowserDelegateMethods)
        informal protocol
      </heading>
      <category name="NSNetServiceBrowserDelegateMethods" class="NSObject" ovadd="1.0.0">
        <declared>Foundation/NSNetServices.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="void" ovadd="1.0.0">
          <sel>netServiceBrowser:</sel>
          <arg type="NSNetServiceBrowser*">aNetServiceBrowser</arg>
          <sel>didFindDomain:</sel>
          <arg type="NSString*">domainString</arg>
          <sel>moreComing:</sel>
          <arg type="BOOL">moreComing</arg>
          <desc>
            Notifies the delegate that a domain was found.
            <p>
              <strong>See also:</strong> <br />
              <ref type="method" id="-searchForBrowsableDomains" class="NSNetServiceBrowser">[NSNetServiceBrowser -searchForBrowsableDomains]</ref> <br /> <ref type="method" id="-searchForRegistrationDomains" class="NSNetServiceBrowser">[NSNetServiceBrowser -searchForRegistrationDomains]</ref> <br />
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>netServiceBrowser:</sel>
          <arg type="NSNetServiceBrowser*">aNetServiceBrowser</arg>
          <sel>didFindService:</sel>
          <arg type="NSNetService*">aNetService</arg>
          <sel>moreComing:</sel>
          <arg type="BOOL">moreComing</arg>
          <desc>
            Notifies the delegate that a service was found.
            <p>
              <strong>See also:</strong> <br />
              <ref type="method" id="-searchForServicesOfType:inDomain:" class="NSNetServiceBrowser">[NSNetServiceBrowser -searchForServicesOfType:inDomain:]</ref> <br />
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>netServiceBrowser:</sel>
          <arg type="NSNetServiceBrowser*">aNetServiceBrowser</arg>
          <sel>didNotSearch:</sel>
          <arg type="NSDictionary*">errorDict</arg>
          <desc>
            Notifies the delegate that the search was
            unsuccessful.
            <p>
              <strong>See also:</strong> <br />
              <ref type="method" id="-netServiceBrowserWillSearch:">
                -netServiceBrowserWillSearch:
              </ref>
              <br />
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>netServiceBrowser:</sel>
          <arg type="NSNetServiceBrowser*">aNetServiceBrowser</arg>
          <sel>didRemoveDomain:</sel>
          <arg type="NSString*">domainString</arg>
          <sel>moreComing:</sel>
          <arg type="BOOL">moreComing</arg>
          <desc>
            Notifies the delegate that a domain has become
            unavailable.
            <p>
              <strong>See also:</strong> <br /> <br />
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>netServiceBrowser:</sel>
          <arg type="NSNetServiceBrowser*">aNetServiceBrowser</arg>
          <sel>didRemoveService:</sel>
          <arg type="NSNetService*">aNetService</arg>
          <sel>moreComing:</sel>
          <arg type="BOOL">moreComing</arg>
          <desc>
            Notifies the delegate that a service has become
            unavailable.
            <p>
              <strong>See also:</strong> <br /> <br />
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>netServiceBrowserDidStopSearch:</sel>
          <arg type="NSNetServiceBrowser*">aNetServiceBrowser</arg>
          <desc>
            Notifies the delegate that the search was stopped.
            <p>
              <strong>See also:</strong> <br />
              <ref type="method" id="-stop" class="NSNetServiceBrowser">[NSNetServiceBrowser -stop]</ref> <br />
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>netServiceBrowserWillSearch:</sel>
          <arg type="NSNetServiceBrowser*">aNetServiceBrowser</arg>
          <desc>
            Notifies the delegate that the search is about to
            begin.
            <p>
              <strong>See also:</strong> <br />
              <ref type="method" id="-netServiceBrowser:didNotSearch:">-netServiceBrowser:didNotSearch:</ref> <br />
            </p>
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSObject(NSNetServiceDelegateMethods)
        informal protocol
      </heading>
      <category name="NSNetServiceDelegateMethods" class="NSObject" ovadd="1.0.0">
        <declared>Foundation/NSNetServices.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="void" ovadd="10.9.0">
          <sel>netService:</sel>
          <arg type="NSNetService*">sender</arg>
          <sel>didAcceptConnectionWithInputStream:</sel>
          <arg type="NSInputStream*">inputStream</arg>
          <sel>outputStream:</sel>
          <arg type="NSOutputStream*">outputStream</arg>
          <desc>
            Notifies the delegate that the service, which must
            have been published with option
            NSNetServiceListenForConnections,
            received a new connection. In order to communicate
            with the connecting client, you must
            <ref type="method" id="-open">
              -open
            </ref>
            the streams and schedule them with a runloop. To reject
            a connection, just
            <ref type="method" id="-open">
              -open
            </ref>
            and immediately
            <ref type="method" id="-close">
              -close
            </ref>
            both streams.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>netService:</sel>
          <arg type="NSNetService*">sender</arg>
          <sel>didNotPublish:</sel>
          <arg type="NSDictionary*">errorDict</arg>
          <desc>
            Notifies the delegate that the service could not
            get published.
            <p>
              <strong>See also:</strong> <br />
              <ref type="method" id="-publish" class="NSNetService">
                [NSNetService -publish]
              </ref>
              <br />
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>netService:</sel>
          <arg type="NSNetService*">sender</arg>
          <sel>didNotResolve:</sel>
          <arg type="NSDictionary*">errorDict</arg>
          <desc>
            Notifies the delegate that the service could not
            get resolved.
            <p>
              <strong>See also:</strong> <br />
              <ref type="method" id="-resolveWithTimeout:" class="NSNetService">[NSNetService -resolveWithTimeout:]</ref> <br />
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>netService:</sel>
          <arg type="NSNetService*">sender</arg>
          <sel>didUpdateTXTRecordData:</sel>
          <arg type="NSData*">data</arg>
          <desc>
            Notifies the delegate that the TXT record has been
            updated.
            <p>
              <strong>See also:</strong> <br />
              <ref type="method" id="-startMonitoring" class="NSNetService">[NSNetService -startMonitoring]</ref> <br /> <ref type="method" id="-stopMonitoring" class="NSNetService">[NSNetService -stopMonitoring]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>netServiceDidPublish:</sel>
          <arg type="NSNetService*">sender</arg>
          <desc>
            Notifies the delegate that the service was
            successfully published.
            <p>
              <strong>See also:</strong> <br />
              <ref type="method" id="-publish" class="NSNetService">
                [NSNetService -publish]
              </ref>
              <br />
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>netServiceDidResolveAddress:</sel>
          <arg type="NSNetService*">sender</arg>
          <desc>
            Notifies the delegate that the service was
            resolved.
            <p>
              <strong>See also:</strong> <br />
              <ref type="method" id="-resolveWithTimeout:" class="NSNetService">[NSNetService -resolveWithTimeout:]</ref> <br />
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>netServiceDidStop:</sel>
          <arg type="NSNetService*">sender</arg>
          <desc>
            Notifies the delegate that the request was
            stopped.
            <p>
              <strong>See also:</strong> <br />
              <ref type="method" id="-stop" class="NSNetService">
                [NSNetService -stop]
              </ref>
              <br />
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>netServiceWillPublish:</sel>
          <arg type="NSNetService*">sender</arg>
          <desc>
            Notifies the delegate that the network is ready to
            publish the service.
            <p>
              <strong>See also:</strong> <br />
              <ref type="method" id="-publish" class="NSNetService">
                [NSNetService -publish]
              </ref>
              <br />
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>netServiceWillResolve:</sel>
          <arg type="NSNetService*">sender</arg>
          <desc>
            Notifies the delegate that the network is ready to
            resolve the service.
            <p>
              <strong>See also:</strong> <br />
              <ref type="method" id="-resolveWithTimeout:" class="NSNetService">[NSNetService -resolveWithTimeout:]</ref> <br />
            </p>
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSNetServiceBrowserDelegate
        protocol
      </heading>
      <protocol name="NSNetServiceBrowserDelegate" ovadd="1.0.0">
        <declared>Foundation/NSNetServices.h</declared>
        <desc>
          <p>
            This protocol must be adopted by any class wishing to
            implement an
            <ref type="class" id="NSNetServiceBrowser">NSNetServiceBrowser</ref>delegate.</p>
        </desc>
      </protocol>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSNetServiceDelegate
        protocol
      </heading>
      <protocol name="NSNetServiceDelegate" ovadd="1.0.0">
        <declared>Foundation/NSNetServices.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </protocol>
    </chapter>
  </body>
</gsdoc>
