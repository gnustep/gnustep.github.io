<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSDebug" stylesheeturl="gnustepStyle" up="Base">
  <head>
    <title>NSDebug utilities reference</title>
    <author name="Richard Frith-Macdonald">
      <email address="richard@brainstorm.co.uk">
        richard@brainstorm.co.uk
      </email>
    </author>
    <author name="Nicola Pero">
      <email address="n.pero@mi.flashnet.it">
        n.pero@mi.flashnet.it
      </email>
    </author>
    <date>Generated at 2024-11-07 16:52:01 -0500</date>
    <copy>
      1997,1999,2000,2001 Free Software Foundation,
      Inc.
    </copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the GSLogDelegate protocol
      </heading>
      <protocol name="GSLogDelegate" ovadd="1.0.0">
        <declared>Foundation/NSDebug.h</declared>
        <conform>NSObject</conform>
        <desc>
          Protocol for a delegate, set as an extension in some
          classes, to handle debug logging of low level I/O.
          The rationale for this protocol is that on occasion debug
          logging may be required, but the data being logged
          may contain sensitive information which should not be
          writtent to file. In that situation, the delegate
          may filter/mask the sensitive information from the logs
          by taking over the simpel writing to stderr that the
          inbuilt debug logging provides.
        </desc>
        <method type="BOOL" ovadd="1.0.0">
          <sel>getBytes:</sel>
          <arg type="const uint8_t*">bytes</arg>
          <sel>ofLength:</sel>
          <arg type="NSUInteger">length</arg>
          <sel>byHandle:</sel>
          <arg type="NSObject*">handle</arg>
          <desc>
            Method sent to the delegate to ask it to log a chunk
            of data that has been read. The delegate should return
            <code>YES</code> if it has handled the logging,
            <code>NO</code> if it wants the default mechanism to
            be used. <br /> The <var>handle</var> is the object
            which is performing the read operation.
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>putBytes:</sel>
          <arg type="const uint8_t*">bytes</arg>
          <sel>ofLength:</sel>
          <arg type="NSUInteger">length</arg>
          <sel>byHandle:</sel>
          <arg type="NSObject*">handle</arg>
          <desc>
            Method sent to the delegate to ask it to log a chunk
            of data that has been written (or is immediately going
            to be written). The delegate should return
            <code>YES</code> if it has handled the logging,
            <code>NO</code> if it wants the default logging
            mechanism to be used. <br /> The
            <var>handle</var> is the object which is performing
            the write operation.
          </desc>
        </method>
      </protocol>
    </chapter>
  </body>
</gsdoc>
