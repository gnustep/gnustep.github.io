{
    author = {
	"Michael Pakhantsov" = (
	    "mishel@berest.dp.ua"
	);
	"Richard Frith-Macdonald" = (
	    "rfm@gnu.org"
	);
    };
    categories = {
	GCObject = {
	    Extra = GCObject;
	};
	GSXMLDocument = {
	    XSLT = GSXML;
	};
	GSXMLRPC = {
	    Delegate = GSXML;
	};
	NSArray = {
	    GNUstepBase = "NSArray+GNUstepBase";
	};
	NSAttributedString = {
	    GNUstepBase = "NSAttributedString+GNUstepBase";
	};
	NSBundle = {
	    GNUstepBase = "NSBundle+GNUstepBase";
	};
	NSCalendarDate = {
	    GNUstepBase = "NSCalendarDate+GNUstepBase";
	};
	NSData = {
	    GNUstepBase = "NSData+GNUstepBase";
	};
	NSFileHandle = {
	    GNUstepBase = "NSFileHandle+GNUstepBase";
	};
	NSMutableString = {
	    GNUstepBase = "NSMutableString+GNUstepBase";
	};
	NSNumber = {
	    GNUstepBase = "NSNumber+GNUstepBase";
	};
	NSObject = {
	    GNUstepBase = "NSObject+GNUstepBase";
	    GSAtExit = "NSObject+GNUstepBase";
	    GSCleanup = "NSObject+GNUstepBase";
	    GSMimeSMTPClient = GSMime;
	    MemoryFootprint = "NSObject+GNUstepBase";
	};
	NSProcessInfo = {
	    GNUstepBase = "NSProcessInfo+GNUstepBase";
	};
	NSString = {
	    GNUstepBase = "NSString+GNUstepBase";
	    GSXML = GSXML;
	};
	NSTask = {
	    GNUstepBase = "NSTask+GNUstepBase";
	};
	NSThread = {
	    GNUstepBase = "NSThread+GNUstepBase";
	};
	NSURL = {
	    GNUstepBase = "NSURL+GNUstepBase";
	    GNUstepBaseAdditions = "NSURL+GNUstepBase";
	};
    };
    category = {
	"GCObject(Extra)" = GCObject;
	"GSXMLDocument(XSLT)" = GSXML;
	"GSXMLRPC(Delegate)" = GSXML;
	"NSArray(GNUstepBase)" = "NSArray+GNUstepBase";
	"NSAttributedString(GNUstepBase)" = "NSAttributedString+GNUstepBase";
	"NSBundle(GNUstepBase)" = "NSBundle+GNUstepBase";
	"NSCalendarDate(GNUstepBase)" = "NSCalendarDate+GNUstepBase";
	"NSData(GNUstepBase)" = "NSData+GNUstepBase";
	"NSFileHandle(GNUstepBase)" = "NSFileHandle+GNUstepBase";
	"NSMutableString(GNUstepBase)" = "NSMutableString+GNUstepBase";
	"NSNumber(GNUstepBase)" = "NSNumber+GNUstepBase";
	"NSObject(GNUstepBase)" = "NSObject+GNUstepBase";
	"NSObject(GSAtExit)" = "NSObject+GNUstepBase";
	"NSObject(GSCleanup)" = "NSObject+GNUstepBase";
	"NSObject(GSMimeSMTPClient)" = GSMime;
	"NSObject(MemoryFootprint)" = "NSObject+GNUstepBase";
	"NSProcessInfo(GNUstepBase)" = "NSProcessInfo+GNUstepBase";
	"NSString(GNUstepBase)" = "NSString+GNUstepBase";
	"NSString(GSXML)" = GSXML;
	"NSTask(GNUstepBase)" = "NSTask+GNUstepBase";
	"NSThread(GNUstepBase)" = "NSThread+GNUstepBase";
	"NSURL(GNUstepBase)" = "NSURL+GNUstepBase";
	"NSURL(GNUstepBaseAdditions)" = "NSURL+GNUstepBase";
    };
    class = {
	GCArray = GCObject;
	GCDictionary = GCObject;
	GCMutableArray = GCObject;
	GCMutableDictionary = GCObject;
	GCObject = GCObject;
	GSHTMLParser = GSXML;
	GSHTMLSAXHandler = GSXML;
	GSMimeCodingContext = GSMime;
	GSMimeDocument = GSMime;
	GSMimeHeader = GSMime;
	GSMimeParser = GSMime;
	GSMimeSMTPClient = GSMime;
	GSMimeSerializer = GSMime;
	GSSAXHandler = GSXML;
	GSTLSCertificateList = GSTLS;
	GSTLSCredentials = GSTLS;
	GSTLSDHParams = GSTLS;
	GSTLSObject = GSTLS;
	GSTLSPrivateKey = GSTLS;
	GSTLSSession = GSTLS;
	GSTreeSAXHandler = GSXML;
	GSXMLAttribute = GSXML;
	GSXMLDocument = GSXML;
	GSXMLNamespace = GSXML;
	GSXMLNode = GSXML;
	GSXMLParser = GSXML;
	GSXMLRPC = GSXML;
	GSXPathBoolean = GSXML;
	GSXPathContext = GSXML;
	GSXPathNodeSet = GSXML;
	GSXPathNumber = GSXML;
	GSXPathObject = GSXML;
	GSXPathString = GSXML;
    };
    classvars = {
	GCArray = {
	    "_contents" = GCObject;
	    "_count" = GCObject;
	    "_isGCObject" = GCObject;
	    gc = GCObject;
	};
	GCDictionary = {
	    "_map" = GCObject;
	    gc = GCObject;
	};
	GCMutableArray = {
	    "_contents" = GCObject;
	    "_count" = GCObject;
	    "_isGCObject" = GCObject;
	    "_maxCount" = GCObject;
	    gc = GCObject;
	};
	GCMutableDictionary = {
	    "_map" = GCObject;
	    gc = GCObject;
	};
	GCObject = {
	    gc = GCObject;
	};
	GSMimeCodingContext = {
	    atEnd = GSMime;
	};
	GSMimeDocument = {
	    "_unused" = GSMime;
	    content = GSMime;
	    headers = GSMime;
	};
	GSMimeHeader = {
	    lower = GSMime;
	    name = GSMime;
	    objects = GSMime;
	    params = GSMime;
	    value = GSMime;
	};
	GSMimeParser = {
	    "_defaultEncoding" = GSMime;
	    "_unused" = GSMime;
	    boundary = GSMime;
	    bytes = GSMime;
	    child = GSMime;
	    context = GSMime;
	    data = GSMime;
	    dataEnd = GSMime;
	    document = GSMime;
	    expect = GSMime;
	    input = GSMime;
	    lineEnd = GSMime;
	    lineStart = GSMime;
	    rawBodyLength = GSMime;
	    sectionStart = GSMime;
	};
	GSMimeSerializer = {
	    dataEncoding = GSMime;
	    foldAt = GSMime;
	    textEncoding = GSMime;
	    use8bit = GSMime;
	};
	GSSAXHandler = {
	    isHtmlHandler = GSXML;
	    lib = GSXML;
	    parser = GSXML;
	};
	GSTLSCertificateList = {
	    count = GSTLS;
	    crts = GSTLS;
	    path = GSTLS;
	    when = GSTLS;
	};
	GSTLSCredentials = {
	    certcred = GSTLS;
	    dhParams = GSTLS;
	    freeCred = GSTLS;
	    key = GSTLS;
	    list = GSTLS;
	    name = GSTLS;
	    trust = GSTLS;
	    when = GSTLS;
	};
	GSTLSDHParams = {
	    params = GSTLS;
	    path = GSTLS;
	    when = GSTLS;
	};
	GSTLSPrivateKey = {
	    key = GSTLS;
	    password = GSTLS;
	    path = GSTLS;
	    when = GSTLS;
	};
	GSTLSSession = {
	    active = GSTLS;
	    created = GSTLS;
	    credentials = GSTLS;
	    debug = GSTLS;
	    handle = GSTLS;
	    handshake = GSTLS;
	    issuer = GSTLS;
	    opts = GSTLS;
	    outgoing = GSTLS;
	    owner = GSTLS;
	    problem = GSTLS;
	    session = GSTLS;
	    setup = GSTLS;
	};
	GSXMLDocument = {
	    "_ownsLib" = GSXML;
	    "_parent" = GSXML;
	    lib = GSXML;
	};
	GSXMLNamespace = {
	    "_parent" = GSXML;
	    lib = GSXML;
	};
	GSXMLNode = {
	    "_parent" = GSXML;
	    lib = GSXML;
	};
	GSXMLParser = {
	    lib = GSXML;
	    messages = GSXML;
	    saxHandler = GSXML;
	    src = GSXML;
	};
	GSXPathContext = {
	    "_document" = GSXML;
	    "_lib" = GSXML;
	};
	GSXPathObject = {
	    "_context" = GSXML;
	    "_lib" = GSXML;
	};
    };
    constant = {
	GSMimeErrorDomain = TypesAndConstants;
	GSTLSCAFile = TypesAndConstants;
	GSTLSCertificateFile = TypesAndConstants;
	GSTLSCertificateKeyFile = TypesAndConstants;
	GSTLSCertificateKeyPassword = TypesAndConstants;
	GSTLSDebug = TypesAndConstants;
	GSTLSIssuers = TypesAndConstants;
	GSTLSOwners = TypesAndConstants;
	GSTLSPriority = TypesAndConstants;
	GSTLSRemoteHosts = TypesAndConstants;
	GSTLSRevokeFile = TypesAndConstants;
	GSTLSServerName = TypesAndConstants;
	GSTLSVerify = TypesAndConstants;
    };
    function = {
	GSAutoreleasedBuffer = Functions;
	GSCGetInstanceVariableDefinition = Functions;
	GSClassFromName = Functions;
	GSClassList = Functions;
	GSClassNameFromObject = Functions;
	GSClassSwizzle = Functions;
	GSCurrentThread = Functions;
	GSCurrentThreadDictionary = Functions;
	GSDebugFunctionMsg = Functions;
	GSDebugMethodMsg = Functions;
	GSDebugSet = Functions;
	GSDefaultLanguageLocale = Functions;
	GSDomainFromDefaultLocale = Functions;
	GSEncodingForRegistry = Functions;
	GSEncodingFromLocale = Functions;
	GSFindNamedFile = Functions;
	GSFlushMethodCacheForClass = Functions;
	GSFromUnicode = Functions;
	GSGetMethod = Functions;
	GSIArrayAddItem = Functions;
	GSIArrayAddItemNoRetain = Functions;
	GSIArrayCapacity = Functions;
	GSIArrayCheckSort = Functions;
	GSIArrayClear = Functions;
	GSIArrayCopyWithZone = Functions;
	GSIArrayCount = Functions;
	GSIArrayEmpty = Functions;
	GSIArrayGrow = Functions;
	GSIArrayGrowTo = Functions;
	GSIArrayInitWithZoneAndCapacity = Functions;
	GSIArrayInitWithZoneAndStaticCapacity = Functions;
	GSIArrayInsertItem = Functions;
	GSIArrayInsertItemNoRetain = Functions;
	GSIArrayInsertSorted = Functions;
	GSIArrayInsertSortedNoRetain = Functions;
	GSIArrayInsertionPosition = Functions;
	GSIArrayItemAtIndex = Functions;
	GSIArrayItems = Functions;
	GSIArrayLastItem = Functions;
	GSIArrayRemoveAllItems = Functions;
	GSIArrayRemoveItemAtIndex = Functions;
	GSIArrayRemoveItemAtIndexNoRelease = Functions;
	GSIArrayRemoveItemsFromIndex = Functions;
	GSIArrayRemoveLastItem = Functions;
	GSIArraySearch = Functions;
	GSIArraySetItemAtIndex = Functions;
	GSIArraySize = Functions;
	GSIMapAddKey = Functions;
	GSIMapAddKeyNoRetain = Functions;
	GSIMapAddNodeToBucket = Functions;
	GSIMapAddNodeToMap = Functions;
	GSIMapAddPair = Functions;
	GSIMapAddPairNoRetain = Functions;
	GSIMapBucketForKey = Functions;
	GSIMapCleanMap = Functions;
	GSIMapCountByEnumeratingWithStateObjectsCount = Functions;
	GSIMapEmptyMap = Functions;
	GSIMapEndEnumerator = Functions;
	GSIMapEnumeratorBucket = Functions;
	GSIMapEnumeratorForMap = Functions;
	GSIMapEnumeratorNextNode = Functions;
	GSIMapFirstNode = Functions;
	GSIMapFreeNode = Functions;
	GSIMapInitWithZoneAndCapacity = Functions;
	GSIMapLinkNodeIntoBucket = Functions;
	GSIMapMoreNodes = Functions;
	GSIMapNodeForKey = Functions;
	GSIMapNodeForKeyInBucket = Functions;
	GSIMapNodeForSimpleKey = Functions;
	GSIMapPickBucket = Functions;
	GSIMapRemangleBuckets = Functions;
	GSIMapRemoveAndFreeNode = Functions;
	GSIMapRemoveKey = Functions;
	GSIMapRemoveNodeFromBucket = Functions;
	GSIMapRemoveNodeFromMap = Functions;
	GSIMapRemoveWeak = Functions;
	GSIMapResize = Functions;
	GSIMapRightSizeMap = Functions;
	GSIMapSize = Functions;
	GSIMapUnlinkNodeFromBucket = Functions;
	GSLanguageFromLocale = Functions;
	GSLanguagesFromLocale = Functions;
	GSLastErrorStr = Functions;
	GSLocaleVariants = Functions;
	GSNameFromClass = Functions;
	GSNameFromSelector = Functions;
	GSObjCAddClassBehavior = Functions;
	GSObjCAddClassOverride = Functions;
	GSObjCAddClasses = Functions;
	GSObjCAddMethods = Functions;
	GSObjCAllSubclassesOfClass = Functions;
	GSObjCBehaviorDebug = Functions;
	GSObjCClass = Functions;
	GSObjCDirectSubclassesOfClass = Functions;
	GSObjCFindVariable = Functions;
	GSObjCGetInstanceVariableDefinition = Functions;
	GSObjCGetVal = Functions;
	GSObjCGetVariable = Functions;
	GSObjCIsClass = Functions;
	GSObjCIsInstance = Functions;
	GSObjCIsKindOf = Functions;
	GSObjCMakeClass = Functions;
	GSObjCMethodNames = Functions;
	GSObjCSetVal = Functions;
	GSObjCSetVariable = Functions;
	GSObjCSuper = Functions;
	GSObjCVariableNames = Functions;
	GSObjCVersion = Functions;
	GSPathHandling = Functions;
	GSPrintf = Functions;
	GSProtocolFromName = Functions;
	GSProtocolGetMethodDescriptionRecursive = Functions;
	GSRegisterProtocol = Functions;
	GSSelectorFromName = Functions;
	GSSelectorFromNameAndTypes = Functions;
	GSSelectorTypesMatch = Functions;
	GSSetLocale = Functions;
	GSSetLocaleC = Functions;
	GSSkipTypeQualifierAndLayoutInfo = Functions;
	GSToUnicode = Functions;
	GSTypesFromSelector = Functions;
	GSUnicode = Functions;
	"_Block_copy" = Functions;
	"_Block_release" = Functions;
	"gs_consumed" = Functions;
	"uni_cop" = Functions;
	"uni_is_decomp" = Functions;
	"uni_isnonsp" = Functions;
	"uni_tolower" = Functions;
	"uni_toupper" = Functions;
    };
    ivariable = {
	"_contents" = {
	    GCArray = GCObject;
	    GCMutableArray = GCObject;
	};
	"_context" = {
	    GSXPathObject = GSXML;
	};
	"_count" = {
	    GCArray = GCObject;
	    GCMutableArray = GCObject;
	};
	"_defaultEncoding" = {
	    GSMimeParser = GSMime;
	};
	"_document" = {
	    GSXPathContext = GSXML;
	};
	"_isGCObject" = {
	    GCArray = GCObject;
	    GCMutableArray = GCObject;
	};
	"_lib" = {
	    GSXPathContext = GSXML;
	    GSXPathObject = GSXML;
	};
	"_map" = {
	    GCDictionary = GCObject;
	    GCMutableDictionary = GCObject;
	};
	"_maxCount" = {
	    GCMutableArray = GCObject;
	};
	"_ownsLib" = {
	    GSXMLDocument = GSXML;
	};
	"_parent" = {
	    GSXMLDocument = GSXML;
	    GSXMLNamespace = GSXML;
	    GSXMLNode = GSXML;
	};
	"_unused" = {
	    GSMimeDocument = GSMime;
	    GSMimeParser = GSMime;
	};
	active = {
	    GSTLSSession = GSTLS;
	};
	atEnd = {
	    GSMimeCodingContext = GSMime;
	};
	boundary = {
	    GSMimeParser = GSMime;
	};
	bytes = {
	    GSMimeParser = GSMime;
	};
	certcred = {
	    GSTLSCredentials = GSTLS;
	};
	child = {
	    GSMimeParser = GSMime;
	};
	content = {
	    GSMimeDocument = GSMime;
	};
	context = {
	    GSMimeParser = GSMime;
	};
	count = {
	    GSTLSCertificateList = GSTLS;
	};
	created = {
	    GSTLSSession = GSTLS;
	};
	credentials = {
	    GSTLSSession = GSTLS;
	};
	crts = {
	    GSTLSCertificateList = GSTLS;
	};
	data = {
	    GSMimeParser = GSMime;
	};
	dataEncoding = {
	    GSMimeSerializer = GSMime;
	};
	dataEnd = {
	    GSMimeParser = GSMime;
	};
	debug = {
	    GSTLSSession = GSTLS;
	};
	dhParams = {
	    GSTLSCredentials = GSTLS;
	};
	document = {
	    GSMimeParser = GSMime;
	};
	expect = {
	    GSMimeParser = GSMime;
	};
	foldAt = {
	    GSMimeSerializer = GSMime;
	};
	freeCred = {
	    GSTLSCredentials = GSTLS;
	};
	gc = {
	    GCArray = GCObject;
	    GCDictionary = GCObject;
	    GCMutableArray = GCObject;
	    GCMutableDictionary = GCObject;
	    GCObject = GCObject;
	};
	handle = {
	    GSTLSSession = GSTLS;
	};
	handshake = {
	    GSTLSSession = GSTLS;
	};
	headers = {
	    GSMimeDocument = GSMime;
	};
	input = {
	    GSMimeParser = GSMime;
	};
	isHtmlHandler = {
	    GSSAXHandler = GSXML;
	};
	issuer = {
	    GSTLSSession = GSTLS;
	};
	key = {
	    GSTLSCredentials = GSTLS;
	    GSTLSPrivateKey = GSTLS;
	};
	lib = {
	    GSSAXHandler = GSXML;
	    GSXMLDocument = GSXML;
	    GSXMLNamespace = GSXML;
	    GSXMLNode = GSXML;
	    GSXMLParser = GSXML;
	};
	lineEnd = {
	    GSMimeParser = GSMime;
	};
	lineStart = {
	    GSMimeParser = GSMime;
	};
	list = {
	    GSTLSCredentials = GSTLS;
	};
	lower = {
	    GSMimeHeader = GSMime;
	};
	messages = {
	    GSXMLParser = GSXML;
	};
	name = {
	    GSMimeHeader = GSMime;
	    GSTLSCredentials = GSTLS;
	};
	objects = {
	    GSMimeHeader = GSMime;
	};
	opts = {
	    GSTLSSession = GSTLS;
	};
	outgoing = {
	    GSTLSSession = GSTLS;
	};
	owner = {
	    GSTLSSession = GSTLS;
	};
	params = {
	    GSMimeHeader = GSMime;
	    GSTLSDHParams = GSTLS;
	};
	parser = {
	    GSSAXHandler = GSXML;
	};
	password = {
	    GSTLSPrivateKey = GSTLS;
	};
	path = {
	    GSTLSCertificateList = GSTLS;
	    GSTLSDHParams = GSTLS;
	    GSTLSPrivateKey = GSTLS;
	};
	problem = {
	    GSTLSSession = GSTLS;
	};
	rawBodyLength = {
	    GSMimeParser = GSMime;
	};
	saxHandler = {
	    GSXMLParser = GSXML;
	};
	sectionStart = {
	    GSMimeParser = GSMime;
	};
	session = {
	    GSTLSSession = GSTLS;
	};
	setup = {
	    GSTLSSession = GSTLS;
	};
	src = {
	    GSXMLParser = GSXML;
	};
	textEncoding = {
	    GSMimeSerializer = GSMime;
	};
	trust = {
	    GSTLSCredentials = GSTLS;
	};
	use8bit = {
	    GSMimeSerializer = GSMime;
	};
	value = {
	    GSMimeHeader = GSMime;
	};
	when = {
	    GSTLSCertificateList = GSTLS;
	    GSTLSCredentials = GSTLS;
	    GSTLSDHParams = GSTLS;
	    GSTLSPrivateKey = GSTLS;
	};
    };
    macro = {
	ALog = Functions;
	ASSIGN = Functions;
	ASSIGNCOPY = Functions;
	ASSIGNMUTABLECOPY = Functions;
	AUTORELEASE = Functions;
	"BLOCK_SCOPE" = Functions;
	"CALL_BLOCK" = Functions;
	"CALL_BLOCK_NO_ARGS" = Functions;
	"CALL_BLOCK_RET" = Functions;
	"CALL_BLOCK_RET_NO_ARGS" = Functions;
	"CALL_NON_NULL_BLOCK" = Functions;
	"CALL_NON_NULL_BLOCK_NO_ARGS" = Functions;
	"CHECK_INDEX_RANGE_ERROR" = Functions;
	"CREATE_AUTORELEASE_POOL" = Functions;
	DEALLOC = Functions;
	"DEFINE_BLOCK_TYPE" = Functions;
	"DEFINE_BLOCK_TYPE_NO_ARGS" = Functions;
	DESTROY = Functions;
	DLog = Functions;
	"ENTER_POOL" = Functions;
	GSLocalizedStaticString = Functions;
	GSOnceFLog = Functions;
	GSOnceMLog = Functions;
	"GS_API_LATEST" = Functions;
	"GS_API_MACOSX" = Functions;
	"GS_API_NONE" = Functions;
	"GS_API_OPENSTEP" = Functions;
	"GS_API_OSSPEC" = Functions;
	"GS_API_VERSION" = Functions;
	"GS_CLANG_MINREQ" = Functions;
	"GS_DEPRECATED_FUNC" = Functions;
	"GS_EXPOSE" = Functions;
	"GS_GCC_MINREQ" = Functions;
	"GS_LOCALISATION_BUNDLE" = Functions;
	"GS_MAX_OBJECTS_FROM_STACK" = Functions;
	"GS_NORETURN_METHOD" = Functions;
	"GS_PART_MAP_ENUMERATOR" = Functions;
	"GS_RANGE_CHECK" = Functions;
	"GS_UNIMPLEMENTED" = Functions;
	"GS_UNUSED_ARG" = Functions;
	"GS_UNUSED_FUNC" = Functions;
	"GS_UNUSED_IVAR" = Functions;
	"GS_USEIDLIST" = Functions;
	"GS_USEIDPAIRLIST" = Functions;
	"IF_NO_ARC" = Functions;
	"IF_NO_GC" = Functions;
	"LEAVE_POOL" = Functions;
	"MAC_OS_X_VERSION_MAX_ALLOWED" = Functions;
	NSDebugFLLog = Functions;
	NSDebugFLog = Functions;
	NSDebugFRLog = Functions;
	NSDebugLLog = Functions;
	NSDebugLog = Functions;
	NSDebugMLLog = Functions;
	NSDebugMLog = Functions;
	NSDebugMRLog = Functions;
	NSWarnFLog = Functions;
	NSWarnLog = Functions;
	NSWarnMLog = Functions;
	"NS_CONSUMED" = Functions;
	"NS_CONSUMES_SELF" = Functions;
	"NS_RETURNS_NOT_RETAINED" = Functions;
	"NS_RETURNS_RETAINED" = Functions;
	"OS_API_VERSION" = Functions;
	"RECREATE_AUTORELEASE_POOL" = Functions;
	RELEASE = Functions;
	RETAIN = Functions;
	"TEST_AUTORELEASE" = Functions;
	"TEST_RELEASE" = Functions;
	"TEST_RETAIN" = Functions;
	"_" = Functions;
	"__" = Functions;
	"__has_feature" = Functions;
    };
    method = {
	"+atExit" = {
	    "NSObject(GSAtExit)" = "NSObject+GNUstepBase";
	};
	"+binarySerializer" = {
	    GSMimeSerializer = GSMime;
	};
	"+charsetForXml:" = {
	    GSMimeDocument = GSMime;
	};
	"+charsetFromEncoding:" = {
	    GSMimeDocument = GSMime;
	};
	"+contentSizeOf:excluding:" = {
	    "NSObject(MemoryFootprint)" = "NSObject+GNUstepBase";
	};
	"+credentialsFromCAFile:defaultCAFile:revokeFile:defaultRevokeFile:certificateFile:certificateKeyFile:certificateKeyPassword:asClient:debug:" = {
	    GSTLSCredentials = GSTLS;
	};
	"+current" = {
	    GSTLSDHParams = GSTLS;
	};
	"+dataForTLSFile:" = {
	    GSTLSObject = GSTLS;
	};
	"+dataWithRandomBytesOfLength:" = {
	    "NSData(GNUstepBase)" = "NSData+GNUstepBase";
	};
	"+decodeBase64:" = {
	    GSMimeDocument = GSMime;
	};
	"+decodeBase64String:" = {
	    GSMimeDocument = GSMime;
	};
	"+descriptionFromType:" = {
	    GSXMLNamespace = GSXML;
	    GSXMLNode = GSXML;
	};
	"+documentFromData:" = {
	    GSMimeParser = GSMime;
	};
	"+documentWithContent:type:name:" = {
	    GSMimeDocument = GSMime;
	};
	"+documentWithVersion:" = {
	    GSXMLDocument = GSXML;
	};
	"+encodeBase64:" = {
	    GSMimeDocument = GSMime;
	};
	"+encodeBase64String:" = {
	    GSMimeDocument = GSMime;
	};
	"+encodingFromCharset:" = {
	    GSMimeDocument = GSMime;
	};
	"+executableExtensions" = {
	    "NSTask(GNUstepBase)" = "NSTask+GNUstepBase";
	};
	"+executablePath:" = {
	    "NSTask(GNUstepBase)" = "NSTask+GNUstepBase";
	};
	"+fileHandleAsServerAtAddress:service:protocol:" = {
	    "NSFileHandle(GNUstepBase)" = "NSFileHandle+GNUstepBase";
	};
	"+gcCollectGarbage" = {
	    GCObject = GCObject;
	};
	"+gcIsCollecting" = {
	    GCObject = GCObject;
	};
	"+gcObjectWillBeDeallocated:" = {
	    GCObject = GCObject;
	};
	"+generate" = {
	    GSTLSDHParams = GSTLS;
	};
	"+handler" = {
	    GSSAXHandler = GSXML;
	};
	"+headerWithName:value:parameters:" = {
	    GSMimeHeader = GSMime;
	};
	"+keyFromFile:withPassword:" = {
	    GSTLSPrivateKey = GSTLS;
	};
	"+launchPathForTool:" = {
	    "NSTask(GNUstepBase)" = "NSTask+GNUstepBase";
	};
	"+leak:" = {
	    "NSObject(GSCleanup)" = "NSObject+GNUstepBase";
	};
	"+leakAt:" = {
	    "NSObject(GSCleanup)" = "NSObject+GNUstepBase";
	};
	"+listFromFile:" = {
	    GSTLSCertificateList = GSTLS;
	};
	"+loadEntity:at:" = {
	    GSXMLParser = GSXML;
	};
	"+makeQuoted:always:" = {
	    GSMimeHeader = GSMime;
	};
	"+makeToken:" = {
	    GSMimeHeader = GSMime;
	};
	"+makeToken:preservingCase:" = {
	    GSMimeHeader = GSMime;
	};
	"+mimeParser" = {
	    GSMimeParser = GSMime;
	};
	"+paramsFromFile:" = {
	    GSTLSDHParams = GSTLS;
	};
	"+parser" = {
	    GSXMLParser = GSXML;
	};
	"+parserWithContentsOfFile:" = {
	    GSXMLParser = GSXML;
	};
	"+parserWithContentsOfURL:" = {
	    GSXMLParser = GSXML;
	};
	"+parserWithData:" = {
	    GSXMLParser = GSXML;
	};
	"+parserWithSAXHandler:" = {
	    GSXMLParser = GSXML;
	};
	"+parserWithSAXHandler:withContentsOfFile:" = {
	    GSXMLParser = GSXML;
	};
	"+parserWithSAXHandler:withContentsOfURL:" = {
	    GSXMLParser = GSXML;
	};
	"+parserWithSAXHandler:withData:" = {
	    GSXMLParser = GSXML;
	};
	"+pathForLibraryResource:ofType:inDirectory:" = {
	    "NSBundle(GNUstepBase)" = "NSBundle+GNUstepBase";
	};
	"+registerAtExit" = {
	    "NSObject(GSCleanup)" = "NSObject+GNUstepBase";
	};
	"+registerAtExit:" = {
	    "NSObject(GSCleanup)" = "NSObject+GNUstepBase";
	};
	"+selfSigned:" = {
	    GSTLSCredentials = GSTLS;
	};
	"+sessionWithOptions:direction:transport:push:pull:" = {
	    GSTLSSession = GSTLS;
	};
	"+setDTDs:" = {
	    GSXMLParser = GSXML;
	};
	"+setData:forTLSFile:" = {
	    GSTLSObject = GSTLS;
	};
	"+setShouldCleanUp:" = {
	    "NSObject(GSCleanup)" = "NSObject+GNUstepBase";
	};
	"+shouldCleanUp" = {
	    "NSObject(GSCleanup)" = "NSObject+GNUstepBase";
	};
	"+smtp7bitSerializer" = {
	    GSMimeSerializer = GSMime;
	};
	"+stringWithFormat:arguments:" = {
	    "NSString(GNUstepBase)" = "NSString+GNUstepBase";
	};
	"+typeFromDescription:" = {
	    GSXMLNamespace = GSXML;
	    GSXMLNode = GSXML;
	};
	"+valueFromString:" = {
	    "NSNumber(GNUstepBase)" = "NSNumber+GNUstepBase";
	};
	"+xmlEncodingStringForStringEncoding:" = {
	    GSXMLParser = GSXML;
	};
	"+xsltTransformFile:stylesheet:" = {
	    "GSXMLDocument(XSLT)" = GSXML;
	};
	"+xsltTransformFile:stylesheet:params:" = {
	    "GSXMLDocument(XSLT)" = GSXML;
	};
	"+xsltTransformXml:stylesheet:" = {
	    "GSXMLDocument(XSLT)" = GSXML;
	};
	"+xsltTransformXml:stylesheet:params:" = {
	    "GSXMLDocument(XSLT)" = GSXML;
	};
	"-URLHandle:resourceDataDidBecomeAvailable:" = {
	    GSXMLRPC = GSXML;
	};
	"-URLHandle:resourceDidFailLoadingWithReason:" = {
	    GSXMLRPC = GSXML;
	};
	"-URLHandleResourceDidBeginLoading:" = {
	    GSXMLRPC = GSXML;
	};
	"-URLHandleResourceDidCancelLoading:" = {
	    GSXMLRPC = GSXML;
	};
	"-URLHandleResourceDidFinishLoading:" = {
	    GSXMLRPC = GSXML;
	};
	"-abort" = {
	    GSMimeSMTPClient = GSMime;
	};
	"-abortParsing" = {
	    GSXMLParser = GSXML;
	};
	"-active" = {
	    GSTLSSession = GSTLS;
	};
	"-addContent:" = {
	    GSMimeDocument = GSMime;
	};
	"-addHeader:" = {
	    GSMimeDocument = GSMime;
	};
	"-addHeader:value:parameters:" = {
	    GSMimeDocument = GSMime;
	};
	"-age" = {
	    GSTLSSession = GSTLS;
	};
	"-allHeaders" = {
	    GSMimeDocument = GSMime;
	};
	"-atEnd" = {
	    GSMimeCodingContext = GSMime;
	};
	"-attribute:value:" = {
	    GSSAXHandler = GSXML;
	};
	"-attributeDecl:name:type:typeDefValue:defaultValue:" = {
	    GSSAXHandler = GSXML;
	};
	"-attributedSubstringWithRange:" = {
	    "NSAttributedString(GNUstepBase)" = "NSAttributedString+GNUstepBase";
	};
	"-attributes" = {
	    GSXMLNode = GSXML;
	};
	"-booleanValue" = {
	    GSXPathBoolean = GSXML;
	};
	"-buildMethod:params:" = {
	    GSXMLRPC = GSXML;
	};
	"-buildMethodCall:params:" = {
	    GSXMLRPC = GSXML;
	};
	"-buildResponseWithFaultCode:andString:" = {
	    GSXMLRPC = GSXML;
	};
	"-buildResponseWithParams:" = {
	    GSXMLRPC = GSXML;
	};
	"-cacheKey" = {
	    "NSURL(GNUstepBaseAdditions)" = "NSURL+GNUstepBase";
	};
	"-cdataBlock:" = {
	    GSSAXHandler = GSXML;
	};
	"-certificateList" = {
	    GSTLSCertificateList = GSTLS;
	};
	"-characters:" = {
	    GSSAXHandler = GSXML;
	};
	"-columnNumber" = {
	    GSXMLParser = GSXML;
	};
	"-comment:" = {
	    GSSAXHandler = GSXML;
	};
	"-compact" = {
	    GSXMLRPC = GSXML;
	};
	"-compare:" = {
	    "NSObject(GNUstepBase)" = "NSObject+GNUstepBase";
	};
	"-completedXMLRPC:" = {
	    "GSXMLRPC(Delegate)" = GSXML;
	};
	"-content" = {
	    GSMimeDocument = GSMime;
	    GSXMLNode = GSXML;
	};
	"-contentByID:" = {
	    GSMimeDocument = GSMime;
	};
	"-contentByLocation:" = {
	    GSMimeDocument = GSMime;
	};
	"-contentByName:" = {
	    GSMimeDocument = GSMime;
	};
	"-contentFile" = {
	    GSMimeDocument = GSMime;
	};
	"-contentID" = {
	    GSMimeDocument = GSMime;
	};
	"-contentLocation" = {
	    GSMimeDocument = GSMime;
	};
	"-contentName" = {
	    GSMimeDocument = GSMime;
	};
	"-contentSubtype" = {
	    GSMimeDocument = GSMime;
	};
	"-contentType" = {
	    GSMimeDocument = GSMime;
	};
	"-contentsByName:" = {
	    GSMimeDocument = GSMime;
	};
	"-contextFor:" = {
	    GSMimeParser = GSMime;
	};
	"-convertTo7BitSafe" = {
	    GSMimeDocument = GSMime;
	};
	"-convertToBase64" = {
	    GSMimeDocument = GSMime;
	};
	"-convertToBinary" = {
	    GSMimeDocument = GSMime;
	};
	"-convertToData" = {
	    GSMimeDocument = GSMime;
	};
	"-convertToText" = {
	    GSMimeDocument = GSMime;
	};
	"-copyWithZone:" = {
	    GSMimeDocument = GSMime;
	    GSMimeHeader = GSMime;
	    GSMimeSerializer = GSMime;
	};
	"-count" = {
	    GSTLSCertificateList = GSTLS;
	    GSXPathNodeSet = GSXML;
	};
	"-credentials" = {
	    GSTLSCredentials = GSTLS;
	    GSTLSSession = GSTLS;
	};
	"-data" = {
	    GSMimeParser = GSMime;
	};
	"-dataEncoding" = {
	    GSMimeSerializer = GSMime;
	};
	"-debug" = {
	    GSTLSSession = GSTLS;
	};
	"-debugLoggingEnabled" = {
	    "NSProcessInfo(GNUstepBase)" = "NSProcessInfo+GNUstepBase";
	};
	"-debugSet" = {
	    "NSProcessInfo(GNUstepBase)" = "NSProcessInfo+GNUstepBase";
	};
	"-decodeData:fromRange:intoData:withContext:" = {
	    GSMimeParser = GSMime;
	};
	"-decodeData:length:intoData:" = {
	    GSMimeCodingContext = GSMime;
	};
	"-delegate" = {
	    GSMimeSMTPClient = GSMime;
	    GSXMLRPC = GSXML;
	};
	"-deleteContent:" = {
	    GSMimeDocument = GSMime;
	};
	"-deleteHeader:" = {
	    GSMimeDocument = GSMime;
	};
	"-deleteHeaderNamed:" = {
	    GSMimeDocument = GSMime;
	};
	"-deletePrefix:" = {
	    "NSMutableString(GNUstepBase)" = "NSMutableString+GNUstepBase";
	};
	"-deleteSuffix:" = {
	    "NSMutableString(GNUstepBase)" = "NSMutableString+GNUstepBase";
	};
	"-description" = {
	    GSXMLDocument = GSXML;
	    GSXMLNode = GSXML;
	};
	"-disconnect:" = {
	    GSTLSSession = GSTLS;
	};
	"-doValidityChecking:" = {
	    GSXMLParser = GSXML;
	};
	"-document" = {
	    GSXMLNode = GSXML;
	    GSXMLParser = GSXML;
	};
	"-doubleValue" = {
	    GSXPathNumber = GSXML;
	};
	"-elementDecl:type:" = {
	    GSSAXHandler = GSXML;
	};
	"-encodeDocument:" = {
	    GSMimeSerializer = GSMime;
	};
	"-encodePart:to:" = {
	    GSMimeSerializer = GSMime;
	};
	"-encoding" = {
	    GSXMLDocument = GSXML;
	};
	"-endDocument" = {
	    GSSAXHandler = GSXML;
	};
	"-endElement:" = {
	    GSSAXHandler = GSXML;
	};
	"-endElement:prefix:href:" = {
	    GSSAXHandler = GSXML;
	};
	"-entityDecl:type:public:system:content:" = {
	    GSSAXHandler = GSXML;
	};
	"-errNo" = {
	    GSXMLParser = GSXML;
	};
	"-error:" = {
	    GSSAXHandler = GSXML;
	};
	"-error:colNumber:lineNumber:" = {
	    GSSAXHandler = GSXML;
	};
	"-escapedContent" = {
	    GSXMLNode = GSXML;
	};
	"-escapedRepresentation" = {
	    "NSData(GNUstepBase)" = "NSData+GNUstepBase";
	};
	"-escapedRepresentation:" = {
	    "NSData(GNUstepBase)" = "NSData+GNUstepBase";
	};
	"-estimatedSize" = {
	    GSMimeDocument = GSMime;
	    GSMimeHeader = GSMime;
	};
	"-evaluateExpression:" = {
	    GSXPathContext = GSXML;
	};
	"-excess" = {
	    GSMimeParser = GSMime;
	};
	"-expectNoHeaders" = {
	    GSMimeParser = GSMime;
	};
	"-expiresAt" = {
	    GSTLSCertificateList = GSTLS;
	};
	"-expiresAt:" = {
	    GSTLSCertificateList = GSTLS;
	};
	"-externalSubset:externalID:systemID:" = {
	    GSSAXHandler = GSXML;
	};
	"-fatalError:" = {
	    GSSAXHandler = GSXML;
	};
	"-fatalError:colNumber:lineNumber:" = {
	    GSSAXHandler = GSXML;
	};
	"-firstAttribute" = {
	    GSXMLNode = GSXML;
	};
	"-firstChild" = {
	    GSXMLNode = GSXML;
	};
	"-firstChildElement" = {
	    GSXMLNode = GSXML;
	};
	"-flush:" = {
	    GSMimeSMTPClient = GSMime;
	};
	"-foldAt" = {
	    GSMimeSerializer = GSMime;
	};
	"-fullPath" = {
	    "NSURL(GNUstepBase)" = "NSURL+GNUstepBase";
	};
	"-fullValue" = {
	    GSMimeHeader = GSMime;
	};
	"-gcAlreadyVisited" = {
	    "GCObject(Extra)" = GCObject;
	};
	"-gcDecrementRefCount" = {
	    GCObject = GCObject;
	};
	"-gcDecrementRefCountOfContainedObjects" = {
	    GCObject = GCObject;
	};
	"-gcIncrementRefCount" = {
	    GCObject = GCObject;
	};
	"-gcIncrementRefCountOfContainedObjects" = {
	    GCObject = GCObject;
	};
	"-gcNextObject" = {
	    "GCObject(Extra)" = GCObject;
	};
	"-gcPreviousObject" = {
	    "GCObject(Extra)" = GCObject;
	};
	"-gcSetNextObject:" = {
	    "GCObject(Extra)" = GCObject;
	};
	"-gcSetPreviousObject:" = {
	    "GCObject(Extra)" = GCObject;
	};
	"-gcSetVisited:" = {
	    "GCObject(Extra)" = GCObject;
	};
	"-getEntity:" = {
	    GSSAXHandler = GSXML;
	};
	"-getParameterEntity:" = {
	    GSSAXHandler = GSXML;
	};
	"-getWarnings:" = {
	    GSXMLParser = GSXML;
	};
	"-globalNamespace:href:prefix:" = {
	    GSSAXHandler = GSXML;
	};
	"-gunzipped" = {
	    "NSData(GNUstepBase)" = "NSData+GNUstepBase";
	};
	"-gzipped:" = {
	    "NSData(GNUstepBase)" = "NSData+GNUstepBase";
	};
	"-handshake" = {
	    GSTLSSession = GSTLS;
	};
	"-hasExternalSubset" = {
	    GSSAXHandler = GSXML;
	};
	"-hasInternalSubset" = {
	    GSSAXHandler = GSXML;
	};
	"-headerNamed:" = {
	    GSMimeDocument = GSMime;
	};
	"-headersNamed:" = {
	    GSMimeDocument = GSMime;
	};
	"-hexadecimalRepresentation" = {
	    "NSData(GNUstepBase)" = "NSData+GNUstepBase";
	};
	"-hexadecimalRepresentation:" = {
	    "NSData(GNUstepBase)" = "NSData+GNUstepBase";
	};
	"-href" = {
	    GSXMLNamespace = GSXML;
	};
	"-ignoreWhitespace:" = {
	    GSSAXHandler = GSXML;
	};
	"-immutableProxy" = {
	    "NSMutableString(GNUstepBase)" = "NSMutableString+GNUstepBase";
	};
	"-initWithDocument:" = {
	    GSXPathContext = GSXML;
	};
	"-initWithHexadecimalRepresentation:" = {
	    "NSData(GNUstepBase)" = "NSData+GNUstepBase";
	};
	"-initWithName:value:" = {
	    GSMimeHeader = GSMime;
	};
	"-initWithName:value:parameters:" = {
	    GSMimeHeader = GSMime;
	};
	"-initWithOptions:direction:transport:push:pull:" = {
	    GSTLSSession = GSTLS;
	};
	"-initWithSAXHandler:" = {
	    GSXMLParser = GSXML;
	};
	"-initWithSAXHandler:withContentsOfFile:" = {
	    GSXMLParser = GSXML;
	};
	"-initWithSAXHandler:withContentsOfURL:" = {
	    GSXMLParser = GSXML;
	};
	"-initWithSAXHandler:withData:" = {
	    GSXMLParser = GSXML;
	};
	"-initWithSAXHandler:withInputStream:" = {
	    GSXMLParser = GSXML;
	};
	"-initWithScheme:user:password:host:port:fullPath:parameterString:query:fragment:" = {
	    "NSURL(GNUstepBaseAdditions)" = "NSURL+GNUstepBase";
	};
	"-initWithURL:" = {
	    GSXMLRPC = GSXML;
	};
	"-initWithURL:certificate:privateKey:password:" = {
	    GSXMLRPC = GSXML;
	};
	"-insertionPosition:usingFunction:context:" = {
	    "NSArray(GNUstepBase)" = "NSArray+GNUstepBase";
	};
	"-insertionPosition:usingSelector:" = {
	    "NSArray(GNUstepBase)" = "NSArray+GNUstepBase";
	};
	"-internalSubset:externalID:systemID:" = {
	    GSSAXHandler = GSXML;
	};
	"-isComplete" = {
	    GSMimeParser = GSMime;
	};
	"-isElement" = {
	    GSXMLNode = GSXML;
	};
	"-isGzipped" = {
	    "NSData(GNUstepBase)" = "NSData+GNUstepBase";
	};
	"-isHttp" = {
	    GSMimeParser = GSMime;
	};
	"-isInBody" = {
	    GSMimeParser = GSMime;
	};
	"-isInHeaders" = {
	    GSMimeParser = GSMime;
	};
	"-isInstance" = {
	    "NSObject(GNUstepBase)" = "NSObject+GNUstepBase";
	};
	"-isStandalone" = {
	    GSSAXHandler = GSXML;
	};
	"-isText" = {
	    GSXMLNode = GSXML;
	};
	"-isoYear" = {
	    "NSCalendarDate(GNUstepBase)" = "NSCalendarDate+GNUstepBase";
	};
	"-issuer" = {
	    GSTLSSession = GSTLS;
	};
	"-keepBlanks:" = {
	    GSXMLParser = GSXML;
	};
	"-key" = {
	    GSTLSCredentials = GSTLS;
	    GSTLSPrivateKey = GSTLS;
	};
	"-lastError" = {
	    GSMimeSMTPClient = GSMime;
	};
	"-length" = {
	    GSXPathNodeSet = GSXML;
	};
	"-lib" = {
	    GSSAXHandler = GSXML;
	    GSXMLDocument = GSXML;
	    GSXMLNamespace = GSXML;
	    GSXMLNode = GSXML;
	};
	"-lineNumber" = {
	    GSXMLParser = GSXML;
	};
	"-list" = {
	    GSTLSCredentials = GSTLS;
	};
	"-loadEntity:at:" = {
	    GSSAXHandler = GSXML;
	};
	"-makeAttributeWithName:value:" = {
	    GSXMLNode = GSXML;
	};
	"-makeBoundary" = {
	    GSMimeDocument = GSMime;
	};
	"-makeChildWithNamespace:name:content:" = {
	    GSXMLNode = GSXML;
	};
	"-makeComment:" = {
	    GSXMLNode = GSXML;
	};
	"-makeContentID" = {
	    GSMimeDocument = GSMime;
	};
	"-makeHeader:value:parameters:" = {
	    GSMimeDocument = GSMime;
	};
	"-makeImmutable" = {
	    "NSObject(GNUstepBase)" = "NSObject+GNUstepBase";
	};
	"-makeImmutableCopyOnFail:" = {
	    "NSObject(GNUstepBase)" = "NSObject+GNUstepBase";
	};
	"-makeMessageID" = {
	    GSMimeDocument = GSMime;
	};
	"-makeMethodCall:params:timeout:" = {
	    GSXMLRPC = GSXML;
	};
	"-makeNamespaceHref:prefix:" = {
	    GSXMLNode = GSXML;
	};
	"-makeNodeWithNamespace:name:content:" = {
	    GSXMLDocument = GSXML;
	};
	"-makePI:content:" = {
	    GSXMLNode = GSXML;
	};
	"-makeText:" = {
	    GSXMLNode = GSXML;
	};
	"-md5Digest" = {
	    "NSData(GNUstepBase)" = "NSData+GNUstepBase";
	};
	"-messages" = {
	    GSXMLParser = GSXML;
	};
	"-mimeDocument" = {
	    GSMimeParser = GSMime;
	};
	"-name" = {
	    GSMimeHeader = GSMime;
	    GSXMLNode = GSXML;
	};
	"-namePreservingCase:" = {
	    GSMimeHeader = GSMime;
	};
	"-namespace" = {
	    GSXMLNode = GSXML;
	};
	"-namespaceDecl:href:prefix:" = {
	    GSSAXHandler = GSXML;
	};
	"-namespaceDefinitions" = {
	    GSXMLNode = GSXML;
	};
	"-next" = {
	    GSXMLNamespace = GSXML;
	    GSXMLNode = GSXML;
	};
	"-nextElement" = {
	    GSXMLNode = GSXML;
	};
	"-nodeAtIndex:" = {
	    GSXPathNodeSet = GSXML;
	};
	"-notImplemented:" = {
	    "NSObject(GNUstepBase)" = "NSObject+GNUstepBase";
	};
	"-notationDecl:public:system:" = {
	    GSSAXHandler = GSXML;
	};
	"-objectForKey:" = {
	    GSMimeHeader = GSMime;
	    GSXMLNode = GSXML;
	};
	"-objects" = {
	    GSMimeHeader = GSMime;
	};
	"-owner" = {
	    GSTLSSession = GSTLS;
	};
	"-parameterForKey:" = {
	    GSMimeHeader = GSMime;
	};
	"-parameters" = {
	    GSMimeHeader = GSMime;
	};
	"-parametersPreservingCase:" = {
	    GSMimeHeader = GSMime;
	};
	"-params" = {
	    GSTLSDHParams = GSTLS;
	};
	"-parent" = {
	    GSXMLNode = GSXML;
	};
	"-parse" = {
	    GSXMLParser = GSXML;
	};
	"-parse:" = {
	    GSMimeParser = GSMime;
	    GSXMLParser = GSXML;
	};
	"-parseHeader:" = {
	    GSMimeParser = GSMime;
	};
	"-parseHeaders:remaining:" = {
	    GSMimeParser = GSMime;
	};
	"-parseMethod:params:" = {
	    GSXMLRPC = GSXML;
	};
	"-parseResponse:params:" = {
	    GSXMLRPC = GSXML;
	};
	"-parser" = {
	    GSSAXHandler = GSXML;
	};
	"-pathWithEscapes" = {
	    "NSURL(GNUstepBase)" = "NSURL+GNUstepBase";
	};
	"-pending" = {
	    GSTLSSession = GSTLS;
	};
	"-prefix" = {
	    GSXMLNamespace = GSXML;
	};
	"-previous" = {
	    GSXMLNode = GSXML;
	};
	"-previousElement" = {
	    GSXMLNode = GSXML;
	};
	"-problem" = {
	    GSTLSSession = GSTLS;
	};
	"-processInstruction:data:" = {
	    GSSAXHandler = GSXML;
	};
	"-propertiesAsDictionaryWithKeyTransformationSel:" = {
	    GSXMLNode = GSXML;
	};
	"-publicID" = {
	    GSXMLParser = GSXML;
	};
	"-queueSize" = {
	    GSMimeSMTPClient = GSMime;
	};
	"-rawMimeData" = {
	    GSMimeDocument = GSMime;
	    GSMimeHeader = GSMime;
	};
	"-rawMimeData:" = {
	    GSMimeDocument = GSMime;
	};
	"-rawMimeData:foldedAt:" = {
	    GSMimeDocument = GSMime;
	};
	"-rawMimeDataPreservingCase:" = {
	    GSMimeHeader = GSMime;
	};
	"-rawMimeDataPreservingCase:foldedAt:" = {
	    GSMimeHeader = GSMime;
	};
	"-rawMimeDataPreservingCase:foldedAt:to:" = {
	    GSMimeHeader = GSMime;
	};
	"-read:length:" = {
	    GSTLSSession = GSTLS;
	};
	"-reference:" = {
	    GSSAXHandler = GSXML;
	};
	"-registerNamespaceWithPrefix:href:" = {
	    GSXPathContext = GSXML;
	};
	"-replaceString:withString:" = {
	    "NSMutableString(GNUstepBase)" = "NSMutableString+GNUstepBase";
	};
	"-resolveEntities:" = {
	    GSXMLParser = GSXML;
	};
	"-result" = {
	    GSXMLRPC = GSXML;
	};
	"-root" = {
	    GSXMLDocument = GSXML;
	};
	"-saveMessages:" = {
	    GSXMLParser = GSXML;
	};
	"-scanHeaderBody:into:" = {
	    GSMimeParser = GSMime;
	};
	"-scanName:" = {
	    GSMimeParser = GSMime;
	};
	"-scanPastSpace:" = {
	    GSMimeParser = GSMime;
	};
	"-scanSpecial:" = {
	    GSMimeParser = GSMime;
	};
	"-scanToken:" = {
	    GSMimeParser = GSMime;
	};
	"-send:" = {
	    GSMimeSMTPClient = GSMime;
	};
	"-send:envelopeID:" = {
	    GSMimeSMTPClient = GSMime;
	};
	"-sendMethodCall:params:timeout:" = {
	    GSXMLRPC = GSXML;
	};
	"-sessionInfo" = {
	    GSTLSSession = GSTLS;
	};
	"-setAtEnd:" = {
	    GSMimeCodingContext = GSMime;
	};
	"-setBuggyQuotes:" = {
	    GSMimeParser = GSMime;
	};
	"-setCompact:" = {
	    GSXMLRPC = GSXML;
	};
	"-setContent:" = {
	    GSMimeDocument = GSMime;
	};
	"-setContent:type:" = {
	    GSMimeDocument = GSMime;
	};
	"-setContent:type:name:" = {
	    GSMimeDocument = GSMime;
	};
	"-setContentType:" = {
	    GSMimeDocument = GSMime;
	};
	"-setDataEncoding:" = {
	    GSMimeSerializer = GSMime;
	};
	"-setDebug:" = {
	    GSXMLRPC = GSXML;
	};
	"-setDebugLoggingEnabled:" = {
	    "NSProcessInfo(GNUstepBase)" = "NSProcessInfo+GNUstepBase";
	};
	"-setDefaultCharset:" = {
	    GSMimeParser = GSMime;
	};
	"-setDelegate:" = {
	    GSMimeSMTPClient = GSMime;
	    GSXMLRPC = GSXML;
	};
	"-setFoldAt:" = {
	    GSMimeSerializer = GSMime;
	};
	"-setHeader:" = {
	    GSMimeDocument = GSMime;
	};
	"-setHeader:value:parameters:" = {
	    GSMimeDocument = GSMime;
	};
	"-setHeadersOnly" = {
	    GSMimeParser = GSMime;
	};
	"-setHostname:" = {
	    GSMimeSMTPClient = GSMime;
	};
	"-setIdentity:" = {
	    GSMimeSMTPClient = GSMime;
	};
	"-setIsHttp" = {
	    GSMimeParser = GSMime;
	};
	"-setMaximum:" = {
	    GSMimeSMTPClient = GSMime;
	};
	"-setNamespace:" = {
	    GSXMLNode = GSXML;
	};
	"-setObject:forKey:" = {
	    GSMimeHeader = GSMime;
	    GSXMLNode = GSXML;
	};
	"-setOriginator:" = {
	    GSMimeSMTPClient = GSMime;
	};
	"-setParameter:forKey:" = {
	    GSMimeHeader = GSMime;
	};
	"-setParameters:" = {
	    GSMimeHeader = GSMime;
	};
	"-setPort:" = {
	    GSMimeSMTPClient = GSMime;
	};
	"-setRoot:" = {
	    GSXMLDocument = GSXML;
	};
	"-setTextEncoding:" = {
	    GSMimeSerializer = GSMime;
	};
	"-setTimeZone:" = {
	    GSXMLRPC = GSXML;
	};
	"-setUse8bit:" = {
	    GSMimeSerializer = GSMime;
	};
	"-setUsername:" = {
	    GSMimeSMTPClient = GSMime;
	};
	"-setValue:" = {
	    GSMimeHeader = GSMime;
	};
	"-shouldNotImplement:" = {
	    "NSObject(GNUstepBase)" = "NSObject+GNUstepBase";
	};
	"-sizeInBytes" = {
	    "NSObject(MemoryFootprint)" = "NSObject+GNUstepBase";
	};
	"-sizeInBytesExcluding:" = {
	    "NSObject(MemoryFootprint)" = "NSObject+GNUstepBase";
	};
	"-sizeOfContentExcluding:" = {
	    "NSObject(MemoryFootprint)" = "NSObject+GNUstepBase";
	};
	"-sizeOfInstance" = {
	    "NSObject(MemoryFootprint)" = "NSObject+GNUstepBase";
	};
	"-smtpClient:mimeFailed:" = {
	    "NSObject(GSMimeSMTPClient)" = GSMime;
	};
	"-smtpClient:mimeSent:" = {
	    "NSObject(GSMimeSMTPClient)" = GSMime;
	};
	"-smtpClient:mimeUnsent:" = {
	    "NSObject(GSMimeSMTPClient)" = GSMime;
	};
	"-socketAddress" = {
	    "NSFileHandle(GNUstepBase)" = "NSFileHandle+GNUstepBase";
	};
	"-startDocument" = {
	    GSSAXHandler = GSXML;
	};
	"-startElement:attributes:" = {
	    GSSAXHandler = GSXML;
	};
	"-startElement:prefix:href:attributes:namespaces:" = {
	    GSSAXHandler = GSXML;
	};
	"-state" = {
	    GSMimeSMTPClient = GSMime;
	};
	"-stateDesc" = {
	    GSMimeSMTPClient = GSMime;
	};
	"-stringByDeletingPrefix:" = {
	    "NSString(GNUstepBase)" = "NSString+GNUstepBase";
	};
	"-stringByDeletingSuffix:" = {
	    "NSString(GNUstepBase)" = "NSString+GNUstepBase";
	};
	"-stringByEscapingXML" = {
	    "NSString(GSXML)" = GSXML;
	};
	"-stringByReplacingString:withString:" = {
	    "NSString(GNUstepBase)" = "NSString+GNUstepBase";
	};
	"-stringByTrimmingLeadSpaces" = {
	    "NSString(GNUstepBase)" = "NSString+GNUstepBase";
	};
	"-stringByTrimmingSpaces" = {
	    "NSString(GNUstepBase)" = "NSString+GNUstepBase";
	};
	"-stringByTrimmingTailSpaces" = {
	    "NSString(GNUstepBase)" = "NSString+GNUstepBase";
	};
	"-stringByUnescapingXML" = {
	    "NSString(GSXML)" = GSXML;
	};
	"-stringValue" = {
	    GSXPathString = GSXML;
	};
	"-subclassResponsibility:" = {
	    "NSObject(GNUstepBase)" = "NSObject+GNUstepBase";
	};
	"-substituteEntities:" = {
	    GSXMLParser = GSXML;
	};
	"-substringFromRange:" = {
	    "NSString(GNUstepBase)" = "NSString+GNUstepBase";
	};
	"-systemID" = {
	    GSXMLParser = GSXML;
	};
	"-text" = {
	    GSMimeHeader = GSMime;
	};
	"-textEncoding" = {
	    GSMimeSerializer = GSMime;
	};
	"-timeZone" = {
	    GSXMLRPC = GSXML;
	};
	"-timeout:" = {
	    GSXMLRPC = GSXML;
	};
	"-trimLeadSpaces" = {
	    "NSMutableString(GNUstepBase)" = "NSMutableString+GNUstepBase";
	};
	"-trimSpaces" = {
	    "NSMutableString(GNUstepBase)" = "NSMutableString+GNUstepBase";
	};
	"-trimTailSpaces" = {
	    "NSMutableString(GNUstepBase)" = "NSMutableString+GNUstepBase";
	};
	"-trust" = {
	    GSTLSCredentials = GSTLS;
	};
	"-type" = {
	    GSXMLNamespace = GSXML;
	    GSXMLNode = GSXML;
	};
	"-typeDescription" = {
	    GSXMLNamespace = GSXML;
	    GSXMLNode = GSXML;
	};
	"-unparsedEntityDecl:public:system:notationName:" = {
	    GSSAXHandler = GSXML;
	};
	"-use8bit" = {
	    GSMimeSerializer = GSMime;
	};
	"-uudecodeInto:name:mode:" = {
	    "NSData(GNUstepBase)" = "NSData+GNUstepBase";
	};
	"-uuencodeInto:name:mode:" = {
	    "NSData(GNUstepBase)" = "NSData+GNUstepBase";
	};
	"-value" = {
	    GSMimeHeader = GSMime;
	    GSXMLAttribute = GSXML;
	};
	"-verify" = {
	    GSTLSSession = GSTLS;
	};
	"-version" = {
	    GSXMLDocument = GSXML;
	};
	"-warning:" = {
	    GSSAXHandler = GSXML;
	};
	"-warning:colNumber:lineNumber:" = {
	    GSSAXHandler = GSXML;
	};
	"-weekOfYear" = {
	    "NSCalendarDate(GNUstepBase)" = "NSCalendarDate+GNUstepBase";
	};
	"-write:length:" = {
	    GSTLSSession = GSTLS;
	};
	"-writeToFile:atomically:" = {
	    GSXMLDocument = GSXML;
	};
	"-writeToURL:atomically:" = {
	    GSXMLDocument = GSXML;
	};
	"-xsltTransform:" = {
	    "GSXMLDocument(XSLT)" = GSXML;
	};
	"-xsltTransform:params:" = {
	    "GSXMLDocument(XSLT)" = GSXML;
	};
    };
    output = {
	"../Headers/GNUstepBase/GCObject.h" = (
	    "../Documentation/BaseAdditions/GCObject.gsdoc"
	);
	"../Headers/GNUstepBase/GNUstep.h" = (
	    "../Documentation/BaseAdditions/Functions.gsdoc"
	);
	"../Headers/GNUstepBase/GSBlocks.h" = (
	    "../Documentation/BaseAdditions/Functions.gsdoc"
	);
	"../Headers/GNUstepBase/GSFunctions.h" = (
	    "../Documentation/BaseAdditions/Functions.gsdoc"
	);
	"../Headers/GNUstepBase/GSIArray.h" = (
	    "../Documentation/BaseAdditions/Functions.gsdoc",
	    "../Documentation/BaseAdditions/TypesAndConstants.gsdoc"
	);
	"../Headers/GNUstepBase/GSIMap.h" = (
	    "../Documentation/BaseAdditions/Functions.gsdoc",
	    "../Documentation/BaseAdditions/TypesAndConstants.gsdoc"
	);
	"../Headers/GNUstepBase/GSLocale.h" = (
	    "../Documentation/BaseAdditions/Functions.gsdoc"
	);
	"../Headers/GNUstepBase/GSMime.h" = (
	    "../Documentation/BaseAdditions/GSMime.gsdoc",
	    "../Documentation/BaseAdditions/TypesAndConstants.gsdoc"
	);
	"../Headers/GNUstepBase/GSObjCRuntime.h" = (
	    "../Documentation/BaseAdditions/Functions.gsdoc"
	);
	"../Headers/GNUstepBase/GSTLS.h" = (
	    "../Documentation/BaseAdditions/GSTLS.gsdoc",
	    "../Documentation/BaseAdditions/TypesAndConstants.gsdoc"
	);
	"../Headers/GNUstepBase/GSUnion.h" = (
	    "../Documentation/BaseAdditions/GSUnion.gsdoc"
	);
	"../Headers/GNUstepBase/GSVersionMacros.h" = (
	    "../Documentation/BaseAdditions/Functions.gsdoc"
	);
	"../Headers/GNUstepBase/GSXML.h" = (
	    "../Documentation/BaseAdditions/GSXML.gsdoc"
	);
	"../Headers/GNUstepBase/NSArray+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/NSArray+GNUstepBase.gsdoc"
	);
	"../Headers/GNUstepBase/NSAttributedString+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/NSAttributedString+GNUstepBase.gsdoc"
	);
	"../Headers/GNUstepBase/NSBundle+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/NSBundle+GNUstepBase.gsdoc"
	);
	"../Headers/GNUstepBase/NSCalendarDate+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/NSCalendarDate+GNUstepBase.gsdoc"
	);
	"../Headers/GNUstepBase/NSData+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/NSData+GNUstepBase.gsdoc"
	);
	"../Headers/GNUstepBase/NSDebug+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/Functions.gsdoc"
	);
	"../Headers/GNUstepBase/NSFileHandle+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/NSFileHandle+GNUstepBase.gsdoc"
	);
	"../Headers/GNUstepBase/NSMutableString+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/NSMutableString+GNUstepBase.gsdoc"
	);
	"../Headers/GNUstepBase/NSNumber+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/NSNumber+GNUstepBase.gsdoc"
	);
	"../Headers/GNUstepBase/NSObject+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/NSObject+GNUstepBase.gsdoc"
	);
	"../Headers/GNUstepBase/NSProcessInfo+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/NSProcessInfo+GNUstepBase.gsdoc"
	);
	"../Headers/GNUstepBase/NSString+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/NSString+GNUstepBase.gsdoc",
	    "../Documentation/BaseAdditions/Functions.gsdoc"
	);
	"../Headers/GNUstepBase/NSTask+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/NSTask+GNUstepBase.gsdoc"
	);
	"../Headers/GNUstepBase/NSThread+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/NSThread+GNUstepBase.gsdoc",
	    "../Documentation/BaseAdditions/Functions.gsdoc"
	);
	"../Headers/GNUstepBase/NSURL+GNUstepBase.h" = (
	    "../Documentation/BaseAdditions/NSURL+GNUstepBase.gsdoc"
	);
	"../Headers/GNUstepBase/Unicode.h" = (
	    "../Documentation/BaseAdditions/Functions.gsdoc"
	);
    };
    source = {
	"../Headers/GNUstepBase/GCObject.h" = (
	    "../Headers/GNUstepBase/GCObject.h",
	    "Additions/GCObject.m",
	    "Additions/GCArray.m",
	    "Additions/GCDictionary.m"
	);
	"../Headers/GNUstepBase/GNUstep.h" = (
	    "../Headers/GNUstepBase/GNUstep.h"
	);
	"../Headers/GNUstepBase/GSBlocks.h" = (
	    "GSBlocks.m"
	);
	"../Headers/GNUstepBase/GSFunctions.h" = (
	    "Additions/GSFunctions.m"
	);
	"../Headers/GNUstepBase/GSIArray.h" = (
	    "../Headers/GNUstepBase/GSIArray.h"
	);
	"../Headers/GNUstepBase/GSIMap.h" = (
	    "../Headers/GNUstepBase/GSIMap.h"
	);
	"../Headers/GNUstepBase/GSLocale.h" = (
	    "GSLocale.m"
	);
	"../Headers/GNUstepBase/GSMime.h" = (
	    "Additions/GSMime.m"
	);
	"../Headers/GNUstepBase/GSObjCRuntime.h" = (
	    "Additions/GSObjCRuntime.m"
	);
	"../Headers/GNUstepBase/GSTLS.h" = (
	    "GSTLS.m"
	);
	"../Headers/GNUstepBase/GSUnion.h" = (
	    "../Headers/GNUstepBase/GSUnion.h"
	);
	"../Headers/GNUstepBase/GSVersionMacros.h" = (
	    "../Headers/GNUstepBase/GSVersionMacros.h"
	);
	"../Headers/GNUstepBase/GSXML.h" = (
	    "Additions/GSXML.m"
	);
	"../Headers/GNUstepBase/NSArray+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSArray+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/NSAttributedString+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSAttributedString+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/NSBundle+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSBundle+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/NSCalendarDate+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSCalendarDate+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/NSData+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSData+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/NSDebug+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSDebug+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/NSFileHandle+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSFileHandle+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/NSMutableString+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSMutableString+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/NSNumber+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSNumber+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/NSObject+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSObject+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/NSProcessInfo+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSProcessInfo+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/NSString+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSString+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/NSTask+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSTask+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/NSThread+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSThread+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/NSURL+GNUstepBase.h" = (
	    "../Headers/GNUstepBase/NSURL+GNUstepBase.h"
	);
	"../Headers/GNUstepBase/Unicode.h" = (
	    "Additions/Unicode.m"
	);
    };
    super = {
	GCArray = NSArray;
	GCDictionary = NSDictionary;
	GCMutableArray = NSMutableArray;
	GCMutableDictionary = NSMutableDictionary;
	GCObject = NSObject;
	GSHTMLParser = GSXMLParser;
	GSHTMLSAXHandler = GSSAXHandler;
	GSMimeCodingContext = NSObject;
	GSMimeDocument = NSObject;
	GSMimeHeader = NSObject;
	GSMimeParser = NSObject;
	GSMimeSMTPClient = NSObject;
	GSMimeSerializer = NSObject;
	GSSAXHandler = NSObject;
	GSTLSCertificateList = GSTLSObject;
	GSTLSCredentials = GSTLSObject;
	GSTLSDHParams = GSTLSObject;
	GSTLSObject = NSObject;
	GSTLSPrivateKey = GSTLSObject;
	GSTLSSession = GSTLSObject;
	GSTreeSAXHandler = GSSAXHandler;
	GSXMLAttribute = GSXMLNode;
	GSXMLDocument = NSObject;
	GSXMLNamespace = NSObject;
	GSXMLNode = NSObject;
	GSXMLParser = NSObject;
	GSXMLRPC = NSObject;
	GSXPathBoolean = GSXPathObject;
	GSXPathContext = NSObject;
	GSXPathNodeSet = GSXPathObject;
	GSXPathNumber = GSXPathObject;
	GSXPathObject = NSObject;
	GSXPathString = GSXPathObject;
    };
    title = {
	BaseAdditions = "GNUstep Base Additions";
	Functions = Functions;
	GCObject = "GCObject documentation";
	GSMime = "The MIME parsing system";
	GSTLS = "GSTLS documentation";
	GSXML = "The XML and HTML parsing system";
	"NSArray+GNUstepBase" = "NSArray+GNUstepBase documentation";
	"NSAttributedString+GNUstepBase" = "NSAttributedString+GNUstepBase documentation";
	"NSBundle+GNUstepBase" = "NSBundle+GNUstepBase documentation";
	"NSCalendarDate+GNUstepBase" = "NSCalendarDate+GNUstepBase documentation";
	"NSData+GNUstepBase" = "NSData+GNUstepBase documentation";
	"NSFileHandle+GNUstepBase" = "NSFileHandle+GNUstepBase documentation";
	"NSMutableString+GNUstepBase" = "NSMutableString+GNUstepBase documentation";
	"NSNumber+GNUstepBase" = "NSNumber+GNUstepBase documentation";
	"NSObject+GNUstepBase" = "NSObject+GNUstepBase documentation";
	"NSProcessInfo+GNUstepBase" = "NSProcessInfo+GNUstepBase documentation";
	"NSString+GNUstepBase" = "NSString+GNUstepBase documentation";
	"NSTask+GNUstepBase" = "NSTask+GNUstepBase documentation";
	"NSThread+GNUstepBase" = "NSThread+GNUstepBase documentation";
	"NSURL+GNUstepBase" = "NSURL+GNUstepBase documentation";
	TypesAndConstants = "Types and Constants";
    };
    type = {
	GSIArray = TypesAndConstants;
	"GSIArray_t" = TypesAndConstants;
	GSIMapBucket = TypesAndConstants;
	"GSIMapBucket_t" = TypesAndConstants;
	GSIMapEnumerator = TypesAndConstants;
	"GSIMapEnumerator_t" = TypesAndConstants;
	GSIMapNode = TypesAndConstants;
	"GSIMapNode_t" = TypesAndConstants;
	GSIMapTable = TypesAndConstants;
	"GSIMapTable_t" = TypesAndConstants;
	GSIVar = TypesAndConstants;
	GSMethod = TypesAndConstants;
	GSMimeErrorCode = TypesAndConstants;
	GSTLSIOR = TypesAndConstants;
	GSTLSIOW = TypesAndConstants;
	NSGNUstepStringEncoding = TypesAndConstants;
	NSInteger = TypesAndConstants;
	NSUInteger = TypesAndConstants;
	"struct _GSIMapEnumerator" = TypesAndConstants;
    };
    unitmethods = {
	GCObject = {
	    "+gcCollectGarbage" = GCObject;
	    "+gcIsCollecting" = GCObject;
	    "+gcObjectWillBeDeallocated:" = GCObject;
	    "-gcDecrementRefCount" = GCObject;
	    "-gcDecrementRefCountOfContainedObjects" = GCObject;
	    "-gcIncrementRefCount" = GCObject;
	    "-gcIncrementRefCountOfContainedObjects" = GCObject;
	};
	"GCObject(Extra)" = {
	    "-gcAlreadyVisited" = GCObject;
	    "-gcNextObject" = GCObject;
	    "-gcPreviousObject" = GCObject;
	    "-gcSetNextObject:" = GCObject;
	    "-gcSetPreviousObject:" = GCObject;
	    "-gcSetVisited:" = GCObject;
	};
	GSMimeCodingContext = {
	    "-atEnd" = GSMime;
	    "-decodeData:length:intoData:" = GSMime;
	    "-setAtEnd:" = GSMime;
	};
	GSMimeDocument = {
	    "+charsetForXml:" = GSMime;
	    "+charsetFromEncoding:" = GSMime;
	    "+decodeBase64:" = GSMime;
	    "+decodeBase64String:" = GSMime;
	    "+documentWithContent:type:name:" = GSMime;
	    "+encodeBase64:" = GSMime;
	    "+encodeBase64String:" = GSMime;
	    "+encodingFromCharset:" = GSMime;
	    "-addContent:" = GSMime;
	    "-addHeader:" = GSMime;
	    "-addHeader:value:parameters:" = GSMime;
	    "-allHeaders" = GSMime;
	    "-content" = GSMime;
	    "-contentByID:" = GSMime;
	    "-contentByLocation:" = GSMime;
	    "-contentByName:" = GSMime;
	    "-contentFile" = GSMime;
	    "-contentID" = GSMime;
	    "-contentLocation" = GSMime;
	    "-contentName" = GSMime;
	    "-contentSubtype" = GSMime;
	    "-contentType" = GSMime;
	    "-contentsByName:" = GSMime;
	    "-convertTo7BitSafe" = GSMime;
	    "-convertToBase64" = GSMime;
	    "-convertToBinary" = GSMime;
	    "-convertToData" = GSMime;
	    "-convertToText" = GSMime;
	    "-copyWithZone:" = GSMime;
	    "-deleteContent:" = GSMime;
	    "-deleteHeader:" = GSMime;
	    "-deleteHeaderNamed:" = GSMime;
	    "-estimatedSize" = GSMime;
	    "-headerNamed:" = GSMime;
	    "-headersNamed:" = GSMime;
	    "-makeBoundary" = GSMime;
	    "-makeContentID" = GSMime;
	    "-makeHeader:value:parameters:" = GSMime;
	    "-makeMessageID" = GSMime;
	    "-rawMimeData" = GSMime;
	    "-rawMimeData:" = GSMime;
	    "-rawMimeData:foldedAt:" = GSMime;
	    "-setContent:" = GSMime;
	    "-setContent:type:" = GSMime;
	    "-setContent:type:name:" = GSMime;
	    "-setContentType:" = GSMime;
	    "-setHeader:" = GSMime;
	    "-setHeader:value:parameters:" = GSMime;
	};
	GSMimeHeader = {
	    "+headerWithName:value:parameters:" = GSMime;
	    "+makeQuoted:always:" = GSMime;
	    "+makeToken:" = GSMime;
	    "+makeToken:preservingCase:" = GSMime;
	    "-copyWithZone:" = GSMime;
	    "-estimatedSize" = GSMime;
	    "-fullValue" = GSMime;
	    "-initWithName:value:" = GSMime;
	    "-initWithName:value:parameters:" = GSMime;
	    "-name" = GSMime;
	    "-namePreservingCase:" = GSMime;
	    "-objectForKey:" = GSMime;
	    "-objects" = GSMime;
	    "-parameterForKey:" = GSMime;
	    "-parameters" = GSMime;
	    "-parametersPreservingCase:" = GSMime;
	    "-rawMimeData" = GSMime;
	    "-rawMimeDataPreservingCase:" = GSMime;
	    "-rawMimeDataPreservingCase:foldedAt:" = GSMime;
	    "-rawMimeDataPreservingCase:foldedAt:to:" = GSMime;
	    "-setObject:forKey:" = GSMime;
	    "-setParameter:forKey:" = GSMime;
	    "-setParameters:" = GSMime;
	    "-setValue:" = GSMime;
	    "-text" = GSMime;
	    "-value" = GSMime;
	};
	GSMimeParser = {
	    "+documentFromData:" = GSMime;
	    "+mimeParser" = GSMime;
	    "-contextFor:" = GSMime;
	    "-data" = GSMime;
	    "-decodeData:fromRange:intoData:withContext:" = GSMime;
	    "-excess" = GSMime;
	    "-expectNoHeaders" = GSMime;
	    "-isComplete" = GSMime;
	    "-isHttp" = GSMime;
	    "-isInBody" = GSMime;
	    "-isInHeaders" = GSMime;
	    "-mimeDocument" = GSMime;
	    "-parse:" = GSMime;
	    "-parseHeader:" = GSMime;
	    "-parseHeaders:remaining:" = GSMime;
	    "-scanHeaderBody:into:" = GSMime;
	    "-scanName:" = GSMime;
	    "-scanPastSpace:" = GSMime;
	    "-scanSpecial:" = GSMime;
	    "-scanToken:" = GSMime;
	    "-setBuggyQuotes:" = GSMime;
	    "-setDefaultCharset:" = GSMime;
	    "-setHeadersOnly" = GSMime;
	    "-setIsHttp" = GSMime;
	};
	GSMimeSMTPClient = {
	    "-abort" = GSMime;
	    "-delegate" = GSMime;
	    "-flush:" = GSMime;
	    "-lastError" = GSMime;
	    "-queueSize" = GSMime;
	    "-send:" = GSMime;
	    "-send:envelopeID:" = GSMime;
	    "-setDelegate:" = GSMime;
	    "-setHostname:" = GSMime;
	    "-setIdentity:" = GSMime;
	    "-setMaximum:" = GSMime;
	    "-setOriginator:" = GSMime;
	    "-setPort:" = GSMime;
	    "-setUsername:" = GSMime;
	    "-state" = GSMime;
	    "-stateDesc" = GSMime;
	};
	GSMimeSerializer = {
	    "+binarySerializer" = GSMime;
	    "+smtp7bitSerializer" = GSMime;
	    "-copyWithZone:" = GSMime;
	    "-dataEncoding" = GSMime;
	    "-encodeDocument:" = GSMime;
	    "-encodePart:to:" = GSMime;
	    "-foldAt" = GSMime;
	    "-setDataEncoding:" = GSMime;
	    "-setFoldAt:" = GSMime;
	    "-setTextEncoding:" = GSMime;
	    "-setUse8bit:" = GSMime;
	    "-textEncoding" = GSMime;
	    "-use8bit" = GSMime;
	};
	GSSAXHandler = {
	    "+handler" = GSXML;
	    "-attribute:value:" = GSXML;
	    "-attributeDecl:name:type:typeDefValue:defaultValue:" = GSXML;
	    "-cdataBlock:" = GSXML;
	    "-characters:" = GSXML;
	    "-comment:" = GSXML;
	    "-elementDecl:type:" = GSXML;
	    "-endDocument" = GSXML;
	    "-endElement:" = GSXML;
	    "-endElement:prefix:href:" = GSXML;
	    "-entityDecl:type:public:system:content:" = GSXML;
	    "-error:" = GSXML;
	    "-error:colNumber:lineNumber:" = GSXML;
	    "-externalSubset:externalID:systemID:" = GSXML;
	    "-fatalError:" = GSXML;
	    "-fatalError:colNumber:lineNumber:" = GSXML;
	    "-getEntity:" = GSXML;
	    "-getParameterEntity:" = GSXML;
	    "-globalNamespace:href:prefix:" = GSXML;
	    "-hasExternalSubset" = GSXML;
	    "-hasInternalSubset" = GSXML;
	    "-ignoreWhitespace:" = GSXML;
	    "-internalSubset:externalID:systemID:" = GSXML;
	    "-isStandalone" = GSXML;
	    "-lib" = GSXML;
	    "-loadEntity:at:" = GSXML;
	    "-namespaceDecl:href:prefix:" = GSXML;
	    "-notationDecl:public:system:" = GSXML;
	    "-parser" = GSXML;
	    "-processInstruction:data:" = GSXML;
	    "-reference:" = GSXML;
	    "-startDocument" = GSXML;
	    "-startElement:attributes:" = GSXML;
	    "-startElement:prefix:href:attributes:namespaces:" = GSXML;
	    "-unparsedEntityDecl:public:system:notationName:" = GSXML;
	    "-warning:" = GSXML;
	    "-warning:colNumber:lineNumber:" = GSXML;
	};
	GSTLSCertificateList = {
	    "+listFromFile:" = GSTLS;
	    "-certificateList" = GSTLS;
	    "-count" = GSTLS;
	    "-expiresAt" = GSTLS;
	    "-expiresAt:" = GSTLS;
	};
	GSTLSCredentials = {
	    "+credentialsFromCAFile:defaultCAFile:revokeFile:defaultRevokeFile:certificateFile:certificateKeyFile:certificateKeyPassword:asClient:debug:" = GSTLS;
	    "+selfSigned:" = GSTLS;
	    "-credentials" = GSTLS;
	    "-key" = GSTLS;
	    "-list" = GSTLS;
	    "-trust" = GSTLS;
	};
	GSTLSDHParams = {
	    "+current" = GSTLS;
	    "+generate" = GSTLS;
	    "+paramsFromFile:" = GSTLS;
	    "-params" = GSTLS;
	};
	GSTLSObject = {
	    "+dataForTLSFile:" = GSTLS;
	    "+setData:forTLSFile:" = GSTLS;
	};
	GSTLSPrivateKey = {
	    "+keyFromFile:withPassword:" = GSTLS;
	    "-key" = GSTLS;
	};
	GSTLSSession = {
	    "+sessionWithOptions:direction:transport:push:pull:" = GSTLS;
	    "-active" = GSTLS;
	    "-age" = GSTLS;
	    "-credentials" = GSTLS;
	    "-debug" = GSTLS;
	    "-disconnect:" = GSTLS;
	    "-handshake" = GSTLS;
	    "-initWithOptions:direction:transport:push:pull:" = GSTLS;
	    "-issuer" = GSTLS;
	    "-owner" = GSTLS;
	    "-pending" = GSTLS;
	    "-problem" = GSTLS;
	    "-read:length:" = GSTLS;
	    "-sessionInfo" = GSTLS;
	    "-verify" = GSTLS;
	    "-write:length:" = GSTLS;
	};
	GSXMLAttribute = {
	    "-value" = GSXML;
	};
	GSXMLDocument = {
	    "+documentWithVersion:" = GSXML;
	    "-description" = GSXML;
	    "-encoding" = GSXML;
	    "-lib" = GSXML;
	    "-makeNodeWithNamespace:name:content:" = GSXML;
	    "-root" = GSXML;
	    "-setRoot:" = GSXML;
	    "-version" = GSXML;
	    "-writeToFile:atomically:" = GSXML;
	    "-writeToURL:atomically:" = GSXML;
	};
	"GSXMLDocument(XSLT)" = {
	    "+xsltTransformFile:stylesheet:" = GSXML;
	    "+xsltTransformFile:stylesheet:params:" = GSXML;
	    "+xsltTransformXml:stylesheet:" = GSXML;
	    "+xsltTransformXml:stylesheet:params:" = GSXML;
	    "-xsltTransform:" = GSXML;
	    "-xsltTransform:params:" = GSXML;
	};
	GSXMLNamespace = {
	    "+descriptionFromType:" = GSXML;
	    "+typeFromDescription:" = GSXML;
	    "-href" = GSXML;
	    "-lib" = GSXML;
	    "-next" = GSXML;
	    "-prefix" = GSXML;
	    "-type" = GSXML;
	    "-typeDescription" = GSXML;
	};
	GSXMLNode = {
	    "+descriptionFromType:" = GSXML;
	    "+typeFromDescription:" = GSXML;
	    "-attributes" = GSXML;
	    "-content" = GSXML;
	    "-description" = GSXML;
	    "-document" = GSXML;
	    "-escapedContent" = GSXML;
	    "-firstAttribute" = GSXML;
	    "-firstChild" = GSXML;
	    "-firstChildElement" = GSXML;
	    "-isElement" = GSXML;
	    "-isText" = GSXML;
	    "-lib" = GSXML;
	    "-makeAttributeWithName:value:" = GSXML;
	    "-makeChildWithNamespace:name:content:" = GSXML;
	    "-makeComment:" = GSXML;
	    "-makeNamespaceHref:prefix:" = GSXML;
	    "-makePI:content:" = GSXML;
	    "-makeText:" = GSXML;
	    "-name" = GSXML;
	    "-namespace" = GSXML;
	    "-namespaceDefinitions" = GSXML;
	    "-next" = GSXML;
	    "-nextElement" = GSXML;
	    "-objectForKey:" = GSXML;
	    "-parent" = GSXML;
	    "-previous" = GSXML;
	    "-previousElement" = GSXML;
	    "-propertiesAsDictionaryWithKeyTransformationSel:" = GSXML;
	    "-setNamespace:" = GSXML;
	    "-setObject:forKey:" = GSXML;
	    "-type" = GSXML;
	    "-typeDescription" = GSXML;
	};
	GSXMLParser = {
	    "+loadEntity:at:" = GSXML;
	    "+parser" = GSXML;
	    "+parserWithContentsOfFile:" = GSXML;
	    "+parserWithContentsOfURL:" = GSXML;
	    "+parserWithData:" = GSXML;
	    "+parserWithSAXHandler:" = GSXML;
	    "+parserWithSAXHandler:withContentsOfFile:" = GSXML;
	    "+parserWithSAXHandler:withContentsOfURL:" = GSXML;
	    "+parserWithSAXHandler:withData:" = GSXML;
	    "+setDTDs:" = GSXML;
	    "+xmlEncodingStringForStringEncoding:" = GSXML;
	    "-abortParsing" = GSXML;
	    "-columnNumber" = GSXML;
	    "-doValidityChecking:" = GSXML;
	    "-document" = GSXML;
	    "-errNo" = GSXML;
	    "-getWarnings:" = GSXML;
	    "-initWithSAXHandler:" = GSXML;
	    "-initWithSAXHandler:withContentsOfFile:" = GSXML;
	    "-initWithSAXHandler:withContentsOfURL:" = GSXML;
	    "-initWithSAXHandler:withData:" = GSXML;
	    "-initWithSAXHandler:withInputStream:" = GSXML;
	    "-keepBlanks:" = GSXML;
	    "-lineNumber" = GSXML;
	    "-messages" = GSXML;
	    "-parse" = GSXML;
	    "-parse:" = GSXML;
	    "-publicID" = GSXML;
	    "-resolveEntities:" = GSXML;
	    "-saveMessages:" = GSXML;
	    "-substituteEntities:" = GSXML;
	    "-systemID" = GSXML;
	};
	GSXMLRPC = {
	    "-URLHandle:resourceDataDidBecomeAvailable:" = GSXML;
	    "-URLHandle:resourceDidFailLoadingWithReason:" = GSXML;
	    "-URLHandleResourceDidBeginLoading:" = GSXML;
	    "-URLHandleResourceDidCancelLoading:" = GSXML;
	    "-URLHandleResourceDidFinishLoading:" = GSXML;
	    "-buildMethod:params:" = GSXML;
	    "-buildMethodCall:params:" = GSXML;
	    "-buildResponseWithFaultCode:andString:" = GSXML;
	    "-buildResponseWithParams:" = GSXML;
	    "-compact" = GSXML;
	    "-delegate" = GSXML;
	    "-initWithURL:" = GSXML;
	    "-initWithURL:certificate:privateKey:password:" = GSXML;
	    "-makeMethodCall:params:timeout:" = GSXML;
	    "-parseMethod:params:" = GSXML;
	    "-parseResponse:params:" = GSXML;
	    "-result" = GSXML;
	    "-sendMethodCall:params:timeout:" = GSXML;
	    "-setCompact:" = GSXML;
	    "-setDebug:" = GSXML;
	    "-setDelegate:" = GSXML;
	    "-setTimeZone:" = GSXML;
	    "-timeZone" = GSXML;
	    "-timeout:" = GSXML;
	};
	"GSXMLRPC(Delegate)" = {
	    "-completedXMLRPC:" = GSXML;
	};
	GSXPathBoolean = {
	    "-booleanValue" = GSXML;
	};
	GSXPathContext = {
	    "-evaluateExpression:" = GSXML;
	    "-initWithDocument:" = GSXML;
	    "-registerNamespaceWithPrefix:href:" = GSXML;
	};
	GSXPathNodeSet = {
	    "-count" = GSXML;
	    "-length" = GSXML;
	    "-nodeAtIndex:" = GSXML;
	};
	GSXPathNumber = {
	    "-doubleValue" = GSXML;
	};
	GSXPathString = {
	    "-stringValue" = GSXML;
	};
	"NSArray(GNUstepBase)" = {
	    "-insertionPosition:usingFunction:context:" = "NSArray+GNUstepBase";
	    "-insertionPosition:usingSelector:" = "NSArray+GNUstepBase";
	};
	"NSAttributedString(GNUstepBase)" = {
	    "-attributedSubstringWithRange:" = "NSAttributedString+GNUstepBase";
	};
	"NSBundle(GNUstepBase)" = {
	    "+pathForLibraryResource:ofType:inDirectory:" = "NSBundle+GNUstepBase";
	};
	"NSCalendarDate(GNUstepBase)" = {
	    "-isoYear" = "NSCalendarDate+GNUstepBase";
	    "-weekOfYear" = "NSCalendarDate+GNUstepBase";
	};
	"NSData(GNUstepBase)" = {
	    "+dataWithRandomBytesOfLength:" = "NSData+GNUstepBase";
	    "-escapedRepresentation" = "NSData+GNUstepBase";
	    "-escapedRepresentation:" = "NSData+GNUstepBase";
	    "-gunzipped" = "NSData+GNUstepBase";
	    "-gzipped:" = "NSData+GNUstepBase";
	    "-hexadecimalRepresentation" = "NSData+GNUstepBase";
	    "-hexadecimalRepresentation:" = "NSData+GNUstepBase";
	    "-initWithHexadecimalRepresentation:" = "NSData+GNUstepBase";
	    "-isGzipped" = "NSData+GNUstepBase";
	    "-md5Digest" = "NSData+GNUstepBase";
	    "-uudecodeInto:name:mode:" = "NSData+GNUstepBase";
	    "-uuencodeInto:name:mode:" = "NSData+GNUstepBase";
	};
	"NSFileHandle(GNUstepBase)" = {
	    "+fileHandleAsServerAtAddress:service:protocol:" = "NSFileHandle+GNUstepBase";
	    "-socketAddress" = "NSFileHandle+GNUstepBase";
	};
	"NSMutableString(GNUstepBase)" = {
	    "-deletePrefix:" = "NSMutableString+GNUstepBase";
	    "-deleteSuffix:" = "NSMutableString+GNUstepBase";
	    "-immutableProxy" = "NSMutableString+GNUstepBase";
	    "-replaceString:withString:" = "NSMutableString+GNUstepBase";
	    "-trimLeadSpaces" = "NSMutableString+GNUstepBase";
	    "-trimSpaces" = "NSMutableString+GNUstepBase";
	    "-trimTailSpaces" = "NSMutableString+GNUstepBase";
	};
	"NSNumber(GNUstepBase)" = {
	    "+valueFromString:" = "NSNumber+GNUstepBase";
	};
	"NSObject(GNUstepBase)" = {
	    "-compare:" = "NSObject+GNUstepBase";
	    "-isInstance" = "NSObject+GNUstepBase";
	    "-makeImmutable" = "NSObject+GNUstepBase";
	    "-makeImmutableCopyOnFail:" = "NSObject+GNUstepBase";
	    "-notImplemented:" = "NSObject+GNUstepBase";
	    "-shouldNotImplement:" = "NSObject+GNUstepBase";
	    "-subclassResponsibility:" = "NSObject+GNUstepBase";
	};
	"NSObject(GSAtExit)" = {
	    "+atExit" = "NSObject+GNUstepBase";
	};
	"NSObject(GSCleanup)" = {
	    "+leak:" = "NSObject+GNUstepBase";
	    "+leakAt:" = "NSObject+GNUstepBase";
	    "+registerAtExit" = "NSObject+GNUstepBase";
	    "+registerAtExit:" = "NSObject+GNUstepBase";
	    "+setShouldCleanUp:" = "NSObject+GNUstepBase";
	    "+shouldCleanUp" = "NSObject+GNUstepBase";
	};
	"NSObject(GSMimeSMTPClient)" = {
	    "-smtpClient:mimeFailed:" = GSMime;
	    "-smtpClient:mimeSent:" = GSMime;
	    "-smtpClient:mimeUnsent:" = GSMime;
	};
	"NSObject(MemoryFootprint)" = {
	    "+contentSizeOf:excluding:" = "NSObject+GNUstepBase";
	    "-sizeInBytes" = "NSObject+GNUstepBase";
	    "-sizeInBytesExcluding:" = "NSObject+GNUstepBase";
	    "-sizeOfContentExcluding:" = "NSObject+GNUstepBase";
	    "-sizeOfInstance" = "NSObject+GNUstepBase";
	};
	"NSProcessInfo(GNUstepBase)" = {
	    "-debugLoggingEnabled" = "NSProcessInfo+GNUstepBase";
	    "-debugSet" = "NSProcessInfo+GNUstepBase";
	    "-setDebugLoggingEnabled:" = "NSProcessInfo+GNUstepBase";
	};
	"NSString(GNUstepBase)" = {
	    "+stringWithFormat:arguments:" = "NSString+GNUstepBase";
	    "-stringByDeletingPrefix:" = "NSString+GNUstepBase";
	    "-stringByDeletingSuffix:" = "NSString+GNUstepBase";
	    "-stringByReplacingString:withString:" = "NSString+GNUstepBase";
	    "-stringByTrimmingLeadSpaces" = "NSString+GNUstepBase";
	    "-stringByTrimmingSpaces" = "NSString+GNUstepBase";
	    "-stringByTrimmingTailSpaces" = "NSString+GNUstepBase";
	    "-substringFromRange:" = "NSString+GNUstepBase";
	};
	"NSString(GSXML)" = {
	    "-stringByEscapingXML" = GSXML;
	    "-stringByUnescapingXML" = GSXML;
	};
	"NSTask(GNUstepBase)" = {
	    "+executableExtensions" = "NSTask+GNUstepBase";
	    "+executablePath:" = "NSTask+GNUstepBase";
	    "+launchPathForTool:" = "NSTask+GNUstepBase";
	};
	"NSURL(GNUstepBase)" = {
	    "-fullPath" = "NSURL+GNUstepBase";
	    "-pathWithEscapes" = "NSURL+GNUstepBase";
	};
	"NSURL(GNUstepBaseAdditions)" = {
	    "-cacheKey" = "NSURL+GNUstepBase";
	    "-initWithScheme:user:password:host:port:fullPath:parameterString:query:fragment:" = "NSURL+GNUstepBase";
	};
    };
    variable = {
	"_GSIE" = TypesAndConstants;
	"struct _GSIArray" = TypesAndConstants;
	"struct _GSIMapBucket" = TypesAndConstants;
	"struct _GSIMapNode" = TypesAndConstants;
	"struct _GSIMapTable" = TypesAndConstants;
    };
}