<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSBrowser" up="Gui">
  <head>
    <title>NSBrowser</title>
    <author name="Scott Christley">
      <email address="scottc@net-community.com">
        scottc@net-community.com
      </email>
    </author>
    <author name="Felipe A. Rodriguez">
      <email address="far@ix.netcom.com">
        far@ix.netcom.com
      </email>
    </author>
    <author name="Franck Wolff">
      <email address="wolff@cybercable.fr">
        wolff@cybercable.fr
      </email>
    </author>
    <author name="Mirko Viviani">
      <email address="mirko.viviani@rccr.cremona.it">
        mirko.viviani@rccr.cremona.it
      </email>
    </author>
    <author name="Fred Kiefer">
      <email address="FredKiefer@gmx.de">
        FredKiefer@gmx.de
      </email>
    </author>
    <author name="Gregory Casamento">
      <email address="greg.casamento@gmail.com">
        greg.casamento@gmail.com
      </email>
    </author>
    <date>Generated at 2024-11-07 19:58:28 -0500</date>
    <abstract>
      Control to display and select from hierarchal lists
    </abstract>
    <copy>1996, 1997, 2002 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSBrowser class
      </heading>
      <class name="NSBrowser" super="NSControl" ovadd="1.0.0">
        <declared>AppKit/NSBrowser.h</declared>
        <conform>NSCoding</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <ivariable type="BOOL" name="_acceptsAlphaNumericalKeys" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_acceptsArrowKeys" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="SEL" name="_action" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_allowsBranchSelection" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_allowsEmptySelection" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_allowsMultipleSelection" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="int" name="_alphaNumericalLastColumn" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSCell*" name="_browserCellPrototype" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSMutableArray*" name="_browserColumns" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="id" name="_browserDelegate" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="Class" name="_browserMatrixClass" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSString*" name="_charBuffer" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSMutableDictionary*" name="_columnDictionary" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSBrowserColumnResizingType" name="_columnResizing" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSSize" name="_columnSize" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSString*" name="_columnsAutosaveName" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="SEL" name="_doubleAction" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="int" name="_firstVisibleColumn" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_hasHorizontalScroller" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSScroller*" name="_horizontalScroller" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_isLoaded" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_isTitled" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_itemBasedDelegate" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="int" name="_lastColumnLoaded" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSTimeInterval" name="_lastKeyPressed" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="int" name="_lastVisibleColumn" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="int" name="_maxVisibleColumns" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="CGFloat" name="_minColumnWidth" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_passiveDelegate" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSString*" name="_pathSeparator" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_prefersAllColumnUserResizing" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_reusesColumns" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSRect" name="_scrollerRect" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_sendsActionOnAlphaNumericalKeys" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_sendsActionOnArrowKeys" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_separatesColumns" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_skipUpdateScroller" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_takesTitleFromPreviousColumn" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="id" name="_target" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <method type="Class" factory="yes" ovadd="1.0.0">
          <sel>cellClass</sel>
          <desc>
            <p>
              Returns the NSBrowserCell class (regardless of
              whether a
              <ref type="method" id="-setCellClass:">
                -setCellClass:
              </ref>
              message has been sent to a particular instance).
              This method is not meant to be used by applications.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setCellClass:">
                -setCellClass:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="10.3.0">
          <sel>removeSavedColumnsWithAutosaveName:</sel>
          <arg type="NSString*">name</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>acceptsArrowKeys</sel>
          <desc>
            <p>
              Returns whether the arrow keys are enabled. By
              default <code>YES</code>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setAcceptsArrowKeys:">
                -setAcceptsArrowKeys:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>addColumn</sel>
          <desc>
            <p>
              Adds a column to the right of the last column,
              adjusts subviews and scrolls to make the new
              column visible if needed.
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>allowsBranchSelection</sel>
          <desc>
            <p>
              Returns whether the user can select branch items
              when multiple selection is enabled. By default
              <code>YES</code>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setAllowsBranchSelection:">
                -setAllowsBranchSelection:
              </ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>allowsEmptySelection</sel>
          <desc>
            <p>
              Returns whether there can be nothing selected. By
              default <code>YES</code>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setAllowsEmptySelection:">
                -setAllowsEmptySelection:
              </ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>allowsMultipleSelection</sel>
          <desc>
            <p>
              Returns whether the user can select multiple
              items. By default <code>YES</code>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-allowsMultipleSelection">
                -allowsMultipleSelection
              </ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.5.0">
          <sel>allowsTypeSelect</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.6.0">
          <sel>autohidesScroller</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" ovadd="10.6.0">
          <sel>backgroundColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.5.0">
          <sel>canDragRowsWithIndexes:</sel>
          <arg type="NSIndexSet*">rowIndexes</arg>
          <sel>inColumn:</sel>
          <arg type="NSInteger">columnIndex</arg>
          <sel>withEvent:</sel>
          <arg type="NSEvent*">dragEvent</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>cellPrototype</sel>
          <desc>
            <p>
              Returns the NSBrowser's prototype NSCell
              instance.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setCellPrototype:">
                -setCellPrototype:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSInteger" ovadd="10.6.0">
          <sel>clickedColumn</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSInteger" ovadd="10.6.0">
          <sel>clickedRow</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" ovadd="10.3.0">
          <sel>columnContentWidthForColumnWidth:</sel>
          <arg type="CGFloat">columnWidth</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>columnOfMatrix:</sel>
          <arg type="NSMatrix*">matrix</arg>
          <desc>
            <p>
              Returns the column number in which
              <var>matrix</var> is located. Returns -1 if
              <var>matrix</var> is not found.
            </p>
          </desc>
        </method>
        <method type="NSBrowserColumnResizingType" ovadd="10.3.0">
          <sel>columnResizingType</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" ovadd="10.3.0">
          <sel>columnWidthForColumnContentWidth:</sel>
          <arg type="CGFloat">columnContentWidth</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSString*" ovadd="10.3.0">
          <sel>columnsAutosaveName</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>delegate</sel>
          <desc>
            <p>
              Returns the NSBrowser's delegate.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setDelegate:">
                -setDelegate:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>displayAllColumns</sel>
          <desc>
            <p>
              Updates the NSBrowser to display all loaded
              columns.
            </p>
            <p>
              See Also:
              <ref type="method" id="-displayColumn:">
                -displayColumn:
              </ref>
              <ref type="method" id="-tile">
                -tile
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>displayColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <p>
              Updates the NSBrowser to display the
              <var>column</var> with the given index.
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>doClick:</sel>
          <arg type="id">sender</arg>
          <desc>
            <p>
              Responds to (single) mouse clicks in a column of
              the NSBrowser.
            </p>
            <p>
              See Also:
              <ref type="method" id="-doDoubleClick:">
                -doDoubleClick:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>doDoubleClick:</sel>
          <arg type="id">sender</arg>
          <desc>
            <p>
              Responds to double-clicks in a column of the
              NSBrowser.
            </p>
            <p>
              See Also:
              <ref type="method" id="-doClick:">
                -doClick:
              </ref>
              <ref type="method" id="-sendAction:to:">
                -sendAction:to:
              </ref>
            </p>
          </desc>
        </method>
        <method type="SEL" ovadd="1.0.0">
          <sel>doubleAction</sel>
          <desc>
            <p>
              Returns the NSBrowser's double-click action
              method.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setDoubleAction:">
                -setDoubleAction:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>drawTitle:</sel>
          <arg type="NSString*">title</arg>
          <sel>inRect:</sel>
          <arg type="NSRect">aRect</arg>
          <sel>ofColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            Draws the <var>title</var> for the <var>column</var>
            at index <var>column</var> within the rectangle defined
            by <var>aRect</var>.
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>drawTitleOfColumn:</sel>
          <arg type="NSInteger">column</arg>
          <sel>inRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>firstVisibleColumn</sel>
          <desc>
            Returns the index of the first visible column.
          </desc>
        </method>
        <method type="NSRect" ovadd="1.0.0">
          <sel>frameOfColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <p>
              Returns the rectangle containing the
              <var>column</var> at index <var>column</var>.
            </p>
          </desc>
        </method>
        <method type="NSRect" ovadd="1.0.0">
          <sel>frameOfInsideOfColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            Returns the rectangle containing the
            <var>column</var> at index <var>column</var>,
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>hasHorizontalScroller</sel>
          <desc>
            <p>
              Returns whether an NSScroller is used to scroll
              horizontally. By default a NSBrowser has a
              horizontal scroller.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setHasHorizontalScroller:">
                -setHasHorizontalScroller:
              </ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isLoaded</sel>
          <desc>
            Returns whether column zero is loaded.
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isTitled</sel>
          <desc>
            <p>
              Returns whether columns display titles. By
              default a NSBrowser displays titles.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setTitled:">
                -setTitled:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>lastColumn</sel>
          <desc>
            <p>
              Returns the index of the last column loaded.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setLastColumn:">
                -setLastColumn:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>lastVisibleColumn</sel>
          <desc>
            Returns the index of the last visible column.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>loadColumnZero</sel>
          <desc>
            Loads column zero; unloads previously loaded columns.
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>loadedCellAtRow:</sel>
          <arg type="NSInteger">row</arg>
          <sel>column:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            Loads if necessary and returns the NSCell at
            <var>row</var> in <var>column</var>. if you change
            this code, you may want to look at the
            __performLoadOfColumn: method in
            which the following code is integrated (for speed)
          </desc>
        </method>
        <method type="Class" ovadd="1.0.0">
          <sel>matrixClass</sel>
          <desc>
            <p>
              Returns the class of NSMatrix used in the
              NSBrowser's columns.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setMatrixClass:">
                -setMatrixClass:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSMatrix*" ovadd="1.0.0">
          <sel>matrixInColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <p>
              Returns the matrix located in the
              <var>column</var> identified by index
              <var>column</var>. Returns <code>nil</code> if the
              matrix does not exists
            </p>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>maxVisibleColumns</sel>
          <desc>
            <p>
              Returns the maximum number of visible columns. By
              default a NSBrowser has 3 visible columns.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setMaxVisibleColumns:">
                -setMaxVisibleColumns:
              </ref>
            </p>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>minColumnWidth</sel>
          <desc>
            <p>
              Returns the minimum column width in pixels.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setMinColumnWidth:">
                -setMinColumnWidth:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>numberOfVisibleColumns</sel>
          <desc>
            Returns the number of columns visible.
            <p>
              See Also:
              <ref type="method" id="-firstVisibleColumn">
                -firstVisibleColumn
              </ref>
              <ref type="method" id="-lastVisibleColumn">
                -lastVisibleColumn
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>path</sel>
          <desc>
            <p>
              Returns the browser's current path.
            </p>
            <p>
              See Also:
              <ref type="method" id="-pathToColumn:">
                -pathToColumn:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>pathSeparator</sel>
          <desc>
            <p>
              Returns the path separator. The default is "/".
            </p>
            <p>
              See Also:
              <ref type="method" id="-setPathSeparator:">
                -setPathSeparator:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>pathToColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <p>
              Returns a string representing the path from the
              first <var>column</var> up to, but not including,
              the <var>column</var> at index <var>column</var>.
            </p>
            <p>
              See Also: <ref type="method" id="-path">-path</ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>prefersAllColumnUserResizing</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>reloadColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            Reloads <var>column</var> if it is loaded; sets it
            as the last <var>column</var>. Reselects previously
            selected cells, if they remain.
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>reusesColumns</sel>
          <desc>
            <p>
              Returns <code>YES</code> if NSMatrix objects
              aren't freed when their columns are unloaded. By
              default a NSBrowser does not reuses their
              columns.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setReusesColumns:">
                -setReusesColumns:
              </ref>
              <ref type="method" id="-renewRows:columns:" class="NSMatrix">[NSMatrix -renewRows:columns:]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>scrollColumnToVisible:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <p>
              Scrolls to make the <var>column</var> at index
              <var>column</var> visible.
            </p>
            <p>
              See Also:
              <ref type="method" id="-scrollColumnsRightBy:">
                -scrollColumnsRightBy:
              </ref>
              <ref type="method" id="-scrollColumnsLeftBy:">
                -scrollColumnsLeftBy:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>scrollColumnsLeftBy:</sel>
          <arg type="NSInteger">shiftAmount</arg>
          <desc>
            <p>
              Scrolls columns left by <var>shiftAmount</var>
              columns.
            </p>
            <p>
              See Also:
              <ref type="method" id="-scrollColumnsRightBy:">
                -scrollColumnsRightBy:
              </ref>
              <ref type="method" id="-scrollColumnToVisible:">
                -scrollColumnToVisible:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>scrollColumnsRightBy:</sel>
          <arg type="NSInteger">shiftAmount</arg>
          <desc>
            <p>
              Scrolls columns right by <var>shiftAmount</var>
              columns.
            </p>
            <p>
              See Also:
              <ref type="method" id="-scrollColumnsLeftBy:">
                -scrollColumnsLeftBy:
              </ref>
              <ref type="method" id="-scrollColumnToVisible:">
                -scrollColumnToVisible:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.6.0">
          <sel>scrollRowToVisible:</sel>
          <arg type="NSInteger">row</arg>
          <sel>inColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>scrollViaScroller:</sel>
          <arg type="NSScroller*">sender</arg>
          <desc>
            Scrolls columns left or right based on an
            NSScroller.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>selectAll:</sel>
          <arg type="id">sender</arg>
          <desc>
            <p>
              Selects all NSCells in the last column of the
              NSBrowser.
            </p>
            <p>
              See Also:
              <ref type="method" id="-selectAll:" class="NSMatrix">
                [NSMatrix -selectAll:]
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>selectRow:</sel>
          <arg type="NSInteger">row</arg>
          <sel>inColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <p>
              Selects the cell at index <var>row</var> in the
              <var>column</var> identified by index
              <var>column</var>. If the delegate method
              <ref type="method" id="-browser:selectRow:inColumn:">
                -browser:selectRow:inColumn:
              </ref>
              is implemented, this is its responsability to select
              the cell. This method adds a NSBrowser
              <var>column</var> if needed and deselects other
              selections if the browser does not allows
              multiple selection.
            </p>
            <p>
              See Also:
              <ref type="method" id="-loadedCellAtRow:column:">
                -loadedCellAtRow:column:
              </ref>
              <ref type="method" id="-browser:selectRow:inColumn:">
                -browser:selectRow:inColumn:
              </ref>
              <ref type="method" id="-selectCellAtRow:column:" class="NSMatrix">[NSMatrix -selectCellAtRow:column:]</ref>
            </p>
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>selectedCell</sel>
          <desc>
            <p>
              Returns the last (rightmost and lowest) selected
              NSCell. Returns <code>nil</code> if no cell is
              selected
            </p>
            <p>
              See Also:
              <ref type="method" id="-selectedCells">
                -selectedCells
              </ref>
              <ref type="method" id="-selectedCellInColumn:">
                -selectedCellInColumn:
              </ref>
            </p>
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>selectedCellInColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <p>
              Returns the last (lowest) NSCell that's selected
              in <var>column</var>. Returns <code>nil</code> if no
              cell is selected
            </p>
            <p>
              See Also:
              <ref type="method" id="-selectedCell">
                -selectedCell
              </ref>
              <ref type="method" id="-selectedCells">
                -selectedCells
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSArray*" ovadd="1.0.0">
          <sel>selectedCells</sel>
          <desc>
            <p>
              Returns a NSArray of selected cells in the
              rightmost column. Returns <code>nil</code> if
              no cell is selected.
            </p>
            <p>
              See Also:
              <ref type="method" id="-selectedCell">
                -selectedCell
              </ref>
              <ref type="method" id="-selectedCellInColumn:">
                -selectedCellInColumn:
              </ref>
              [NSMatrix selectedCells]
            </p>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>selectedColumn</sel>
          <desc>
            Returns the index of the last column with a
            selected item.
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>selectedRowInColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <p>
              Returns the row index of the selected cell in the
              <var>column</var> specified by index
              <var>column</var>. Returns -1 if no cell is
              selected
            </p>
            <p>
              See Also:
              <ref type="method" id="-selectedCellInColumn:">
                -selectedCellInColumn:
              </ref>
              <ref type="method" id="-selectedRow" class="NSMatrix">
                [NSMatrix -selectedRow]
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSIndexPath*" ovadd="10.6.0">
          <sel>selectionIndexPath</sel>
          <desc>
            Returns the index path of the selected item, or
            <code>nil</code> if there is no selection.
          </desc>
        </method>
        <method type="NSArray*" ovadd="10.6.0">
          <sel>selectionIndexPaths</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>sendAction</sel>
          <desc>
            Sends the action message to the target. Returns
            <code>YES</code> upon success, <code>NO</code> if no
            target for the message could be found.
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>sendsActionOnArrowKeys</sel>
          <desc>
            <p>
              Returns <code>NO</code> if pressing an arrow key
              only scrolls the browser, <code>YES</code> if it
              also sends the action message specified by
              <ref type="method" id="-setAction:" class="NSControl">
                [NSControl -setAction:]
              </ref>
              . By default <code>YES</code>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setSendsActionOnArrowKeys:">
                -setSendsActionOnArrowKeys:
              </ref>
              <ref type="method" id="-acceptsArrowKeys">
                -acceptsArrowKeys
              </ref>
              <ref type="method" id="-setAction:" class="NSControl">
                [NSControl -setAction:]
              </ref>
              <ref type="method" id="-action" class="NSControl">
                [NSControl -action]
              </ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>separatesColumns</sel>
          <desc>
            <p>
              Returns whether columns are separated by bezeled
              borders. By default a NSBrowser has separate
              columns.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setSeparatesColumns:">
                -setSeparatesColumns:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setAcceptsArrowKeys:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Enables or disables the arrow keys as used for
              navigating within and between browsers. By
              default <code>YES</code>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-acceptsArrowKeys">
                -acceptsArrowKeys
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setAllowsBranchSelection:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether the user can select branch items when
              multiple selection is enabled. By default
              <code>YES</code>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-allowsBranchSelection">
                -allowsBranchSelection
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setAllowsEmptySelection:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether there can be nothing selected. By
              default <code>YES</code>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-allowsEmptySelection">
                -allowsEmptySelection
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setAllowsMultipleSelection:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether the user can select multiple items. By
              default <code>YES</code>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-allowsMultipleSelection">
                -allowsMultipleSelection
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.5.0">
          <sel>setAllowsTypeSelect:</sel>
          <arg type="BOOL">allowsTypeSelection</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.6.0">
          <sel>setAutohidesScroller:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.6.0">
          <sel>setBackgroundColor:</sel>
          <arg type="NSColor*">backgroundColor</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setCellClass:</sel>
          <arg type="Class">classId</arg>
          <desc>
            <p>
              Sets the class of NSCell used in the columns of the
              NSBrowser.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setCellPrototype:">
                -setCellPrototype:
              </ref>
              <ref type="method" id="-cellPrototype">
                -cellPrototype
              </ref>
              <ref type="method" id="+cellClass">
                +cellClass
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setCellPrototype:</sel>
          <arg type="NSCell*">aCell</arg>
          <desc>
            <p>
              Sets the NSCell instance copied to display items in
              the columns of NSBrowser.
            </p>
            <p>
              See Also:
              <ref type="method" id="-cellPrototype">
                -cellPrototype
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>setColumnResizingType:</sel>
          <arg type="NSBrowserColumnResizingType">type</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>setColumnsAutosaveName:</sel>
          <arg type="NSString*">name</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setDelegate:</sel>
          <arg type="id">anObject</arg>
          <desc>
            <p>
              Sets the delegate of the receiver. If not
              <code>nil</code>, the delegate must either be
              passive and respond to
              <ref type="method" id="-browser:numberOfRowsInColumn:" class="NSObject">[NSObject -browser:numberOfRowsInColumn:]</ref> or be active and respond to <ref type="method" id="-browser:createRowsForColumn:inMatrix:" class="NSObject">[NSObject -browser:createRowsForColumn:inMatrix:]</ref> but not both. If the delegate is active it must also respond to <ref type="method" id="-browser:willDisplayCell:atRow:column:" class="NSObject">[NSObject -browser:willDisplayCell:atRow:column:]</ref>. If the delegate is not <code>nil</code> but does not meet these conditions, an NSBrowserIllegalDelegateException will be raised.
            </p>
            <p>
              See Also:
              <ref type="method" id="-delegate">
                -delegate
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setDoubleAction:</sel>
          <arg type="SEL">aSelector</arg>
          <desc>
            <p>
              Sets the NSBrowser's double-click action to
              <var>aSelector</var>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-doubleAction">
                -doubleAction
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setHasHorizontalScroller:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether an NSScroller is used to scroll
              horizontally. This method add the
              horizontal scroller, adjust the various
              subviews of the NSBrowser scroller and marks
              self for display.By default a NSBrowser has a
              horizontal scroller.
            </p>
            <p>
              See Also:
              <ref type="method" id="-hasHorizontalScroller">
                -hasHorizontalScroller
              </ref>
              <ref type="method" id="-tile">
                -tile
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setLastColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <p>
              Sets the last <var>column</var> to <var>column</var>
              .
            </p>
            <p>
              See Also:
              <ref type="method" id="-lastColumn">
                -lastColumn
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setMatrixClass:</sel>
          <arg type="Class">classId</arg>
          <desc>
            <p>
              Sets the matrix class (NSMatrix or an NSMatrix
              subclass) used in the NSBrowser's columns.
            </p>
            <p>
              See Also:
              <ref type="method" id="-matrixClass">
                -matrixClass
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setMaxVisibleColumns:</sel>
          <arg type="NSInteger">columnCount</arg>
          <desc>
            <p>
              Sets the maximum number of columns displayed and
              adjusts the various subviews. By default a
              NSBrowser has 3 visible columns.
            </p>
            <p>
              See Also:
              <ref type="method" id="-maxVisibleColumns">
                -maxVisibleColumns
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setMinColumnWidth:</sel>
          <arg type="CGFloat">columnWidth</arg>
          <desc>
            <p>
              Sets the minimum column width in pixels and adjusts
              subviews.
            </p>
            <p>
              See Also:
              <ref type="method" id="-minColumnWidth">
                -minColumnWidth
              </ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>setPath:</sel>
          <arg type="NSString*">path</arg>
          <desc>
            <p>
              Parses <var>path</var> and selects corresponding
              items in the NSBrowser columns.
            </p>
            <p>
              This is the primary mechanism for programmatically
              updating the selection of a browser. It should
              result in the browser cells corresponding to the
              components being selected, and the browser
              columns up to the end of <var>path</var> (and
              just beyond if the last selected cell's
              <ref type="method" id="-isLeaf" class="NSBrowserCell">
                [NSBrowserCell -isLeaf]
              </ref>
              returns <code>YES</code>). <br /> It does
              <em>not</em> result in the browsers action being
              sent to its target, just in a change to the browser
              selection and display.
            </p>
            <p>
              If <var>path</var> begins with the
              <ref type="method" id="-pathSeparator">
                -pathSeparator
              </ref>
              then it is taken to be absolute and the first
              component in it is expected to denote a cell in
              column zero. Otherwise it is taken to be relative
              to the currently selected column.
            </p>
            <p>
              Empty components (ie where a
              <ref type="method" id="-pathSeparator">
                -pathSeparator
              </ref>
              occurs immediately after another or at the end of
              <var>path</var>) are simply ignored.
            </p>
            <p>
              The receivers delegate is asked to select each cell
              in turn using the
              <ref type="method" id="-browser:selectCellWithString:inColumn:">-browser:selectCellWithString:inColumn:</ref> method (if it implements it). If this call to the delegate returns <code>NO</code> then the attempt to set the <var>path</var> fails. <br /> If the delegate does not implement the method, the browser attempts to locate and select the cell itself, and the method fails if it is unable to locate the cell by matching its <ref type="method" id="-stringValue" class="NSCell">[NSCell -stringValue]</ref> with the component of the <var>path</var>.
            </p>
            <p>
              The method returns <code>YES</code> if
              <var>path</var> contains no components or if a cell
              corresponding to the <var>path</var> was
              found. Otherwise it returns <code>NO</code>.
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setPathSeparator:</sel>
          <arg type="NSString*">aString</arg>
          <desc>
            <p>
              Sets the path separator to <var>newString</var>. The
              default is "/".
            </p>
            <p>
              See Also:
              <ref type="method" id="-pathSeparator">
                -pathSeparator
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>setPrefersAllColumnUserResizing:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setReusesColumns:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              If <var>flag</var> is <code>YES</code>, prevents
              NSMatrix objects from being freed when their
              columns are unloaded, so they can be reused. By
              default a NSBrowser does not reuses their
              columns.
            </p>
            <p>
              See Also:
              <ref type="method" id="-reusesColumns">
                -reusesColumns
              </ref>
              <ref type="method" id="-renewRows:columns:" class="NSMatrix">[NSMatrix -renewRows:columns:]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.6.0">
          <sel>setSelectionIndexPath:</sel>
          <arg type="NSIndexPath*">path</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.6.0">
          <sel>setSelectionIndexPaths:</sel>
          <arg type="NSArray*">paths</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setSendsActionOnArrowKeys:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether pressing an arrow key will cause the
              action message to be sent (in addition to causing
              scrolling). By default <code>YES</code>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-sendsActionOnArrowKeys">
                -sendsActionOnArrowKeys
              </ref>
              <ref type="method" id="-setAcceptsArrowKeys:">
                -setAcceptsArrowKeys:
              </ref>
              <ref type="method" id="-setAction:" class="NSControl">
                [NSControl -setAction:]
              </ref>
              <ref type="method" id="-action" class="NSControl">
                [NSControl -action]
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setSeparatesColumns:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether to separate columns with bezeled
              borders and marks self for display. Does nothing
              if the NSBrowser is titled. By default a NSBrowser has
              separate columns.
            </p>
            <p>
              See Also:
              <ref type="method" id="-separatesColumns">
                -separatesColumns
              </ref>
              <ref type="method" id="-isTitled">
                -isTitled
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTakesTitleFromPreviousColumn:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether the title of a column is set to the
              string value of the selected NSCell in the
              previous column and marks self for display. By
              default <code>YES</code>
            </p>
            <p>
              See Also:
              <ref type="method" id="-takesTitleFromPreviousColumn">
                -takesTitleFromPreviousColumn
              </ref>
              <ref type="method" id="-selectedCellInColumn:">
                -selectedCellInColumn:
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTitle:</sel>
          <arg type="NSString*">aString</arg>
          <sel>ofColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <p>
              Sets the title of the <var>column</var> at index
              <var>column</var> to <var>aString</var> and marks
              the title for dispaly if the NSBrowser can diplay
              titles or if the <var>column</var>
              <var>column</var> is visible.
            </p>
            <p>
              See Also:
              <ref type="method" id="-isTitled">
                -isTitled
              </ref>
              <ref type="method" id="-titleFrameOfColumn:">
                -titleFrameOfColumn:
              </ref>
              <ref type="method" id="-titleHeight">
                -titleHeight
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTitled:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether columns display titles and marks self
              for display. Does nothing if the NSBrowser hasn't
              separates columns. By default a NSBrowser
              displays titles.
            </p>
            <p>
              See Also:
              <ref type="method" id="-isTitled">
                -isTitled
              </ref>
              <ref type="method" id="-separatesColumns">
                -separatesColumns
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>setWidth:</sel>
          <arg type="CGFloat">columnWidth</arg>
          <sel>ofColumn:</sel>
          <arg type="NSInteger">columnIndex</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>takesTitleFromPreviousColumn</sel>
          <desc>
            <p>
              Returns <code>YES</code> if the title of a column
              is set to the string value of the selected NSCell in
              the previous column. By default <code>YES</code>
            </p>
            <p>
              See Also:
              <ref type="method" id="-setTakesTitleFromPreviousColumn:">-setTakesTitleFromPreviousColumn:</ref> <ref type="method" id="-selectedCellInColumn:">-selectedCellInColumn:</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>tile</sel>
          <desc>
            Adjusts the various subviews of
            NSBrowser-scrollers, columns, titles,
            and so on-without redrawing. Your code shouldn't send
            this message. It's invoked any time the appearance of
            the NSBrowser changes. <br /> Horizontall expand the
            scroller by GSScrollerKnobOvershoot on the left
          </desc>
        </method>
        <method type="NSRect" ovadd="1.0.0">
          <sel>titleFrameOfColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <p>
              Returns the bounds of the title frame for the
              <var>column</var> at index <var>column</var>.
              Returns NSZeroRect if the NSBrowser does not
              display its titles
            </p>
            <p>
              See Also:
              <ref type="method" id="-isTitled">
                -isTitled
              </ref>
            </p>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>titleHeight</sel>
          <desc>
            <p>
              Returns the height of column titles. The Nextish
              look returns 21.
            </p>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>titleOfColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            Returns the title displayed for the
            <var>column</var> at index <var>column</var>.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>updateScroller</sel>
          <desc>
            Updates the horizontal scroller to reflect column
            positions.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>validateVisibleColumns</sel>
          <desc>
            Invokes delegate method
            <ref type="method" id="-browser:isColumnValid:">
              -browser:isColumnValid:
            </ref>
            for visible columns.
          </desc>
        </method>
        <method type="CGFloat" ovadd="10.3.0">
          <sel>widthOfColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSBrowser(GNUstepExtensions)
        category
      </heading>
      <category name="GNUstepExtensions" class="NSBrowser" ovadd="1.0.0">
        <declared>AppKit/NSBrowser.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="BOOL" ovadd="1.0.0">
          <sel>acceptsAlphaNumericalKeys</sel>
          <desc>
            Returns <code>YES</code> if the alphanumerical keys
            are enabled.
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>sendsActionOnAlphaNumericalKeys</sel>
          <desc>
            Returns <code>NO</code> if pressing an arrow key
            only scrolls the browser, <code>YES</code> if it also
            sends the action message specified by setAction:.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setAcceptsAlphaNumericalKeys:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Enables or disables the arrow keys as used for
            navigating within and between browsers.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setSendsActionOnAlphaNumericalKeys:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Sets whether pressing an arrow key will cause the
            action message to be sent (in addition to causing
            scrolling).
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSObject(NSBrowserDelegate)
        informal protocol
      </heading>
      <category name="NSBrowserDelegate" class="NSObject" ovadd="1.0.0">
        <declared>AppKit/NSBrowser.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="BOOL" ovadd="10.5.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">browser</arg>
          <sel>canDragRowsWithIndexes:</sel>
          <arg type="NSIndexSet*">rowIndexes</arg>
          <sel>inColumn:</sel>
          <arg type="NSInteger">column</arg>
          <sel>withEvent:</sel>
          <arg type="NSEvent*">event</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id" ovadd="10.6.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">browser</arg>
          <sel>child:</sel>
          <arg type="NSInteger">index</arg>
          <sel>ofItem:</sel>
          <arg type="id">item</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">sender</arg>
          <sel>createRowsForColumn:</sel>
          <arg type="NSInteger">column</arg>
          <sel>inMatrix:</sel>
          <arg type="NSMatrix*">matrix</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.6.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">browser</arg>
          <sel>didChangeLastColumn:</sel>
          <arg type="NSInteger">oldLastColumn</arg>
          <sel>toColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSViewController*" ovadd="10.6.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">browser</arg>
          <sel>headerViewControllerForItem:</sel>
          <arg type="id">item</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">sender</arg>
          <sel>isColumnValid:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            Returns <code>YES</code> iff
          </desc>
        </method>
        <method type="BOOL" ovadd="10.6.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">browser</arg>
          <sel>isLeafItem:</sel>
          <arg type="id">item</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSInteger" ovadd="10.6.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">browser</arg>
          <sel>numberOfChildrenOfItem:</sel>
          <arg type="id">item</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">sender</arg>
          <sel>numberOfRowsInColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id" ovadd="10.6.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">browser</arg>
          <sel>objectValueForItem:</sel>
          <arg type="id">item</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSViewController*" ovadd="10.6.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">browser</arg>
          <sel>previewViewControllerForLeafItem:</sel>
          <arg type="id">item</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">sender</arg>
          <sel>selectCellWithString:</sel>
          <arg type="NSString*">title</arg>
          <sel>inColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">sender</arg>
          <sel>selectRow:</sel>
          <arg type="NSInteger">row</arg>
          <sel>inColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id" ovadd="10.6.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">browser</arg>
          <sel>setObjectValue:</sel>
          <arg type="id">object</arg>
          <sel>forItem:</sel>
          <arg type="id">item</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.6.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">browser</arg>
          <sel>shouldEditItem:</sel>
          <arg type="id">item</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" ovadd="10.3.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">browser</arg>
          <sel>shouldSizeColumn:</sel>
          <arg type="NSInteger">column</arg>
          <sel>forUserResize:</sel>
          <arg type="BOOL">flag</arg>
          <sel>toWidth:</sel>
          <arg type="CGFloat">width</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" ovadd="10.3.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">browser</arg>
          <sel>sizeToFitWidthOfColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">sender</arg>
          <sel>titleOfColumn:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>browser:</sel>
          <arg type="NSBrowser*">sender</arg>
          <sel>willDisplayCell:</sel>
          <arg type="id">cell</arg>
          <sel>atRow:</sel>
          <arg type="NSInteger">row</arg>
          <sel>column:</sel>
          <arg type="NSInteger">column</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>browserColumnConfigurationDidChange:</sel>
          <arg type="NSNotification*">notification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>browserDidScroll:</sel>
          <arg type="NSBrowser*">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>browserWillScroll:</sel>
          <arg type="NSBrowser*">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id" ovadd="10.6.0">
          <sel>rootItemForBrowser:</sel>
          <arg type="NSBrowser*">browser</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSBrowserDelegate
        protocol
      </heading>
      <protocol name="NSBrowserDelegate" ovadd="1.0.0">
        <declared>AppKit/NSBrowser.h</declared>
        <conform>NSObject</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </protocol>
    </chapter>
  </body>
</gsdoc>
