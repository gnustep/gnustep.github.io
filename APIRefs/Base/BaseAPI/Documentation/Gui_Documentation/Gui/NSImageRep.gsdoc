<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSImageRep" up="Gui">
  <head>
    <title>NSImageRep</title>
    <author name="Adam Fedor">
      <email address="fedor@colorado.edu">
        fedor@colorado.edu
      </email>
    </author>
    <date>Generated at 2024-11-07 19:58:28 -0500</date>
    <abstract>
      Abstract representation of an image.
    </abstract>
    <copy>1996 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSImageRep class
      </heading>
      <class name="NSImageRep" super="NSObject" ovadd="1.0.0">
        <declared>AppKit/NSImageRep.h</declared>
        <conform>NSCoding</conform>
        <conform>NSCopying</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <ivariable type="NSInteger" name="_bitsPerSample" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSString*" name="_colorSpace" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_hasAlpha" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_isOpaque" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSInteger" name="_pixelsHigh" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSInteger" name="_pixelsWide" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSSize" name="_size" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <method type="BOOL" factory="yes" ovadd="1.0.0">
          <sel>canInitWithData:</sel>
          <arg type="NSData*">data</arg>
          <desc>
            Returns <code>NO</code>. It is the subclass'
            responsibility to implement this method.
            <p>
              See Also:
            </p>
            <list>
              <item>
                <ref type="method" id="+canInitWithData:" class="NSBitmapImageRep">[NSBitmapImageRep +canInitWithData:]</ref>
              </item>
            </list>
          </desc>
        </method>
        <method type="BOOL" factory="yes" ovadd="1.0.0">
          <sel>canInitWithPasteboard:</sel>
          <arg type="NSPasteboard*">pasteboard</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSArray*" factory="yes" ovadd="1.0.0">
          <sel>imageFileTypes</sel>
          <desc>
            Returns array produced by calling
            <ref type="method" id="-imageUnfilteredFileTypes">
              -imageUnfilteredFileTypes
            </ref>
            .
          </desc>
        </method>
        <method type="NSArray*" factory="yes" ovadd="1.0.0">
          <sel>imagePasteboardTypes</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="Class" factory="yes" ovadd="1.0.0">
          <sel>imageRepClassForData:</sel>
          <arg type="NSData*">data</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="Class" factory="yes" ovadd="1.0.0">
          <sel>imageRepClassForFileType:</sel>
          <arg type="NSString*">type</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="Class" factory="yes" ovadd="1.0.0">
          <sel>imageRepClassForPasteboardType:</sel>
          <arg type="NSString*">type</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id" factory="yes" ovadd="1.0.0">
          <sel>imageRepWithContentsOfFile:</sel>
          <arg type="NSString*">filename</arg>
          <desc>
            Returns a NSImageRep with the contents of
            <var>filename</var>.
          </desc>
        </method>
        <method type="id" factory="yes" ovadd="10.0.0">
          <sel>imageRepWithContentsOfURL:</sel>
          <arg type="NSURL*">anURL</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id" factory="yes" ovadd="1.0.0">
          <sel>imageRepWithPasteboard:</sel>
          <arg type="NSPasteboard*">pasteboard</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSArray*" factory="yes" ovadd="1.0.0">
          <sel>imageRepsWithContentsOfFile:</sel>
          <arg type="NSString*">filename</arg>
          <desc>
            Returns an array of newly allocated NSImageRep
            objects with the contents of <var>filename</var>.
          </desc>
        </method>
        <method type="NSArray*" factory="yes" ovadd="10.0.0">
          <sel>imageRepsWithContentsOfURL:</sel>
          <arg type="NSURL*">anURL</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSArray*" factory="yes" ovadd="1.0.0">
          <sel>imageRepsWithPasteboard:</sel>
          <arg type="NSPasteboard*">pasteboard</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSArray*" factory="yes" ovadd="1.0.0">
          <sel>imageUnfilteredFileTypes</sel>
          <desc>
            Returns <code>nil</code>. It is the subclass'
            responsibility to implement this method.
            <p>
              See Also:
            </p>
            <list>
              <item>
                <ref type="method" id="+imageUnfilteredFileTypes" class="NSBitmapImageRep">[NSBitmapImageRep +imageUnfilteredFileTypes]</ref>
              </item>
            </list>
          </desc>
        </method>
        <method type="NSArray*" factory="yes" ovadd="1.0.0">
          <sel>imageUnfilteredPasteboardTypes</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>registerImageRepClass:</sel>
          <arg type="Class">imageRepClass</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSArray*" factory="yes" ovadd="1.0.0">
          <sel>registeredImageRepClasses</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>unregisterImageRepClass:</sel>
          <arg type="Class">imageRepClass</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>bitsPerSample</sel>
          <desc>
            Returns the bits per sample of the receiver.
            <p>
              See Also:
            </p>
            <list>
              <item>
                <ref type="method" id="-setBitsPerSample:">
                  -setBitsPerSample:
                </ref>
              </item>
            </list>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>colorSpaceName</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>draw</sel>
          <desc>
            Primitive method which must be overridden by
            subclasses to perform their drawing. They should
            draw inside a rectangle with an origin at (0, 0) and a
            size equal to the receiver's size, and they should
            entirely fill this rectangle, overwriting the
            destination alpha as well.
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>drawAtPoint:</sel>
          <arg type="NSPoint">aPoint</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>drawInRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.6.0">
          <sel>drawInRect:</sel>
          <arg type="NSRect">dstRect</arg>
          <sel>fromRect:</sel>
          <arg type="NSRect">srcRect</arg>
          <sel>operation:</sel>
          <arg type="NSCompositingOperation">op</arg>
          <sel>fraction:</sel>
          <arg type="CGFloat">delta</arg>
          <sel>respectFlipped:</sel>
          <arg type="BOOL">respectFlipped</arg>
          <sel>hints:</sel>
          <arg type="NSDictionary*">hints</arg>
          <desc>
            Fallback implementation for subclasses which don't
            implement their own direct drawing TODO: explain
            how <ref type="method" id="-draw">-draw</ref>,
            <ref type="method" id="-drawInRect:">
              -drawInRect:
            </ref>
            ,
            <ref type="method" id="-drawAtPoint:">
              -drawAtPoint:
            </ref>
            clear their background
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>hasAlpha</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isOpaque</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>pixelsHigh</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>pixelsWide</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setAlpha:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setBitsPerSample:</sel>
          <arg type="NSInteger">anInt</arg>
          <desc>
            Sets the number of bits for each component of a pixel.
            <p>
              See Also:
            </p>
            <list>
              <item>
                <ref type="method" id="-bitsPerSample">
                  -bitsPerSample
                </ref>
              </item>
            </list>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setColorSpaceName:</sel>
          <arg type="NSString*">aString</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setOpaque:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setPixelsHigh:</sel>
          <arg type="NSInteger">anInt</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setPixelsWide:</sel>
          <arg type="NSInteger">anInt</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setSize:</sel>
          <arg type="NSSize">aSize</arg>
          <desc>
            Sets the size of the image to <var>aSize</var>.
          </desc>
        </method>
        <method type="NSSize" ovadd="1.0.0">
          <sel>size</sel>
          <desc>
            Returns the size of the image.
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSImageRep(GSQuartz)
        category
      </heading>
      <category name="GSQuartz" class="NSImageRep" ovadd="1.0.0">
        <declared>AppKit/NSImageRep.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="CGImageRef" ovadd="10.6.0">
          <sel>CGImageForProposedRect:</sel>
          <arg type="NSRect*">proposedDestRect</arg>
          <sel>context:</sel>
          <arg type="NSGraphicsContext*">referenceContext</arg>
          <sel>hints:</sel>
          <arg type="NSDictionary*">hints</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </category>
    </chapter>
  </body>
</gsdoc>
