<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSBezierPath" up="Gui">
  <head>
    <title>NSBezierPath.m</title>
    <author name="Enrico Sersale">
    </author>
    <date>Generated at 2024-11-07 19:58:28 -0500</date>
    <abstract>The NSBezierPath class</abstract>
    <copy>1999, 2005 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSBezierPath class
      </heading>
      <class name="NSBezierPath" super="NSObject" ovadd="1.0.0">
        <declared>AppKit/NSBezierPath.h</declared>
        <conform>NSCopying</conform>
        <conform>NSCoding</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="NSBezierPath*" factory="yes" ovadd="1.0.0">
          <sel>bezierPath</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSBezierPath*" factory="yes" ovadd="1.0.0">
          <sel>bezierPathWithOvalInRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSBezierPath*" factory="yes" ovadd="1.0.0">
          <sel>bezierPathWithRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSBezierPath*" factory="yes" ovadd="10.5.0">
          <sel>bezierPathWithRoundedRect:</sel>
          <arg type="NSRect">aRect</arg>
          <sel>xRadius:</sel>
          <arg type="CGFloat">xRadius</arg>
          <sel>yRadius:</sel>
          <arg type="CGFloat">yRadius</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>clipRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" factory="yes" ovadd="1.0.0">
          <sel>defaultFlatness</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSLineCapStyle" factory="yes" ovadd="1.0.0">
          <sel>defaultLineCapStyle</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSLineJoinStyle" factory="yes" ovadd="1.0.0">
          <sel>defaultLineJoinStyle</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" factory="yes" ovadd="1.0.0">
          <sel>defaultLineWidth</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" factory="yes" ovadd="1.0.0">
          <sel>defaultMiterLimit</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSWindingRule" factory="yes" ovadd="1.0.0">
          <sel>defaultWindingRule</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>drawPackedGlyphs:</sel>
          <arg type="const char*">packedGlyphs</arg>
          <sel>atPoint:</sel>
          <arg type="NSPoint">aPoint</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>fillRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>setDefaultFlatness:</sel>
          <arg type="CGFloat">flatness</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>setDefaultLineCapStyle:</sel>
          <arg type="NSLineCapStyle">lineCapStyle</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>setDefaultLineJoinStyle:</sel>
          <arg type="NSLineJoinStyle">lineJoinStyle</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>setDefaultLineWidth:</sel>
          <arg type="CGFloat">lineWidth</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>setDefaultMiterLimit:</sel>
          <arg type="CGFloat">limit</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>setDefaultWindingRule:</sel>
          <arg type="NSWindingRule">windingRule</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>strokeLineFromPoint:</sel>
          <arg type="NSPoint">point1</arg>
          <sel>toPoint:</sel>
          <arg type="NSPoint">point2</arg>
          <desc>
            Using default stroke color and default drawing
            attributes, draws a line between the two points
            specified.
          </desc>
        </method>
        <method type="void" factory="yes" ovadd="1.0.0">
          <sel>strokeRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            Using default stroke color and default drawing
            attributes, strokes a rectangle using the
            specified rect.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>addClip</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>appendBezierPath:</sel>
          <arg type="NSBezierPath*">aPath</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>appendBezierPathWithArcFromPoint:</sel>
          <arg type="NSPoint">point1</arg>
          <sel>toPoint:</sel>
          <arg type="NSPoint">point2</arg>
          <sel>radius:</sel>
          <arg type="CGFloat">radius</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>appendBezierPathWithArcWithCenter:</sel>
          <arg type="NSPoint">center</arg>
          <sel>radius:</sel>
          <arg type="CGFloat">radius</arg>
          <sel>startAngle:</sel>
          <arg type="CGFloat">startAngle</arg>
          <sel>endAngle:</sel>
          <arg type="CGFloat">endAngle</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>appendBezierPathWithArcWithCenter:</sel>
          <arg type="NSPoint">center</arg>
          <sel>radius:</sel>
          <arg type="CGFloat">radius</arg>
          <sel>startAngle:</sel>
          <arg type="CGFloat">startAngle</arg>
          <sel>endAngle:</sel>
          <arg type="CGFloat">endAngle</arg>
          <sel>clockwise:</sel>
          <arg type="BOOL">clockwise</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>appendBezierPathWithGlyph:</sel>
          <arg type="NSGlyph">glyph</arg>
          <sel>inFont:</sel>
          <arg type="NSFont*">font</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>appendBezierPathWithGlyphs:</sel>
          <arg type="NSGlyph*">glyphs</arg>
          <sel>count:</sel>
          <arg type="NSInteger">count</arg>
          <sel>inFont:</sel>
          <arg type="NSFont*">font</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>appendBezierPathWithOvalInRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>appendBezierPathWithPackedGlyphs:</sel>
          <arg type="const char*">packedGlyphs</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>appendBezierPathWithPoints:</sel>
          <arg type="NSPoint*">points</arg>
          <sel>count:</sel>
          <arg type="NSInteger">count</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>appendBezierPathWithRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.5.0">
          <sel>appendBezierPathWithRoundedRect:</sel>
          <arg type="NSRect">aRect</arg>
          <sel>xRadius:</sel>
          <arg type="CGFloat">xRadius</arg>
          <sel>yRadius:</sel>
          <arg type="CGFloat">yRadius</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSBezierPath*" ovadd="1.0.0">
          <sel>bezierPathByFlatteningPath</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSBezierPath*" ovadd="1.0.0">
          <sel>bezierPathByReversingPath</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSRect" ovadd="1.0.0">
          <sel>bounds</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>cachesBezierPath</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>closePath</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>containsPoint:</sel>
          <arg type="NSPoint">point</arg>
          <desc>
            Returns <code>YES</code> iff the path contains,
            according to the current
            <ref type="type" id="NSWindingRule">
              winding rule
            </ref>
            , the given <var>point</var>.
          </desc>
        </method>
        <method type="NSRect" ovadd="1.0.0">
          <sel>controlPointBounds</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSPoint" ovadd="1.0.0">
          <sel>currentPoint</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>curveToPoint:</sel>
          <arg type="NSPoint">aPoint</arg>
          <sel>controlPoint1:</sel>
          <arg type="NSPoint">controlPoint1</arg>
          <sel>controlPoint2:</sel>
          <arg type="NSPoint">controlPoint2</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSBezierPathElement" ovadd="1.0.0">
          <sel>elementAtIndex:</sel>
          <arg type="NSInteger">index</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSBezierPathElement" ovadd="1.0.0">
          <sel>elementAtIndex:</sel>
          <arg type="NSInteger">index</arg>
          <sel>associatedPoints:</sel>
          <arg type="NSPoint*">points</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSInteger" ovadd="1.0.0">
          <sel>elementCount</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>fill</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>flatness</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>getLineDash:</sel>
          <arg type="CGFloat*">pattern</arg>
          <sel>count:</sel>
          <arg type="NSInteger*">count</arg>
          <sel>phase:</sel>
          <arg type="CGFloat*">phase</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isEmpty</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSLineCapStyle" ovadd="1.0.0">
          <sel>lineCapStyle</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSLineJoinStyle" ovadd="1.0.0">
          <sel>lineJoinStyle</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>lineToPoint:</sel>
          <arg type="NSPoint">aPoint</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>lineWidth</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="CGFloat" ovadd="1.0.0">
          <sel>miterLimit</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>moveToPoint:</sel>
          <arg type="NSPoint">aPoint</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>relativeCurveToPoint:</sel>
          <arg type="NSPoint">aPoint</arg>
          <sel>controlPoint1:</sel>
          <arg type="NSPoint">controlPoint1</arg>
          <sel>controlPoint2:</sel>
          <arg type="NSPoint">controlPoint2</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>relativeLineToPoint:</sel>
          <arg type="NSPoint">aPoint</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>relativeMoveToPoint:</sel>
          <arg type="NSPoint">aPoint</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>removeAllPoints</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setAssociatedPoints:</sel>
          <arg type="NSPoint*">points</arg>
          <sel>atIndex:</sel>
          <arg type="NSInteger">index</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setCachesBezierPath:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setClip</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setFlatness:</sel>
          <arg type="CGFloat">flatness</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setLineCapStyle:</sel>
          <arg type="NSLineCapStyle">lineCapStyle</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setLineDash:</sel>
          <arg type="const CGFloat*">pattern</arg>
          <sel>count:</sel>
          <arg type="NSInteger">count</arg>
          <sel>phase:</sel>
          <arg type="CGFloat">phase</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setLineJoinStyle:</sel>
          <arg type="NSLineJoinStyle">lineJoinStyle</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setLineWidth:</sel>
          <arg type="CGFloat">lineWidth</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setMiterLimit:</sel>
          <arg type="CGFloat">limit</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setWindingRule:</sel>
          <arg type="NSWindingRule">windingRule</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>stroke</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>transformUsingAffineTransform:</sel>
          <arg type="NSAffineTransform*">transform</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="int" ovadd="0.0.0" ovrem="0.0.0">
          <sel>windingCountAtPoint:</sel>
          <arg type="NSPoint">point</arg>
          <desc>
            Returns the winding count, according to the
            PostScript definition, at the given
            <var>point</var>.
          </desc>
        </method>
        <method type="NSWindingRule" ovadd="1.0.0">
          <sel>windingRule</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
