<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSTextField" up="Gui">
  <head>
    <title>NSTextField</title>
    <author name="Scott Christley">
      <email address="scottc@net-community.com">
        scottc@net-community.com
      </email>
    </author>
    <author name="Felipe A. Rodriguez">
      <email address="far@ix.netcom.com">
        far@ix.netcom.com
      </email>
    </author>
    <author name="Nicola Pero">
      <email address="n.pero@mi.flashnet.it">
        n.pero@mi.flashnet.it
      </email>
    </author>
    <date>Generated at 2024-11-07 19:58:28 -0500</date>
    <abstract>
      Text field control class for text entry
    </abstract>
    <copy>1996 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSTextField class
      </heading>
      <class name="NSTextField" super="NSControl" ovadd="1.0.0">
        <declared>AppKit/NSTextField.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <ivariable type="id" name="_delegate" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="SEL" name="_error_action" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSText*" name="_text_object" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <method type="BOOL" ovadd="1.0.0">
          <sel>acceptsFirstResponder</sel>
          <desc>
            <p>
              Returns whether the NSTextField accepts to be the
              first responder. This method returns
              <code>YES</code> if the NSTextField is selectable
              and if there is no NSText object
            </p>
            <p>
              See Also:
              <ref type="method" id="-becomeFirstResponder">
                -becomeFirstResponder
              </ref>
              <ref type="method" id="-isSelectable">
                -isSelectable
              </ref>
              <ref type="method" id="-acceptsFirstResponder" class="NSView">[NSView -acceptsFirstResponder]</ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.0.0">
          <sel>allowsEditingTextAttributes</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" ovadd="1.0.0">
          <sel>backgroundColor</sel>
          <desc>
            <p>
              Returns the color used to draw the background.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setBackgroundColor:">
                -setBackgroundColor:
              </ref>
              setDrawsBackground:
              <ref type="method" id="-drawsBackground">
                -drawsBackground
              </ref>
              <ref type="method" id="-backgroundColor" class="NSTextFieldCell">[NSTextFieldCell -backgroundColor]</ref>
            </p>
          </desc>
        </method>
        <method type="NSTextFieldBezelStyle" ovadd="10.2.0">
          <sel>bezelStyle</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id&lt;NSTextFieldDelegate&gt;" ovadd="1.0.0">
          <sel>delegate</sel>
          <desc>
            <p>
              Returns the delegate object.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setDelegate:">
                -setDelegate:
              </ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>drawsBackground</sel>
          <desc>
            <p>
              Returns whether the NSTextField draws the
              background. By default <code>NO</code>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setDrawsBackground:">
                -setDrawsBackground:
              </ref>
              <ref type="method" id="-drawsBackground" class="NSTextFieldCell">[NSTextFieldCell -drawsBackground]</ref>
            </p>
          </desc>
        </method>
        <method type="SEL" ovadd="1.0.0">
          <sel>errorAction</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="10.0.0">
          <sel>importsGraphics</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isBezeled</sel>
          <desc>
            <p>
              Returns whether the NSTextField's cell has
              bezeled border.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setBezeled:">
                -setBezeled:
              </ref>
              <ref type="method" id="-isBezeled" class="NSTextFieldCell">[NSTextFieldCell -isBezeled]</ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isBordered</sel>
          <desc>
            <p>
              Returns whether the NSTextField's cell has
              border.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setBordered:">
                -setBordered:
              </ref>
              <ref type="method" id="-isBordered" class="NSTextFieldCell">[NSTextFieldCell -isBordered]</ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isEditable</sel>
          <desc>
            <p>
              Returns whether the NSTextField is editable. By
              default a NSTextField is not editable.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setEditable:">
                -setEditable:
              </ref>
              <ref type="method" id="-isEditable" class="NSCell">
                [NSCell -isEditable]
              </ref>
            </p>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isSelectable</sel>
          <desc>
            <p>
              Returns whether the NSTextField is selectable.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setSelectable:">
                -setSelectable:
              </ref>
              <ref type="method" id="-isSelectable" class="NSCell">
                [NSCell -isSelectable]
              </ref>
            </p>
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>nextText</sel>
          <desc>
            <p>
              Returns the object selected when the user presses
              the TAB key.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setNextText:">
                -setNextText:
              </ref>
              <ref type="method" id="-nextKeyView" class="NSView">
                [NSView -nextKeyView]
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSAttributedString*" ovadd="1.0.0">
          <sel>placeholderAttributedString</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>placeholderString</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>previousText</sel>
          <desc>
            <p>
              Returns the object selected when the user presses
              the Shift-TAB key.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setPreviousText:">
                -setPreviousText:
              </ref>
              <ref type="method" id="-previousKeyView" class="NSView">
                [NSView -previousKeyView]
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>selectText:</sel>
          <arg type="id">sender</arg>
          <desc>
            <p>
              Selects all the text of the NSTextField if it's
              selectable.
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>setAllowsEditingTextAttributes:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setBackgroundColor:</sel>
          <arg type="NSColor*">aColor</arg>
          <desc>
            <p>
              Sets the color used to draw the background to
              <var>aColor</var>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-backgroundColor">
                -backgroundColor
              </ref>
              <ref type="method" id="-setDrawsBackground:">
                -setDrawsBackground:
              </ref>
              <ref type="method" id="-drawsBackground">
                -drawsBackground
              </ref>
              <ref type="method" id="-setBackgroundColor:" class="NSTextFieldCell">[NSTextFieldCell -setBackgroundColor:]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.2.0">
          <sel>setBezelStyle:</sel>
          <arg type="NSTextFieldBezelStyle">style</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setBezeled:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether the NSTextField's cell has bezeled
              border.
            </p>
            <p>
              See Also:
              <ref type="method" id="-isBezeled">
                -isBezeled
              </ref>
              <ref type="method" id="-setBezeled:" class="NSTextFieldCell">[NSTextFieldCell -setBezeled:]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setBordered:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether the NSTextField's cell has border.
            </p>
            <p>
              See Also:
              <ref type="method" id="-isBordered">
                -isBordered
              </ref>
              <ref type="method" id="-setBordered:" class="NSTextFieldCell">[NSTextFieldCell -setBordered:]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setDelegate:</sel>
          <arg type="id&lt;NSTextFieldDelegate&gt;">anObject</arg>
          <desc>
            <p>
              Sets the delegate to <var>anObject</var>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-delegate">
                -delegate
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setDrawsBackground:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether the NSTextField draws the background.
              By default <code>NO</code>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-drawsBackground">
                -drawsBackground
              </ref>
              <ref type="method" id="-setDrawsBackground:" class="NSTextFieldCell">[NSTextFieldCell -setDrawsBackground:]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setEditable:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether the NSTextField's cell and the NSText
              object is editable. By default a NSTextField is
              not editable.
            </p>
            <p>
              See Also:
              <ref type="method" id="-isEditable">
                -isEditable
              </ref>
              <ref type="method" id="-setEditable:" class="NSCell">
                [NSCell -setEditable:]
              </ref>
              <ref type="method" id="-setEditable:" class="NSText">
                [NSText -setEditable:]
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setErrorAction:</sel>
          <arg type="SEL">aSelector</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>setImportsGraphics:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setNextText:</sel>
          <arg type="id">anObject</arg>
          <desc>
            <p>
              Sets the object selected when the user presses the
              TAB key to <var>anObject</var>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-nextText">
                -nextText
              </ref>
              <ref type="method" id="-setNextKeyView:" class="NSView">
                [NSView -setNextKeyView:]
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setPlaceholderAttributedString:</sel>
          <arg type="NSAttributedString*">string</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setPlaceholderString:</sel>
          <arg type="NSString*">string</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setPreviousText:</sel>
          <arg type="id">anObject</arg>
          <desc>
            <p>
              Sets the object selected when the user presses the
              shift-TAB key to <var>anObject</var>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-previousText">
                -previousText
              </ref>
              <ref type="method" id="-setPreviousKeyView:" class="NSView">[NSView -setPreviousKeyView:]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setSelectable:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <p>
              Sets whether the NSTextField's cell and the NSText
              object is selectable.
            </p>
            <p>
              See Also:
              <ref type="method" id="-isSelectable">
                -isSelectable
              </ref>
              <ref type="method" id="-setSelectable:" class="NSTextFieldCell">[NSTextFieldCell -setSelectable:]</ref> <ref type="method" id="-setSelectable:" class="NSText">[NSText -setSelectable:]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTextColor:</sel>
          <arg type="NSColor*">aColor</arg>
          <desc>
            <p>
              Sets the color with which the text will be draw to
              <var>aColor</var>.
            </p>
            <p>
              See Also:
              <ref type="method" id="-textColor">
                -textColor
              </ref>
              <ref type="method" id="-setTextColor:" class="NSTextFieldCell">[NSTextFieldCell -setTextColor:]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>setTitleWithMnemonic:</sel>
          <arg type="NSString*">aString</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSColor*" ovadd="1.0.0">
          <sel>textColor</sel>
          <desc>
            <p>
              Returns the colour used to draw the text.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setTextColor:">
                -setTextColor:
              </ref>
              <ref type="method" id="-textColor" class="NSTextFieldCell">[NSTextFieldCell -textColor]</ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>textDidBeginEditing:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>textDidChange:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>textDidEndEditing:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>textShouldBeginEditing:</sel>
          <arg type="NSText*">textObject</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>textShouldEndEditing:</sel>
          <arg type="NSText*">textObject</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSTextFieldDelegate
        protocol
      </heading>
      <protocol name="NSTextFieldDelegate" ovadd="1.0.0">
        <declared>AppKit/NSTextField.h</declared>
        <conform>NSControlTextEditingDelegate</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </protocol>
    </chapter>
  </body>
</gsdoc>
